#!/bin/sh

base=$(dirname $(dirname $0))

for region in $(cat $base/REGIONS); do
  export AWS_DEFAULT_REGION=$region

  for stack in $(aws cloudformation describe-stacks | jq -r '.Stacks[].StackName'); do
    if [[ "$stack" =~ ^convox-[0-9]+(-[a-z]+-[0-9]+)? ]] && [[ ! "$stack" =~ ^convox-0 ]]; then
      echo "deleting stack: $stack ($region)"
      aws cloudformation delete-stack --stack-name $stack
    fi
  done

  for bucket in $(aws s3api list-buckets --region us-east-1 | jq -r '.Buckets[].Name'); do
    if [[ "$bucket" =~ ^convox-[0-9]+(-[a-z]+-[0-9]+)? ]] && [[ ! "$bucket" =~ ^convox-0 ]]; then
      if [[ "$region" =~ "$(aws s3api get-bucket-location --bucket $bucket --region $region | jq -r .LocationConstraint)" ]]; then
        echo "deleting bucket: $bucket ($region)"
        aws s3 rb s3://$bucket --force --region $region
      fi
    fi
  done
  
  for eip in $(aws ec2 describe-addresses --region $region | jq -r '.Addresses[] | select(has("PrivateIpAddress") | not) | .AllocationId'); do
      echo "deleting eip: $eip ($region)"
      aws ec2 release-address --allocation-id $eip
  done

done

for cert in $(aws iam list-server-certificates | jq -r '.ServerCertificateMetadataList[].ServerCertificateName'); do
  if [[ "$cert" =~ ^cert-convox-[0-9]+(-[a-z]+-[0-9]+)? ]] && [[ ! "$cert" =~ ^cert-convox-0 ]]; then
    echo "deleting cert: $cert"
    aws iam delete-server-certificate --server-certificate-name $cert
  fi
done

for role in $(aws iam list-roles | jq -r '.Roles[].RoleName'); do
  if [[ "$role" =~ ^convox-[0-9]+(-[a-z]+-[0-9]+)? ]] && [[ ! "$role" =~ ^convox-0 ]]; then
    echo "removing policies for role: $role"
    for policy in $(aws iam list-role-policies --role-name $role | jq -r '.PolicyNames[]'); do
      echo "  removing: $policy"
      aws iam delete-role-policy --role-name $role --policy-name $policy
    done
    echo "deleting role: $role"
    aws iam delete-role --role-name $role
  fi
done
