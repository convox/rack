{{ define "resource" }}
  {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
      "BlankDatabaseSnapshotIdentifier": { "Fn::Equals": [ { "Ref": "DatabaseSnapshotIdentifier"}, "" ] },
      "BlankMaxConnections": { "Fn::Equals": [ { "Ref": "MaxConnections" }, "" ] },
      "Encrypted": { "Fn::Equals": [ { "Ref": "Encrypted" }, "true" ] },
      "Private": { "Fn::Equals": [ { "Ref": "Private" }, "true" ] }
    },
    "Parameters": {
      "AllocatedStorage": {
        "Type": "Number",
        "Default": "10",
        "Description": "Allocated storage size (GB)"
      },
      "Database": {
        "Type": "String",
        "Default": "app",
        "Description": "Default database name"
      },
      "BackupRetentionPeriod": {
        "Type": "String",
        "Default": "1",
        "Description": "The automatic RDS backup retention period, (default 1 day)"
      },
      "InstanceType": {
        "Type": "String",
        "Default": "db.t2.micro",
        "Description": "Instance class for database nodes"
      },
      "DatabaseSnapshotIdentifier": {
        "Type": "String",
        "Default": "",
        "Description": "ARN of database snapshot to restore"
      },
      "Encrypted": {
        "Type": "String",
        "Description": "Encrypt database with KMS",
        "Default": "false",
        "AllowedValues": [ "true", "false" ]
      },
      "Family": {
        "Type": "String",
        "Default": "postgres9.6",
        "Description": "Postgres version family"
      },
      "MaxConnections": {
        "Type": "String",
        "Default": "",
        "Description": "ParameterGroup max_connections value, i.e. '{DBInstanceClassMemory/15000000}'"
      },
      "MultiAZ": {
        "Type": "String",
        "Default": "false",
        "Description": "Multiple availability zone"
      },
      "Password": {
        "Type": "String",
        "Description": "Server password"
      },
      "Private": {
        "Type": "String",
        "Description": "Create in private subnets",
        "Default": "false",
        "AllowedValues": [ "true", "false" ]
      },
      "Subnets": {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "VPC subnets"
      },
      "SubnetsPrivate": {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Default": "",
        "Description": "VPC private subnets"
      },
      "Username": {
        "Type": "String",
        "Default": "postgres",
        "Description": "Server username"
      },
      "Vpc": {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "VPC"
      },
      "VpcCidr": {
        "Description": "VPC CIDR Block",
        "Type": "String"
      },
      "Version": {
        "Description": "Version of Postgres",
        "Default": "9.6.3",
        "Type": "String"
      }
    },
    "Outputs": {
      "Port5432TcpAddr": { "Value": { "Fn::GetAtt": [ "Instance", "Endpoint.Address" ] } },
      "Port5432TcpPort": { "Value": { "Fn::GetAtt": [ "Instance", "Endpoint.Port" ] } },
      "EnvPostgresDatabase": { "Value": { "Ref": "Database" } },
      "EnvPostgresPassword": { "Value": { "Ref": "Password" } },
      "EnvPostgresUsername": { "Value": { "Ref": "Username" } }
    },
    "Resources": {
      "SecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "postgres resource",
          "SecurityGroupIngress": [
            { "IpProtocol": "tcp", "FromPort": "5432", "ToPort": "5432", "CidrIp": { "Ref": "VpcCidr" } }
          ],
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "SubnetGroup": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
          "DBSubnetGroupDescription": "postgres resource",
          "SubnetIds": { "Fn::If": [ "Private",
            { "Ref": "SubnetsPrivate" },
            { "Ref": "Subnets" }
          ] }
        }
      },
      "Instance": {
        "Type": "AWS::RDS::DBInstance",
        "Properties": {
          "AllocatedStorage": { "Ref": "AllocatedStorage" },
          "DBInstanceClass": { "Ref": "InstanceType" },
          "DBInstanceIdentifier": { "Ref": "AWS::StackName" },
          "DBName": { "Fn::If": [ "BlankDatabaseSnapshotIdentifier", { "Ref": "Database" }, { "Ref": "AWS::NoValue" } ] },
          "DBSnapshotIdentifier": { "Fn::If": [ "BlankDatabaseSnapshotIdentifier", { "Ref": "AWS::NoValue" }, { "Ref": "DatabaseSnapshotIdentifier" } ] },
          "DBParameterGroupName": { "Ref": "ParameterGroup" },
          "BackupRetentionPeriod":  { "Ref": "BackupRetentionPeriod" },
          "DBSubnetGroupName": { "Ref": "SubnetGroup" },
          "Engine": "postgres",
          "EngineVersion": { "Ref": "Version" },
          "KmsKeyId": { "Fn::If": [ "Encrypted", { "Ref": "EncryptionKey" }, { "Ref": "AWS::NoValue" } ] },
          "MasterUsername": { "Ref": "Username" },
          "MasterUserPassword": { "Ref": "Password" },
          "MultiAZ": { "Ref": "MultiAZ" },
          "Port": "5432",
          "PubliclyAccessible": "false",
          "StorageEncrypted": { "Ref": "Encrypted" },
          "StorageType": "gp2",
          "VPCSecurityGroups": [ { "Ref": "SecurityGroup" } ]
        }
      },
      "ParameterGroup": {
        "Type": "AWS::RDS::DBParameterGroup",
        "Properties": {
          "Description": { "Ref": "Database" },
          "Family": { "Ref": "Family" },
          "Parameters": {
            "max_connections": { "Fn::If": [ "BlankMaxConnections", { "Ref": "AWS::NoValue" }, { "Ref": "MaxConnections" } ] }
          }
        }
      },
      "EncryptionKey": {
        "Type": "AWS::KMS::Key",
        "Condition": "Encrypted",
        "Properties": {
          "Description": { "Ref": "AWS::StackName" },
          "KeyPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "Allow administration of the key",
                "Effect": "Allow",
                "Principal": { "AWS": { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root" } },
                "Action": [ "kms:*" ],
                "Resource": "*"
              }
            ]
          }
        }
      },
      "EncryptionKeyAlias": {
        "Type": "AWS::KMS::Alias",
        "Condition": "Encrypted",
        "Properties": {
          "AliasName": { "Fn::Sub": "alias/${AWS::StackName}" },
          "TargetKeyId": { "Ref": "EncryptionKey" }
        }
      }
    }
  }
{{ end }}
