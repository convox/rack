{{ define "resource" }}
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "Private": { "Fn::Equals": [ { "Ref": "Private" }, "true" ] }
  },
  "Outputs": {
    {{ range $k, $app := .Apps }}
      "{{ upper $app.Name }}Link": {
        "Value": "{{ $app.Outputs.LogGroup }}"
      },
    {{ end }}
    "Url": {
      "Value": {
        "Ref": "Url"
      }
    }
  },
  "Parameters": {
    "Private": {
      "Description": "Flag stating if Rack is private",
      "Default": "false",
      "Type": "String"
    },
    "Release": {
      "Description": "Rack release version",
      "Type": "String"
    },
    "Url": {
      "Description": "Syslog URL, e.g. 'tcp+tls://logs1.papertrailapp.com:11235'",
      "Type": "String"
    },
    "SecurityGroups": {
      "Description": "VpcConfig security groups",
      "Type": "CommaDelimitedList"
    },
    "SubnetsPrivate": {
      "Description": "VpcConfig private subnets",
      "Type": "CommaDelimitedList"
    }
  },
  "Resources": {
    {{ range $k, $app := .Apps }}
      "{{ upper $app.Name }}Permission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": { "Ref": "Function" },
          "Principal": { "Fn::Sub": "logs.${AWS::Region}.amazonaws.com" },
          "SourceAccount": { "Ref": "AWS::AccountId" },
          "SourceArn": { "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:{{ $app.Outputs.LogGroup }}:*" }
        }
      },
      "{{ upper $app.Name }}SubscriptionFilter": {
        "Type": "AWS::Logs::SubscriptionFilter",
        "DependsOn": [ "{{ upper $app.Name }}Permission" ],
        "Properties": {
          "DestinationArn": { "Fn::GetAtt": [ "Function", "Arn" ] },
          "FilterPattern": "",
          "LogGroupName": "{{ $app.Outputs.LogGroup }}"
        }
      },
    {{ end }}
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Fn::Sub": "convox-${AWS::Region}" },
          "S3Key": { "Fn::Sub": "release/${Release}/lambda/syslog.zip" }
        },
        "Description": { "Ref": "Url" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "Role", "Arn" ] },
        "Runtime": "nodejs4.3",
        "Timeout": "25",
        "VpcConfig": { "Fn::If": [ "Private",
          { "SecurityGroupIds" : { "Ref": "SecurityGroups" }, "SubnetIds" : { "Ref": "SubnetsPrivate" } },
          { "Ref": "AWS::NoValue" }
        ] }
      }
    },
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "lambda:InvokeFunction",
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Action": [
                    "cloudformation:DescribeStacks"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:cloudformation:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":stack/",
                        {
                          "Ref": "AWS::StackName"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaCloudFormationCloudWatch"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
{{ end }}
