{{ define "resource" }}
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "Private": { "Fn::Equals": [ { "Ref": "Private" }, "true" ] }
  },
  "Outputs": {
    {{ range $k, $app := .Apps }}
      "{{ upper $app.Name }}Link": {
        "Value": "{{ $app.Outputs.LogGroup }}"
      },
    {{ end }}
    "Url": {
      "Value": {
        "Ref": "Url"
      }
    }
  },
  "Parameters": {
    "Private": {
        "Description": "Flag stating if Rack is private",
        "Default": "false",
        "Type": "String"
    },
    "Url": {
      "Description": "Syslog URL, e.g. 'tcp+tls://logs1.papertrailapp.com:11235'",
      "Type": "String"
    },
    "SecurityGroups": {
      "Description": "VpcConfig security groups",
      "Type": "CommaDelimitedList"
    },
    "SubnetsPrivate": {
      "Description": "VpcConfig private subnets",
      "Type": "CommaDelimitedList"
    }
  },
  "Resources": {
    {{ range $k, $app := .Apps }}
      "{{ upper $app.Name }}Permission": {
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Ref": "Function"
          },
          "Principal": {
            "Fn::Join": [
              ".",
              [
                "logs",
                {
                  "Ref": "AWS::Region"
                },
                "amazonaws.com"
              ]
            ]
          },
          "SourceAccount": {
            "Ref": "AWS::AccountId"
          },
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:logs:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":log-group:{{ $app.Outputs.LogGroup }}:*"
              ]
            ]
          }
        },
        "Type": "AWS::Lambda::Permission"
      },
      "{{ upper $app.Name }}SubscriptionFilter": {
        "DependsOn": [
          "{{ upper $app.Name }}Permission"
        ],
        "Properties": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "Function",
              "Arn"
            ]
          },
          "FilterPattern": "",
          "LogGroupName": "{{ $app.Outputs.LogGroup }}"
        },
        "Type": "AWS::Logs::SubscriptionFilter"
      },
    {{ end }}
    "Function": {
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                "convox",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "lambda/syslog.zip"
        },
        "Description": {
          "Ref": "Url"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs4.3",
        "Timeout": "25",
        "VpcConfig": {
          "Fn::If": [ "Private",
          {
            "SecurityGroupIds" : { "Ref": "SecurityGroups" },
            "SubnetIds" : { "Ref": "SubnetsPrivate" }
          },
          { "Ref": "AWS::NoValue" }
        ]}
      },
      "Type": "AWS::Lambda::Function"
    },
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "lambda:InvokeFunction",
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Action": [
                    "cloudformation:DescribeStacks"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:cloudformation:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":stack/",
                        {
                          "Ref": "AWS::StackName"
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaCloudFormationCloudWatch"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
{{ end }}
