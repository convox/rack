{{ define "resource" }}
  {
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Conditions": {
      "Encrypted": { "Fn::Equals": [ { "Ref": "Encrypted" }, "true" ] },
      "Private": { "Fn::Equals": [ { "Ref": "Private" }, "true" ] }
    },
    "Parameters": {
      "AutomaticFailoverEnabled": {
        "Type": "String",
        "Default": "false",
        "Description": "Indicates whether Multi-AZ is enabled. Must be accompanied with InstanceType=cache.m3.medium or higher and NumCacheCluster=2 or higher."
      },
      "Database": {
        "Type" : "String",
        "Default" : "0",
        "Description" : "Default database index"
      },
      "Encrypted": {
        "Type": "String",
        "Description": "Encrypt at rest and in transit",
        "Default": "false",
        "AllowedValues": [ "true", "false" ]
      },
      "InstanceType": {
        "Type": "String",
        "Default": "cache.t2.micro",
        "Description": "The type of instance to use"
      },
      "Private": {
        "Type": "String",
        "Description": "Create in private subnets",
        "Default": "false",
        "AllowedValues": [ "true", "false" ]
      },
      "NumCacheClusters": {
        "Type": "String",
        "Default": "1",
        "Description": "The number of cache clusters for this replication group"
      },
      "Subnets": {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "VPC subnets"
      },
      "SubnetsPrivate": {
        "Type" : "List<AWS::EC2::Subnet::Id>",
        "Default" : "",
        "Description" : "VPC private subnets"
      },
      "Version": {
        "Type": "String",
        "Default": "3.2.6"
      },
      "Vpc": {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "VPC"
      },
      "VpcCidr": {
        "Description": "VPC CIDR Block",
        "Type": "String"
      }
    },
    "Outputs": {
      "Port6379TcpAddr": { "Value": { "Fn::GetAtt": [ "ReplicationGroup", "PrimaryEndPoint.Address" ] } },
      "Port6379TcpPort": { "Value": { "Fn::GetAtt": [ "ReplicationGroup", "PrimaryEndPoint.Port" ] } },
      "EnvRedisDatabase": { "Value": { "Ref": "Database" } }
    },
    "Resources": {
      "SecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "redis resource",
          "SecurityGroupIngress": [
            { "IpProtocol": "tcp", "FromPort": "6379", "ToPort": "6379", "CidrIp": { "Ref": "VpcCidr" } }
          ],
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "CacheSubnetGroup": {
        "Type": "AWS::ElastiCache::SubnetGroup",
        "Properties": {
          "Description": "Redis subnet group",
          "SubnetIds": { "Fn::If": [ "Private",
            { "Ref": "SubnetsPrivate" },
            { "Ref": "Subnets" }
          ] }
        }
      },
      "ReplicationGroup": {
        "Type": "AWS::ElastiCache::ReplicationGroup",
        "Properties": {
          "AtRestEncryptionEnabled": { "Fn::If": [ "Encrypted", "true", { "Ref": "AWS::NoValue" } ] },
          "AutomaticFailoverEnabled": { "Ref": "AutomaticFailoverEnabled" },
          "AutoMinorVersionUpgrade": true,
          "CacheNodeType": { "Ref": "InstanceType" },
          "CacheSubnetGroupName": { "Ref": "CacheSubnetGroup" },
          "Engine": "redis",
          "EngineVersion": { "Ref": "Version" },
          "NumCacheClusters": { "Ref": "NumCacheClusters" },
          "Port": "6379",
          "ReplicationGroupDescription": { "Ref": "AWS::StackName" },
          "SecurityGroupIds": [ { "Ref": "SecurityGroup" } ],
          "TransitEncryptionEnabled": { "Fn::If": [ "Encrypted", "true", { "Ref": "AWS::NoValue" } ] }
        }
      }
    }
  }
{{ end }}
