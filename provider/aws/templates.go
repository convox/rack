// Code generated by go-bindata.
// sources:
// templates/service/fluentd.tmpl
// templates/service/memcached.tmpl
// templates/service/mysql.tmpl
// templates/service/postgres.tmpl
// templates/service/redis.tmpl
// templates/service/s3.tmpl
// templates/service/sns.tmpl
// templates/service/sqs.tmpl
// templates/service/syslog.tmpl
// templates/service/webhook.tmpl
// DO NOT EDIT!

package aws

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesServiceFluentdTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x4b\x6f\xdb\x38\x10\xbe\xfb\x57\x10\x44\x81\x02\x85\x2d\x27\x69\x17\x8b\x12\xd8\x83\x37\x8e\xbb\xd9\x75\xb7\x86\x9d\x36\x87\x45\x0e\x0c\x35\x76\xb8\x91\x48\x81\xa2\xf2\xa8\xe1\xff\x5e\x90\x7a\x58\xa2\x28\xc5\x09\x12\x15\x28\x20\x71\x38\x8f\x6f\x66\xbe\x19\x67\xbb\x45\x21\xac\xb9\x00\x84\x53\x50\x77\x9c\x01\x46\xbb\xdd\x60\x3b\x40\x08\x4f\x2e\x57\x17\x10\x27\x11\xd5\x30\x93\x2a\xa6\xfa\x07\xa8\x94\x4b\x81\x09\xc2\x27\x47\xc7\x47\xa3\xa3\xcf\xa3\xa3\xcf\x78\x68\x64\xbf\x65\x3a\xc9\x74\x8a\x09\x32\x57\x11\xda\x6e\x91\xa2\x62\x03\xe8\xdd\xed\x10\xbd\xa3\x49\x82\xc8\x1f\x28\x98\x24\x49\x6a\xd4\x23\xfb\xe0\xed\x16\x65\x49\x02\xca\x0a\x04\xff\xd2\x18\xd0\x6e\x37\xe7\xe2\xb6\x52\x63\xc5\x7e\xd0\x28\x03\x63\x74\xbb\xcd\x25\x0b\x63\xc1\x5c\x6e\xbe\x28\x99\x25\x68\xb7\xc3\x85\xf8\x6e\x58\x9a\x07\x11\x96\xa6\xf0\x77\x15\xd5\x54\x56\x0a\x6b\x36\x96\xb0\x36\x16\x8c\x60\xa9\x69\x50\xfe\x6f\x75\xe2\x05\x55\x34\x06\x0d\x6a\x1f\xa4\xab\x77\x0a\x29\x53\x3c\xd1\x05\x46\xb3\x28\x03\xa1\xa7\xe8\xfb\x72\x3e\x44\x10\x6c\x02\xf4\x5e\xb3\x84\x8c\xc7\x6b\x7b\x10\x8e\x98\x8c\x22\x60\x5a\xaa\x00\x1e\x68\x9c\x44\x10\x30\x19\x93\x93\x4f\x27\x27\x9f\xde\xe3\x61\xa9\xf5\xe2\x31\xb1\xd1\xaf\xb4\xe2\x62\x83\x1d\xb7\x96\x90\xca\x4c\x31\x78\x0d\xe8\x17\xa0\x62\x9e\x16\x29\xae\x81\xb3\x50\x32\x01\xa5\x79\xcd\x48\x71\x32\x61\x65\xb0\x11\x8d\xaf\x43\x4a\xce\xc5\x9d\xbc\x85\x59\x26\xf2\x83\x61\x5d\xb8\xfc\x6a\xac\x39\x8a\xf6\x19\xa8\xae\xd6\x4e\x77\x0d\x35\x0b\xc5\x05\xe3\x09\x8d\xda\x3a\x66\x82\x90\xbf\x25\x37\x0e\xfd\xd7\x38\x41\x08\x07\x0d\x67\xcc\xe3\x8a\x20\x84\x23\xb9\x49\x5b\x72\xc8\x31\xd3\x74\x78\x72\xb9\x22\x64\x09\x1b\xc7\x67\x8f\xe7\xc5\x3d\x1a\xd3\x9f\x52\xd0\xfb\xd4\x64\xdb\xbd\x72\x35\xe8\x7a\x6b\x82\xb0\xb2\x49\x9f\x30\x26\x33\xa1\x3b\xc1\xb4\xbe\x15\x42\xe7\x61\x37\xa4\x85\x36\x25\x9e\x07\xe9\x21\x88\x52\x25\x08\xbd\x4f\x89\x41\x96\xbc\x35\xb4\x2f\x32\xe0\xc5\xa7\xc7\x46\x24\x37\xa3\x8d\xa1\x1d\xd2\xc3\x47\xe4\xc3\x33\x32\x3b\xf0\xd8\xab\xda\xde\xfa\x38\xcf\xbb\x8b\xd4\x3a\x74\xe0\x5c\xf1\xb7\xf4\x2a\xbb\xae\x38\x69\xc6\x23\x0d\xaa\xd9\xda\x53\x48\x40\x84\xe9\x37\x37\xbf\x4f\x12\x44\x25\x7b\x35\x3c\x84\x28\xa6\x90\x6a\x2e\xa8\x71\xa3\xb3\xcc\xbe\x80\x9e\x68\xed\x2b\x34\x2f\x9f\xd8\x13\xa3\xec\xc0\x96\xc9\xc3\x5f\x50\xad\xc1\x7a\xd0\x2c\x5f\x5c\x26\xaf\x60\xa7\x43\x86\x4d\x5f\xc2\x4c\xb9\x13\x0f\xfa\xbd\x73\xaa\x8a\xb3\x36\x54\x3a\x30\xc5\xa7\x32\x74\x59\x14\xaf\x3e\xfe\x99\xb1\x5b\xf0\x10\x42\x5f\x1b\x8f\x0e\xe9\x63\x26\xc5\x9d\x7c\x78\xd5\x06\x7e\x29\xf5\x7d\xfc\x07\x1e\x8d\x76\x05\x11\xd0\x14\xc6\x16\xc4\x3b\x84\x97\x67\xf3\xb3\xc9\xea\xcc\x2c\x30\xe3\x7c\x1c\x95\x93\x36\xf8\xc9\x13\x7f\xd2\x9a\x23\xbb\x01\x66\x7b\x25\x68\x5e\xed\x19\x67\x8d\xf8\x57\x9a\xb2\x5b\x2b\xe4\x55\xf3\x17\x15\x61\x64\xdb\x12\x73\x11\xc2\x43\x70\x53\x7c\xa8\xc9\x2c\x65\xd4\x32\xd1\xd3\x31\xb9\x7c\x33\x55\x6e\xa7\x5c\x79\x9d\x59\x66\x42\xf3\xbc\xfe\x85\x0c\xe1\xff\xfa\x30\xc4\x17\x3c\x06\x99\x69\xbb\xfe\xfd\xd6\xe6\x1f\x2f\x61\x35\xc7\x79\x21\xec\xc6\xd3\x59\xe3\x93\x34\xcd\x62\x30\xd2\x0b\x19\x71\xf6\x38\x95\x2c\x8b\xa1\x35\xf0\xf0\x4a\x53\x0d\xc5\x41\x13\x0a\xb7\x3a\xf7\x1b\x8b\xa7\xc6\x53\x9d\x92\xbd\xc9\x16\x81\xb7\xc8\xe7\x6c\xbd\x06\x66\xf1\x98\x44\x91\xbc\x6f\xb3\x53\xf7\xaa\x92\xbb\x5d\x6c\xdc\x3e\x67\x50\xb9\x52\x05\xbd\xfb\x82\xdb\x36\x6e\x5b\xd5\xdf\x1a\x01\xe0\xe6\x32\x7f\x32\x3a\x3e\x1a\x1d\xff\xee\x2f\xd1\x05\xd5\x37\x46\x6e\x9c\x93\xc0\xb8\x5e\x14\x36\x31\x79\xe2\xea\x41\x38\xf4\xd3\x9b\x3e\xd4\x9f\xc2\xb6\xba\xe2\x4a\x4f\x2a\xed\x39\x8b\x64\x16\xde\x53\xcd\x6e\xc8\x22\xd3\x5f\x41\x2b\xce\xa6\x54\x53\x0f\x89\xa1\x3d\xde\xee\x0a\xeb\x91\x6d\x55\x02\x3a\xa4\x1a\x10\xaa\xad\xeb\x46\xac\xb5\x22\x78\x17\x8e\x17\x85\x6e\xb7\xad\x53\x05\x54\x43\x39\xb7\x3a\xa3\x6e\x88\xae\xb4\x02\x1a\xf7\xca\x2e\x32\x3d\x97\x9b\xb3\x3b\x10\x3a\x7d\x43\x74\x1a\x8b\xe3\x07\xf3\xef\xed\xe0\xb2\x95\xb2\xb6\xbf\x71\xb9\x14\x24\x1f\x0a\xd7\x60\x99\xfb\x0d\x63\xf4\xf9\xda\x3f\xab\x2b\x99\x8e\x0c\xf9\x46\x77\x75\xa7\x44\xd4\x89\xb6\x53\x95\x1f\xcc\x5a\x20\x4f\xcf\xf8\xf2\xf1\x24\xaa\xd2\xf3\x2a\x0e\xf4\x2c\xf1\x07\xf9\x90\x9a\x54\x8f\x5f\xc3\x13\xcf\xb8\x7f\x8e\x27\x63\x4f\x99\xe7\x8f\x4b\xf4\xdd\x5f\xdd\xcd\xca\xb3\x6b\xb5\x46\xd5\x13\xe3\xc0\xe3\x76\x41\xea\xe5\xbe\x9c\x4f\xfc\x53\x53\x5b\xb3\xb2\xb6\xec\xdb\xa5\x61\x60\xec\xfd\xbd\x73\xd5\xbf\x44\x9c\x4f\xbe\x12\xb2\x1f\xc5\xf6\x8f\x1e\x83\xdd\x60\xbf\x34\xff\x0a\x00\x00\xff\xff\x2d\xed\x69\x69\xbe\x12\x00\x00")

func templatesServiceFluentdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceFluentdTmpl,
		"templates/service/fluentd.tmpl",
	)
}

func templatesServiceFluentdTmpl() (*asset, error) {
	bytes, err := templatesServiceFluentdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/fluentd.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMemcachedTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\x78\xf6\x1a\xb6\xb1\x97\x15\x8a\x02\xae\xd6\x59\x08\x68\x53\x23\x76\xbd\x87\x20\x07\x86\x1a\x39\x44\x24\x92\xe5\x47\x8a\xc0\xd0\x7f\x2f\x48\x49\xb6\x28\xdb\x71\x12\x6c\x0e\x81\x41\xcd\xbc\x79\x7c\x7c\x33\xe4\x7e\x0f\x39\x16\x5c\x20\x10\x83\xfa\x85\x33\x24\x50\xd7\x23\x80\xfd\x08\x00\x80\x2c\x7e\xae\x37\x58\xa9\x92\x5a\xbc\x91\xba\xa2\x76\x8b\xda\x70\x29\x08\x24\x40\xe6\xd3\xd9\xf4\xcb\xf4\xdb\x97\xe9\x37\x32\x6e\xc2\x53\x29\x72\x6e\xb9\x14\x86\x24\x2d\x04\x00\x59\x69\xfe\x42\x2d\xfa\x25\x20\x37\x22\x49\x96\xff\x3a\x5a\xfa\x90\x7b\xbf\x72\x87\x05\x49\x8e\x51\x50\x8f\x81\x58\xed\x90\xc0\x03\xd4\x01\xa3\x6e\xe1\x57\x54\xd3\x0a\x2d\xea\x08\x3e\x13\xc6\x52\xc1\x70\xf3\xaa\xb0\xb7\x0e\x40\xda\x15\xb2\xb6\x9a\x8b\x5d\x4b\x32\x7c\xf9\x8e\x05\x75\xa5\xf5\x1f\x19\x65\x4f\x38\xb1\xf3\x49\xc5\x99\x96\x71\x90\x61\x9a\x2b\xbf\x1f\x1f\xb8\x79\x42\xb0\xaf\x0a\x41\x16\xc0\xdb\x9a\x60\x25\x38\x83\xa4\x4d\xaa\xbb\x6c\x72\xeb\xaa\xd4\x03\xdf\xca\x1c\xcd\x27\x58\xcd\xae\x10\x11\xae\x7a\x44\xed\xa9\x04\xfe\xc0\x4a\x67\xbc\x30\x50\x48\x0d\xf6\x89\x1b\xd0\xa8\x4a\xce\xa8\x4f\x82\x9d\x96\x4e\x9d\x92\xec\x1d\xcc\xfb\xe8\x45\x34\x52\x8d\xd4\x22\x70\x01\xaa\xc1\x01\xe3\x1e\x05\x5a\x73\x61\x4b\x05\x2d\x0d\xf6\xbf\x2d\xca\x52\xfe\x87\xf9\x96\x96\x0e\x1b\x37\x34\xe7\x3e\xee\x62\xe1\xe1\x84\xf2\xba\x2d\x71\x96\xf2\x9f\xdc\xd8\xdf\x16\x3f\xd7\x49\xb2\x4c\xe7\x49\xd2\xc4\x26\x49\x96\xff\xfe\xc6\x36\xb6\xab\xf4\x40\xfc\x52\xb9\xcb\x42\xc1\x07\xca\x36\x4a\xf8\x8c\x4b\x74\xa0\xe5\x33\x14\xf4\x84\xd7\x56\xb1\xf3\x12\x1c\x69\x6c\x57\xa9\xe7\xf0\xf6\xce\xcf\x22\xa7\x3c\xd7\x31\xfa\x19\xc9\xd2\xec\xfb\x1d\xfc\x51\x4a\xf6\xdc\xaf\x30\x30\x4f\x87\x1e\x75\xf1\xdf\xce\x2a\x67\xe3\x09\x21\xb5\x9d\xcd\xe6\xb3\xd9\x86\xa9\x45\xde\x54\x07\x12\x8c\x71\x9c\x1a\x3f\xd0\x2e\xac\x6d\x7c\x12\x7a\x2b\x6d\x3c\xef\xfd\x92\x4a\x51\xf0\x9d\xd3\xc1\xee\x4b\x91\x2b\xc9\x85\x9d\x78\x28\x34\x26\x0c\x92\xbe\xed\x7b\xd5\xfc\xef\x5f\x54\x2d\x40\x35\xa5\xa2\xfd\xde\xa1\x91\x4e\xb3\x68\x0c\x90\x35\x32\xa7\xb9\x7d\xfd\x11\x3a\xf3\xca\x51\xc6\xc1\x3d\xb9\x57\x5a\x2a\xd4\x96\x0f\x46\x0c\x00\x09\xa1\xf1\xb1\x1d\x47\x6d\x40\x5e\x5b\xca\x9e\x6f\x69\x15\x26\x6e\x3f\x35\xaa\x96\x89\x5d\x90\x30\x81\xfb\x5e\x0c\x78\xb0\x4c\xad\xb4\xb4\x92\xc9\xd2\x63\x5a\xa6\xbc\x34\x37\x5a\x56\xad\xa6\x24\x68\xec\x17\x37\xf2\x64\xc9\x7b\x2c\x53\x11\xab\xce\x79\x07\x01\x9b\xbf\x87\x88\xdc\x56\xb1\x2c\x1f\xa6\x91\x5e\x42\x7d\xe2\xe8\x70\x7a\x4d\x53\x5e\x55\xbb\xa4\xc6\xf2\x90\xd0\xf5\xf1\x07\x34\xff\xa4\xdc\xa1\x4c\x96\x9b\xa3\xf7\xb2\xa2\xf1\x5d\x37\x76\xc6\x43\xe9\x5b\xe0\xc1\x74\x8a\x81\xcf\x04\x92\x58\xd8\xeb\xaa\x75\x9e\x7f\xa7\x62\x71\x9f\xbc\x47\xb2\x85\xb3\xf2\x2f\x2e\xa4\x6e\xdf\x15\xff\xa8\x9d\xa6\xb9\x87\xf7\x37\x41\xa4\xd3\xe1\x3a\xed\xee\xf9\xc3\xee\xa2\x07\xc0\x40\xdd\xe1\xe1\x87\x13\xe8\x27\x9f\xb8\x63\x00\xb0\x14\x3b\x2e\xc2\x7e\x2b\xac\xc2\x5d\x9b\x93\x33\x01\xdd\xbb\xc8\x7b\x7c\xf2\x75\x32\xff\x1a\x07\x9d\x3c\x07\x0e\xf5\xe3\x2f\x83\xe2\x83\xb6\x19\x34\x42\xdc\xa8\xf9\xf0\x41\x15\x4f\x0d\xa8\x0f\xb7\x69\xef\xb8\x47\xdd\xff\x7a\xb4\xdf\x03\x8a\xdc\xbf\xfe\xfe\x0f\x00\x00\xff\xff\xcb\x2d\x07\xf3\x15\x0a\x00\x00")

func templatesServiceMemcachedTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMemcachedTmpl,
		"templates/service/memcached.tmpl",
	)
}

func templatesServiceMemcachedTmpl() (*asset, error) {
	bytes, err := templatesServiceMemcachedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/memcached.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5d\x6b\x1b\x39\x14\x7d\xcf\xaf\xb8\xe8\x69\x17\xdc\xe0\xba\x6c\x97\x0e\xcb\x82\x63\x3b\x61\x60\x93\x35\x71\xd6\x85\x2d\x79\x90\x35\xd7\x46\x54\x96\x54\x49\xe3\xe2\x1a\xff\xf7\x45\xf3\xad\xf9\x70\x9a\xc0\xf6\xa1\x04\xe9\x9e\x7b\x8f\x8e\xce\xbd\x23\x9f\x4e\x90\xe0\x96\x4b\x04\x62\xd1\x1c\x38\x43\x02\xe7\xf3\x15\xc0\xe9\x0a\x00\x80\x4c\x3f\xaf\x9e\x70\xaf\x05\x75\x78\xab\xcc\x9e\xba\x35\x1a\xcb\x95\x24\x10\x01\x99\x8c\xdf\x8f\xdf\x8d\x3f\xbd\x1b\x7f\x22\xa3\x3c\x7c\xa6\x64\xc2\x1d\x57\xd2\x92\xa8\x48\x01\x40\x96\x86\x1f\xa8\x43\xbf\x04\xe4\x56\x46\xd1\xe2\x5b\x4a\x85\x0f\xf9\xe2\x57\x1e\x71\x4b\xa2\x3a\x0a\xce\x23\x20\xce\xa4\x48\xe0\x19\xce\x59\x8e\x73\x91\x7e\x49\x0d\xdd\xa3\x43\x13\xa4\x9f\x0a\xa1\x18\x75\x98\xac\x9c\x32\x74\x87\x8d\x3d\x00\xf2\x74\xd4\x98\xb1\x7d\x48\xf7\x1b\x34\x05\xd3\x6c\x6b\x8e\x5b\x9a\x0a\x97\xed\xbe\x1f\x87\x3b\x96\x19\xae\x5d\x79\xd2\xaa\x04\xd8\xbc\x06\x58\xfe\x03\xe1\x97\xbb\x9b\x5f\x49\x81\x3a\x97\x70\x32\xa7\x8e\x6e\xa8\x1d\xe2\xb1\x72\x86\xcb\xdd\x10\x0f\xaa\xf5\x25\x22\x45\x28\x24\x45\x0d\x90\x74\x8f\x5d\x0a\xb1\xb4\x8e\x4a\x86\x59\xd1\xb7\xd0\x48\x36\xd7\x6e\x72\xbd\xe7\xcc\xa8\x4b\x74\xca\x3a\xc0\x04\xb5\x16\xb6\xca\x34\x98\xa9\x04\x6d\x97\xda\x7d\x2a\x1c\x9f\xfe\xfb\x26\x56\x5b\x2a\x2c\x5e\xe2\x93\x25\xd7\x02\x81\x1e\x28\x17\x74\xc3\x05\x77\x47\xf8\xa1\x64\x8f\x46\x4b\x6a\xed\x77\x65\x92\x57\x30\x09\x8b\xad\xd0\x1c\xd0\x80\x2e\xf3\x74\x2b\xd4\xbe\x6f\x15\x78\x31\x7f\x04\x64\x66\x90\x3a\x04\x2e\x41\xe7\x79\xc0\xa6\x1b\x89\xce\xf6\xa9\xd3\x27\x8e\x37\xed\x77\x4c\xd6\x54\xa4\x98\x37\x5b\xde\x56\xa3\x32\x16\x9e\x3b\x94\x57\x45\x89\x5e\xca\x7f\x71\xeb\xfe\x98\x7e\x5e\x45\xd1\x62\x36\x89\xa2\x3c\x36\x8a\xe2\xe4\xcf\x0b\xc7\x58\x2f\x67\x15\xf1\xa1\x72\xc3\x42\xc1\x2b\xca\xd6\x3e\xb9\x74\x6b\x9e\x4f\x5b\xd0\x0e\xaf\x7f\x2c\x9a\xac\xb3\xfe\x87\x16\x2e\x6c\x93\x96\x25\x3a\xc5\xd7\x9a\xf5\xeb\x5f\x6b\xb0\x5e\xce\xbc\x00\x97\x65\xef\xcd\x3c\xe3\x89\x09\xb3\xf7\xdc\xd7\x2c\x9e\x3f\xc2\x8d\x50\xec\x6b\xb3\x42\xcb\xb9\x65\xf6\x60\x42\xff\x9d\x3a\x9d\xba\x70\xfa\x2b\xe3\x3e\x7c\x18\x7f\x7c\x62\x7a\x9a\xe4\xc5\x81\x64\xa6\xac\x3f\x08\x77\xe8\xa6\xce\xe5\x1e\x2d\x67\x8a\xf7\xe9\x42\x26\x5a\x71\xe9\xae\x3d\x12\xad\xcd\x3e\x09\xcd\x0e\xab\x73\xfb\x3f\xdf\x96\x3b\x43\xb6\x12\x2f\xe4\xe1\xfe\x68\xbf\x89\xe6\x2c\x0f\x32\x17\x1f\xad\x6a\xbf\x17\xdd\x1c\x31\x7d\xe8\x6a\xbf\x17\xdd\x34\x61\x1f\xba\xda\xf7\xe8\xe0\x16\x1e\xd1\xaa\xd4\x30\x0c\xee\x61\x85\x2c\x35\xdc\x1d\xef\x8c\x4a\xf5\x4b\x06\x0b\x83\x1b\x26\x58\x1a\xa5\xd1\x38\x8e\xe1\x8c\x00\x20\x59\x68\xcb\x4c\x7b\x7f\x0e\x28\x5f\x16\xa3\x66\x78\x50\x21\x96\xbb\xec\x7a\x23\xf8\xd2\x88\x01\x7f\xd8\x58\x2f\x8d\x72\x8a\x29\xe1\x13\x3a\xa6\xfd\xdd\xdd\x1a\xb5\x2f\x2e\x9c\xf8\xfb\xf7\x6b\x4f\xaa\xbd\xe2\xbd\x1e\xeb\x40\xb3\xb2\x03\x2a\xc9\xf2\x7f\xcf\x01\xb5\xb5\x66\x71\xd2\x86\x91\x06\xe0\x3c\x30\xc8\x5e\x92\xf6\x71\xbe\x8a\xa2\xf9\x4d\x33\xf8\xa7\xa4\x0d\x20\xaf\x90\x38\x03\xc5\x89\xad\x9b\x21\xde\xe6\x8d\x50\x4e\xdc\x51\x5b\xee\xe2\xc0\xad\xc1\x5c\x9f\x74\x20\x90\x84\x72\x5e\xd4\xaa\x6a\xc2\x17\x85\xaa\xdb\xf5\x67\x54\xea\x7b\x07\x56\x3c\x3b\x9b\xe1\x91\x48\x5d\x6c\xe6\x9f\x32\x01\x36\x78\x4d\x0d\xe2\xe2\x04\xa5\xe3\x5b\x8e\x26\x2c\xec\xcf\xb3\x72\x94\x7d\x7d\xc8\x7b\xb5\x05\x7f\xa8\x3a\xbc\x3b\x52\x46\x83\x26\xe8\xa0\x9a\x9e\x6a\x01\x17\x72\xc7\x25\x56\x5e\x21\x3d\x9b\xe5\xab\x3e\x02\xf2\xdb\xf5\xc7\xeb\xc9\xef\x61\xd0\x3d\xb5\x0e\x4d\x38\x8f\xba\x43\x68\x00\x12\x0e\xc1\xee\xe4\x0b\x61\xf5\xeb\xb0\x8a\x2d\xd7\x5a\xa1\x61\xb7\x07\x3b\xe9\x46\x70\x26\x8e\x53\xc6\xd0\x5a\xbe\x11\xd8\xf7\x3e\xf2\x0d\x92\x7b\xa1\xb4\xde\x4e\x4f\xc2\xfd\xf5\x72\x16\x8c\xa9\xf6\x4f\x96\x70\x4a\xc2\xb9\x7a\x50\x35\x6c\x7f\x55\xfe\x7f\xbe\x3a\x9d\x00\x65\xe2\x7f\x5f\xfd\x17\x00\x00\xff\xff\xf5\x59\xa3\x5b\x77\x0d\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x58\x6d\x6b\x23\x37\x10\xfe\x9e\x5f\x31\xe8\xcb\xb5\xe0\x73\x9d\xb4\x77\x90\xa5\x14\x1c\x3b\x09\x86\x26\x5d\xe2\xd4\x07\x3d\x42\x91\x77\xc7\x46\x64\x2d\x6d\x25\xad\xef\x7c\x66\xff\x7b\xd1\xbe\x4b\xfb\x62\x27\xf9\x70\x5c\x34\x33\xcf\x3c\x7a\x34\x33\xd2\xe6\x78\x84\x10\x37\x8c\x23\x10\x85\x72\xcf\x02\x24\x90\xa6\x17\x00\xc7\x0b\x00\x00\x32\xfd\xb2\x7c\xc6\x5d\x1c\x51\x8d\x77\x42\xee\xa8\x5e\xa1\x54\x4c\x70\xe2\x01\xb9\x9a\x5c\x4e\x3e\x4e\xae\x3f\x4e\xae\xc9\x28\xf7\x9e\x09\x1e\x32\xcd\x04\x57\xc4\x2b\x10\x00\xc8\x4d\x44\xf9\xeb\x03\xfd\x3e\x13\x9c\x63\x50\x99\x81\xdc\x71\xcf\xbb\xfd\x2f\xa1\x91\xf9\xfd\xab\x59\x79\xc2\x8d\x41\x76\x9c\x21\x1d\x01\x21\xf0\x02\xe9\xa8\xc4\xf4\x25\xdb\x53\x8d\x27\x70\x4a\xaf\x0c\x40\xcb\x04\x33\x90\x0c\xa3\x80\x22\x3e\x95\x74\x87\x1a\xa5\x45\x79\x1a\x45\x22\xa0\x1a\xc3\xa5\x16\x92\x6e\xb1\x61\x03\x20\xcf\x87\xd8\xac\x90\xc7\x64\xb7\x46\x49\x46\xb5\x65\x8e\x1b\x9a\x44\xda\x18\x2f\x27\xb6\x41\x05\x92\xc5\xba\x90\xae\xc2\x07\x95\x27\x00\xc5\x7e\x20\xfc\x74\x7f\xf3\x33\x29\x82\xea\xbd\xce\xa9\xa6\x6b\xaa\x7a\x48\x2c\xb5\x64\x7c\xdb\x43\x82\xc6\xf1\x00\x8b\xc2\x11\xc2\x22\x01\x70\xba\xc3\x76\xfe\x05\x57\x9a\xf2\x00\x8b\x8c\x6f\xe5\x10\xae\xc7\xfa\x6a\xbc\x63\x81\x14\x03\x5c\xca\x24\x10\x44\x54\x29\xd8\x08\xd9\xa0\x25\x42\x54\x6d\x5e\x77\x74\xc7\xa2\xc3\x3b\x18\xc5\x42\xe9\xad\x44\x75\x3d\xfe\x3c\xc0\xc8\x2f\xbc\x60\x9f\x97\x3c\x6c\xf2\x7c\x2d\x1e\xed\xd2\x7e\x23\x9f\x21\x12\x65\x79\xde\x4b\x91\xc4\xb0\xa3\xdf\xff\x0d\xea\x5c\xb0\xa7\x51\x82\x23\x60\x63\x1c\xc3\x87\xe3\xfc\xa6\x54\x71\x66\x44\x7c\xc0\x9d\x90\x87\x5f\x2e\x3f\x4d\xb2\x9f\xf4\x43\x07\xf5\x24\xd2\x6c\xfa\xcf\x3b\x38\x6f\x68\xa4\x70\x80\x78\x86\x1c\x47\x08\x74\x4f\x59\x44\xd7\x2c\x62\xfa\x00\x3f\x04\xef\x28\x30\x9f\x2a\xf5\x4d\xc8\xf0\x7c\x1a\x56\xaa\x25\xca\x3d\x4a\x88\x4b\x94\x36\x7e\x3d\x2c\xde\x01\x3f\x93\x48\x35\x02\xe3\x10\xe7\x38\xa0\x92\x35\x47\xad\xce\x55\xc6\x34\xfb\x37\x0c\x57\xe6\xac\xf2\x09\x95\xcf\xa2\x51\xe9\x0b\x2f\x2d\xca\xcb\x22\x45\x27\xe5\x3f\x99\xd2\xbf\x4f\xbf\x2c\x3d\xef\x76\x76\xe5\x79\xb9\xaf\xe7\x2d\xc2\x3f\x06\xb6\xb1\xf2\x67\x15\xf1\xbe\x74\x83\x42\x9d\x9b\xf5\x9c\xb2\x36\x64\x5c\x35\x5b\xa4\xfe\x56\x28\xb3\x89\xf4\xfe\x0e\x3f\x5d\x35\x49\x99\xa4\x95\x7e\x15\x07\xdd\x99\x6b\x0d\x56\xfe\xcc\x08\x30\xbc\xd1\x4e\xe4\x19\x0b\xa5\x8d\xde\xa1\xd0\x6c\x31\x7f\x82\x9b\x48\x04\xaf\xcd\x0c\x8e\x00\x6d\xf4\xea\x86\x1e\x40\x2f\x46\x9a\xd8\x80\xdf\x29\x55\xa5\xe4\xf5\xf8\xf3\xf8\xf2\x8c\xf4\xd6\xa5\xfa\x57\xa2\xe3\xc4\xaa\x5e\xe2\x0b\xa9\x3f\xfd\xf6\xeb\xd5\x73\x10\x4f\xc3\x7c\xef\x40\xb2\x96\xa8\xef\xf0\x7b\xd4\x53\xad\xf3\x0e\x29\x27\x99\xe9\x92\x5b\x1e\xc6\x82\x71\x3d\x36\x91\xa8\x54\x76\x8b\x37\xfb\xbb\xc6\x36\xff\x7d\x1f\x76\x16\xe9\x00\xdf\xf2\x7d\x29\x4f\xf3\x12\xb6\xc0\x8b\xa7\x46\x65\xef\x03\x68\x0e\xb9\x2e\x80\xca\xde\x07\xd0\x6c\x87\x2e\x80\xca\x6e\x00\xac\xe3\x78\x42\x25\x12\x19\xa0\x75\x20\x4b\x0c\x12\xc9\xf4\x21\xbb\x58\x4e\x15\xba\xed\xdc\xa8\x06\x5f\x8a\x18\xa5\x66\x68\x8f\x2a\x00\x92\xb9\x3a\x65\x57\xb6\x25\x94\x6f\xcd\x51\x33\xc2\x4a\xb2\xe0\xdb\xec\xa8\x3d\xf8\xda\xf0\x01\xb3\xdf\x45\xec\x4b\xa1\x45\x20\x22\x83\xa9\x83\xd8\x9c\xe3\x9d\x14\xbb\xe2\xf0\x89\xa9\x05\xb3\xf6\x2c\xdc\x15\xd3\x76\x8b\xd8\x92\xad\x6c\xc6\x4a\xb5\xfc\xe7\xc5\xa2\xb6\x8a\x83\x45\xe8\x86\x91\x46\x40\xda\x33\x52\x4f\xa9\xfb\x34\x5f\x7a\xde\xfc\xa6\xe9\x7c\x96\xba\x56\xc8\xdb\x54\xce\xe2\x16\x61\xe3\x0d\xbe\xd8\xe4\x7d\x51\x8e\xff\x91\xab\x78\xb1\x67\xe7\x96\xa8\x37\xdb\xe3\x48\x6c\x45\x07\xe5\xaa\x7a\xf2\xa4\x56\x75\xf7\x9e\x23\x54\xd7\x4b\xbe\xe2\xd9\x32\xda\x5b\x22\xce\x83\xca\x8a\xb5\x5e\xc5\xbd\x71\x8b\x10\xb9\x66\x1b\x86\xd2\x4e\x6c\xf6\xb3\xd4\x34\x78\x7d\xcc\x3b\xd6\x09\x7f\xac\xfa\xbc\x3d\x5e\x1c\x57\xfb\x85\xd8\x0a\xb4\xcd\xed\xf0\x46\x19\xb5\x62\x9b\x55\xe9\x04\xde\xf2\x2d\xe3\xd8\x73\xd5\x56\xf6\xc6\x55\x54\x37\x4e\xb1\xe6\x00\x3e\x50\xa5\x51\xda\x33\xae\x3d\xd8\x7a\x42\xec\xd9\xda\x1e\xa8\x76\x58\xfd\xe6\xad\x3f\x38\x8b\x35\xc7\xd5\x1e\x1f\x96\x25\x59\x47\x2c\x88\x0e\xd3\x20\x40\xa5\xd8\x3a\xc2\xae\xa7\x9f\x69\xb7\xbc\xb2\xca\x42\xde\xc6\x0e\xd0\xca\x9f\x59\x73\xcf\xfd\x84\xb5\x27\x2f\xa4\xd5\x5b\xb1\xab\x89\x9c\xc3\x3e\xd9\x4a\x8e\xff\x79\x93\xc7\x1a\x36\xa7\x2b\xb4\xfe\x4a\xab\x5c\x8b\x25\x57\xec\xae\x2f\xf1\xc2\xe6\x7c\xf7\xb4\x47\x57\xd7\xdf\x18\x46\x6e\xc3\x3d\x8a\xfc\xd6\x84\x74\x34\xf4\xc7\x06\x6b\x52\x41\xd7\xd4\xba\x28\xff\x4d\x2f\x8e\x47\x40\x1e\x42\x9a\x5e\xfc\x1f\x00\x00\xff\xff\xc8\x05\x65\x0e\x4b\x11\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x51\x6f\xe2\x46\x10\x7e\xcf\xaf\x18\xed\x33\x41\x1c\x57\xb5\x8d\xd5\xab\x44\x09\x39\x59\x6a\x52\x04\x94\x93\x7a\xca\xc3\xb2\x3b\xc0\xea\xec\x5d\x77\x77\x9c\x34\x42\xfc\xf7\x6a\x6d\x83\xbd\x36\x90\x5c\x74\x79\x88\x22\xcf\x78\xbe\x6f\xbe\xf9\x76\xbc\xd9\xed\x40\xe2\x5a\x69\x04\xe6\xd0\x3e\x29\x81\x0c\xf6\xfb\x2b\x80\xdd\x15\x00\x00\x1b\x7d\x99\x2f\x30\xcd\x12\x4e\x78\x67\x6c\xca\x69\x89\xd6\x29\xa3\x19\x44\xc0\x86\x83\x0f\x83\xeb\xc1\xcd\xf5\xe0\x86\xf5\xca\xf4\xb1\xd1\x52\x91\x32\xda\xb1\xa8\x2a\x01\xc0\xa6\x56\x3d\x71\x42\xff\x08\xd8\x9d\x8e\xa2\xc9\xbf\x39\x4f\x7c\xca\x57\xff\x64\x86\x6b\x16\xd5\x59\xb0\xef\x01\x23\x9b\x23\x83\x47\xd8\x17\x35\xf6\x55\xf9\x29\xb7\x3c\x45\x42\x1b\x94\x1f\xe5\x64\x52\x4e\x4a\xdc\x71\x95\x98\x27\xb4\x13\xcd\x57\x09\xca\x46\x0e\x00\x5b\xbc\x64\x9e\x01\x9b\x93\x55\x7a\x53\x11\x2e\x22\xb7\xb8\xe6\x79\x42\x3e\xb8\xe6\x89\xc3\x30\xe6\x84\x55\x99\x6f\xc9\xc7\x63\x2d\x95\xe0\x84\x0e\x9e\xb7\x48\x5b\xb4\x70\x9f\x27\xa4\xae\x47\xff\x80\x72\x80\x25\x6e\x1f\xee\x73\x47\xb0\x42\xe0\x42\x98\x34\xe3\x5a\xa1\x84\x67\x45\x5b\x88\xb5\x23\xae\x05\x7a\x32\x9f\x04\x17\x5b\xec\xa7\x1f\xfb\x29\x4a\x95\xa7\x60\x2c\x6c\xd5\xc6\x17\xe5\x5a\xc2\x43\x9e\x8e\x7d\xc2\x38\xc9\x1d\xa1\xfd\x34\xac\xe3\x7d\x56\x11\xdc\x1f\x98\xb2\x5b\x4e\x7c\xc5\x1d\x9e\xe8\x19\x2e\x36\xed\xa3\x83\x73\x1d\xfb\x60\x95\x08\xb2\x42\x00\xa5\x25\xfe\xd7\x65\xd0\x6c\xed\x1d\xca\x97\x62\xd0\xb0\x9f\x2a\x61\xcd\x85\x11\x2c\xb6\x08\xf4\x92\x21\x98\x35\xa8\x0a\x13\xc8\x40\xee\xb0\x4b\xaa\xe1\xbc\xb7\xf1\x09\xa0\xc6\x16\x39\xf9\x86\x21\x2b\xeb\x80\xcb\x57\x1a\xc9\xbd\xd5\x3d\xa3\x24\x31\xcf\x28\x97\x3c\xc9\xb1\xb4\x7b\x69\xec\xde\x21\x17\x1e\x3b\x94\x5b\x73\x77\xef\xd0\xf2\xc3\x2b\xf2\xe9\x3c\x5d\xa1\xf5\x02\x16\xaa\x83\xa8\xa0\x60\x6d\x2c\xd0\x56\x39\xb0\x98\x25\xde\xe8\xca\x68\xd8\x58\x93\x67\x5d\x69\xe7\x95\x14\x27\xe9\xfd\xa9\x1c\xfd\x36\xfa\x32\x8f\xa2\xc9\x78\x18\x45\x65\x6e\x14\xc5\xf2\xf7\x0b\xd4\x96\xd3\xf1\x51\xe0\x73\x70\xe7\x07\x0a\xdf\x01\x5b\x5b\xff\x92\xf3\x3d\x9f\xf6\xe0\x3b\xbc\x96\x99\x38\x2d\x41\x4d\x63\x39\x1d\x7b\x0e\x97\x3b\x3f\x59\x79\xac\xa4\x0d\xab\x9f\x90\x6c\x1c\xdf\xce\xe0\x8f\xc4\x88\x6f\x4d\x84\x96\x51\x0e\xd5\x83\x75\xfa\x57\x4e\x59\x4e\xe1\xaa\x36\x96\x7e\xfe\xf8\xcb\xcd\x42\x64\x23\x59\x82\x03\x2b\xfc\x5b\x6f\xef\xcf\x48\x23\xa2\xd2\xce\xb3\xda\x28\x9f\x0b\x9f\xf4\x8a\x43\x97\x72\xfb\x32\xd1\x72\x6a\x94\xa6\xbe\x2f\x84\xce\x15\xeb\xbc\x79\x36\x6b\x28\xff\xe7\x0f\x81\x2a\x0a\xb5\x70\x26\xfa\x69\x86\x52\xb9\xe6\x8a\x0c\x80\xaa\xef\xcf\x31\xee\xdf\x0e\x74\x9a\xa1\x33\xb9\x15\x18\x28\x35\x47\x91\x5b\x45\x2f\x25\x97\x57\x2c\x10\x26\x37\xc6\x34\xb5\x26\x43\x4b\x0a\xc3\x83\x04\xc0\x8a\xd4\xd6\xb8\xad\xef\x03\x0e\x1f\xea\x5e\x33\x3d\x40\x88\xf5\xa6\x50\x3c\x82\xaf\x8d\x1c\xf0\xcd\xc6\xd9\xd4\x1a\x32\xc2\x24\xbe\x20\x89\x42\xc6\x3b\x6b\xd2\x6a\x06\xcc\x8f\xc4\x3f\x5b\x98\xf6\x13\xef\xc6\x38\x0b\x34\x3b\x78\xf4\x28\x59\xf9\xf3\x18\x50\x5b\x66\x22\x96\xed\xd7\x58\xe3\x85\x7d\xc7\xfb\xc5\x06\x2c\x8f\xef\xab\xfa\x26\xdc\x91\x2a\x5e\x38\x9c\xf8\xef\x50\xb9\x25\xf0\xac\x14\xb8\xa8\x52\x2d\xbe\x50\xe5\x22\x12\x4b\x57\x5b\x34\x5e\x97\xf6\x3c\x6c\xa6\x5e\x5b\xf1\xaa\xe7\xd6\x02\xab\x9b\x3d\x93\xc8\x42\x45\x2f\xca\xd5\x39\x1a\x6f\x94\xab\x7b\xa4\xde\xa2\xd9\xa5\xfb\xd6\xb1\x8b\xb3\x49\x61\xe3\x45\xde\xbd\xd2\xc6\x56\x17\xcb\xbf\xb3\x8d\xe5\xd2\xf3\xf5\x5f\xca\x20\xb5\x20\xfd\x60\xe4\xf1\x8a\x71\x04\x0b\xee\x1e\x2d\x80\xb6\x95\x1e\x78\x1a\xbe\xdc\xf1\x5a\xab\xc0\x44\x6f\x94\xc6\xe3\xf1\x63\x27\x82\x87\x4b\xb1\xbf\x13\xf7\x7f\xed\x0f\x7f\x0a\x93\x4e\x7d\xd2\x8f\xf0\x9d\x60\x0b\x3e\x3c\x85\xcd\x48\x7b\x7a\xa1\x97\x1b\xa3\xf0\x73\x9f\x13\x17\xdf\x8a\xde\x5b\xf5\xc3\xc5\x21\xdb\xb7\xf2\x70\x73\xc1\xfe\x78\x63\x69\xf8\xf0\xea\xf0\x7b\x7f\xb5\xdb\x01\x6a\xe9\xff\x85\xf8\x3f\x00\x00\xff\xff\xfd\xaf\xc0\xe0\x5a\x0c\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceS3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x0c\x78\x29\x60\x28\x8d\xd3\x1c\xda\xe5\xcd\x4d\xb2\x6d\xba\x5b\xc7\x88\xd3\xdd\xc3\xc2\x07\x86\x1a\xd9\x6c\x64\xd2\x25\x29\x27\x81\xa1\xff\x5e\x90\x92\xac\x0f\xd2\x4e\x5a\x2c\xb0\x58\x01\x86\x21\x72\xf8\x38\x1c\xbe\x37\x33\xda\xed\x20\xc5\x4c\x48\x04\x62\x50\x6f\x05\x47\x02\x65\x79\x02\xb0\x3b\x01\x00\x20\x93\xcf\xf3\x7b\x5c\x6f\x72\x66\xf1\xbd\xd2\x6b\x66\x3f\xa1\x36\x42\x49\x02\x14\xc8\x4f\xe3\xf3\xf1\xe9\xf8\xdd\xe9\xf8\x1d\x49\x2a\xf3\x4b\x25\x53\x61\x85\x92\x86\xd0\x1a\x02\x80\xdc\xab\x8d\xe0\x6e\x00\xc8\x7b\x49\xe9\x54\x59\x42\xe1\x4b\xf3\x7a\xfd\x4f\xc1\x72\xd3\x8c\xdc\x61\x46\x68\xb3\x04\xca\x04\x08\x81\x05\x94\xee\x97\x34\x78\xb5\x0f\x42\x2e\x5b\xd0\x28\x4a\xc7\xd0\x43\x59\x5d\xa0\x87\xf3\x48\x35\x20\x99\x31\xcd\xd6\x68\x51\xc7\x9d\xae\x07\xdc\xd0\xcb\x06\xfd\xc1\xe7\x56\x3b\xcc\xa4\x9d\xba\xc2\x8c\x15\xb9\x3b\x17\xe9\x0f\x1b\xae\xc5\xc6\x36\x11\x9b\x4f\xe7\xe0\x81\x61\xca\xd6\x08\x99\xd2\x20\x95\x15\x99\xe0\xac\x8a\x5a\xbd\xf4\xd0\x59\xff\xab\x2f\x19\xcb\x0d\x1e\x73\xe8\x5a\xb2\x87\x1c\x61\xdb\xee\xd2\x78\xd0\x0b\xd1\x1d\x1a\x55\x68\x8e\xbd\x08\xfd\x5a\xf0\x47\xb4\x3d\xb7\x1a\xc7\xa8\x67\x0e\xa5\xf3\x0b\x4a\x6b\xb3\xa4\x6b\x34\xd3\x6a\x83\xda\x8a\x1e\xe0\x7e\x76\xc2\x39\x1a\x73\xa9\xa4\xd5\x2a\x77\x58\x33\x2d\xb6\xcc\x62\x0f\xa3\xe3\x82\x8b\x65\xc5\x84\xfa\xde\xab\xbd\x2d\xe3\x8f\x7e\xaa\x0d\xe7\x7e\xe1\xb4\x13\xf5\x4b\x25\x33\xb1\x2c\xb4\x7f\x89\xf8\x03\x15\xc3\x6e\x32\xcf\xae\x9a\x18\x43\x44\xf7\x84\x0b\x61\xcf\xa4\xde\x26\x9e\xa7\x51\xe3\x43\x20\x1e\xe8\x7a\x8b\xd2\xfa\x6b\x33\x17\xf4\xf6\xe1\x6f\xe4\xf6\x52\x23\xb3\x98\xd2\x51\xd4\xa1\xae\x03\x6e\x5d\xad\x95\x3f\x94\x90\xd5\x59\x28\x49\xdc\x1f\xd3\x92\xb2\x27\x43\x8d\x34\x24\x19\xc6\xf1\x0e\x97\x9e\x2d\x65\x30\x33\xe1\x5c\x15\xd2\xde\xa4\x83\xc9\x46\xbc\xb0\xd8\x6b\x2d\x7c\x82\x3b\xf9\x7f\x01\xb8\xc3\xb5\xda\x7e\x9f\x01\x88\x8e\x2f\x22\xa3\xd1\x50\xd5\xbb\x41\xe3\xcb\x54\x7d\x62\xb9\x4b\x6f\x21\xee\x10\x33\x94\x43\x9b\x65\x02\x31\xf4\xc9\xdf\x49\x47\xa1\x53\x3b\x97\x8d\x98\x2d\x1c\xbd\xeb\xcc\x92\x46\xc4\x07\xc3\x30\x1e\x74\x7d\x11\x71\xf5\x9e\x2d\x0f\xc9\x67\xb7\x3b\x1b\x45\x83\xfa\xfb\xe4\xf2\x03\x85\x3b\xcc\x50\xa3\xe4\x42\x2e\xab\x24\x3c\x53\xb9\xe0\x2f\x3e\x0b\x33\xb0\x6c\x09\x62\xbd\xc9\x05\x17\x36\x7f\x01\xee\x85\x65\xc0\xae\xb0\x67\xfc\x80\x99\xd2\xe8\x87\xab\xe4\xf3\x63\x74\xc7\xfb\x95\x30\x90\x89\x67\x34\xc0\x6a\x43\xd8\x68\xb5\x15\x75\xf4\x00\xb5\x56\x1a\x9e\x56\x28\x41\x58\xe0\x4c\xfe\x60\x61\xcb\x72\x91\x32\x8b\xb0\x41\xbd\x16\xc6\x99\x1a\x50\xd2\x6f\x66\x9d\x0f\x47\xf6\x12\x6e\xa3\x27\xa5\x1f\x99\x56\x85\x4c\xc1\x08\xc9\x11\xae\x70\x83\x32\x35\xb7\x12\xd6\x85\xb1\xf0\x80\x60\x2c\xb3\x82\x03\x93\x29\x3c\x89\x3c\xaf\xfd\x50\x12\x78\x53\xba\x59\x0e\xfb\x74\x0f\x76\xc5\x2c\xa4\xca\x79\x87\xcf\xc2\x44\x4f\x3b\x3a\x2b\x63\x5c\xee\x31\xe7\x48\xd6\xf4\x96\x1f\xf0\x65\x2f\x9c\x2a\xd2\x24\x01\x52\xd1\x82\x0e\x95\x55\x1b\x40\x79\x28\x89\xbc\x95\x5f\xee\x59\x04\xa4\xeb\xbc\x97\x41\x3d\xee\x3a\xd0\x2b\xc8\xfb\xd6\xa7\x4d\x00\xc9\xa0\x5c\xef\x2b\xd3\x74\x4e\x69\xef\xa8\xad\x61\xa7\x32\xc2\xa0\xb2\x56\xc6\x57\x8a\x17\xeb\x3a\x0d\xf6\x53\x65\x23\x4e\xe2\x5b\xb3\xf1\x2f\xa7\xe7\xe3\xd3\xf3\x9f\x07\x31\x27\x37\x29\xa9\x1a\x91\xb8\x03\xde\xc6\xa9\x18\xfd\x26\x14\xbe\x04\xe5\x79\x2e\x3c\xc4\x79\x58\x8e\xaf\xb3\x0c\xb9\x6f\x3c\x26\x79\xae\x9e\x42\x83\x99\x16\x92\x8b\x0d\xcb\xe3\x65\x76\xf2\x79\xee\x16\x8f\xc8\xab\x09\x6b\xc2\xeb\x50\x87\x79\xc0\x9d\x8d\xce\x8a\x87\x5c\x98\xd5\x10\x68\x11\x00\x35\x54\x27\xdf\xa8\x38\x04\x0e\x75\x79\x14\x0b\x91\x96\x1f\xc5\x23\x46\x27\x01\x88\xf3\x73\xee\x0f\x34\xd1\xf2\x2d\x67\xba\xa0\x23\x57\x3b\x8f\x35\x4f\x07\xaa\xd8\x70\xa4\xff\x5e\xf6\x64\xd4\x6b\xfe\x7c\x00\xc2\x1c\xfe\xad\x6b\x73\xeb\x70\xa8\xfa\xbf\x0c\xea\x48\xff\xdd\xec\x75\x33\xf9\x93\x52\x6f\x13\x57\xf2\x50\xc8\xcc\xae\xdc\xda\x33\xae\xe4\x56\x3d\x9f\x0d\x7a\x63\x27\xc9\x6a\xd5\x40\x7b\x75\x06\xa8\xae\xc5\x89\xf8\xa2\xea\x94\x87\xf2\x7d\x2d\x51\xbc\xa6\xf0\x56\xc9\x00\x70\x50\xcc\xad\x0a\x2b\x2b\x73\x41\x3f\x0a\x63\x23\xed\x7e\x6d\xbd\x97\xda\xa0\x11\x03\x57\x1f\xdc\x5d\x77\x59\x49\xdd\xed\xef\xfa\x2d\x4e\x4b\xca\x72\x11\x32\xb2\x4c\xbe\xda\x39\x62\xcd\xe4\x57\x75\x1f\x12\x20\x67\x23\x12\x3b\x45\xbf\x59\xeb\x4e\x97\xc7\x18\x5a\x31\xa1\x2a\xa3\x47\x69\xda\x1a\xbe\x89\xab\x8e\xd5\xc1\xf7\x95\xa7\x7a\xc7\xb7\x32\xfa\xd1\x78\x5b\xd8\x4d\x61\x5f\xfb\x64\x8c\x14\xf9\xda\xea\xed\xa7\x0c\x21\x5a\xc3\x08\xca\x1c\xb9\x46\xfb\x3a\x96\xbb\xe2\xdf\xd0\x4e\xac\x57\x49\x07\x33\x09\x31\x16\xc3\x20\x9c\xb8\xdf\x6e\x07\x28\x53\x28\xcb\x93\x7f\x03\x00\x00\xff\xff\xc2\xbe\x10\x8f\x69\x11\x00\x00")

func templatesServiceS3TmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceS3Tmpl,
		"templates/service/s3.tmpl",
	)
}

func templatesServiceS3Tmpl() (*asset, error) {
	bytes, err := templatesServiceS3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/s3.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSnsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\x78\x0c\xe4\xd8\xee\xa5\x5d\xde\x84\x6e\xb6\x70\x3f\x5c\x27\x4a\xb7\x87\x40\x07\x2e\x4d\x6f\x88\x95\x49\x85\xa4\x36\x4d\x0d\xfd\xf7\x82\xa4\x64\x89\xa4\x62\xfb\xd8\x83\x91\x48\x33\xf3\xf8\x38\xef\x0d\xa9\xe3\x11\x76\x6c\xcf\x05\x03\xa4\x99\xfa\xce\x29\x43\xd0\xb6\x33\x80\xe3\x0c\x00\x00\xe5\x7f\x17\x8f\xec\x50\x57\xc4\xb0\x4f\x52\x1d\x88\xf9\xcc\x94\xe6\x52\x20\xc0\x80\x7e\x58\xae\x96\xf3\xe5\x87\xf9\xf2\x03\xca\x7c\xfa\xcf\x52\xec\xb8\xe1\x52\x68\x84\x3b\x08\x00\x74\xdf\xb0\x86\xd9\x17\x80\x3e\x09\x8c\x37\xd2\x20\x0c\x4f\xfd\xe3\xdd\x4b\x43\x2a\xdd\xbf\x79\x60\x7b\x84\xfb\x12\x68\x33\x40\x08\x4a\x68\xed\xcf\xc1\xb5\xdd\x4a\x5b\xa2\xc8\x81\x19\xa6\xa6\x57\xea\x5e\x00\xa0\xc7\xb7\x9a\x39\xb6\x85\x51\x5c\x7c\xed\x98\xba\xd0\x47\xb6\x27\x4d\x65\xc9\xa0\xf0\xb5\xa6\x8a\xd7\xa6\xdf\x66\x71\x5f\x80\x03\x86\x0d\x39\x30\x30\x12\x74\xf3\xc5\xa6\x7c\x71\x0f\xe6\x99\x6b\x30\xb2\xe6\x14\x75\x18\x21\xd3\x07\xa6\x65\xa3\x28\x0b\x88\x3e\xba\xfc\x94\x28\x76\x2d\xc7\xb8\xd8\x14\x18\xfb\xa4\x11\xb3\xad\x92\x35\x53\x86\x07\x58\x2e\x52\x78\x46\x9e\x34\x86\xa7\xae\xb7\xeb\xbd\xeb\x6b\xd7\x97\x6c\x54\x01\x41\xbd\xc3\xb8\x13\xbb\x5a\x72\x61\x06\xa5\x7e\x95\x5c\x78\x00\x8c\x32\xfb\x87\x28\x81\xc9\xab\xc6\xfa\x45\xa3\x6c\x24\x97\xe3\xfc\xc0\xbe\xba\x96\xb5\x49\x24\xa7\x54\x36\xc2\xac\x77\x51\xb0\x57\x19\x4a\xab\x6f\x16\x13\xda\x2a\x69\x24\x95\x95\x4d\xb5\x2b\x06\xf1\x28\xbd\x03\x85\x7e\xc9\x8d\xfc\x4c\x2a\x07\x3e\x4a\x2b\xdb\x72\x5c\xe5\x55\xb0\xa2\xda\x2d\x07\x8c\x0b\x43\xe8\x37\x17\x19\xea\xfb\xff\x4e\x2b\x7b\xfe\x5b\x59\x71\xfa\x16\x6a\x79\x9a\x83\x61\x97\xd9\x7b\x4a\xdf\x17\x18\x8f\x81\xa6\xf5\x86\x48\x70\x9f\xfc\x51\xd2\xe6\xc0\x84\x89\xc3\x00\xa8\x1f\x54\x37\xa7\xcb\x9f\xe6\xab\xe5\x7c\xf5\x63\x64\x01\xb4\xde\x9d\x08\x26\xab\x7b\x5f\x19\x62\x98\x5b\xc1\x9a\x2a\x16\xa8\xe0\xae\x7e\x85\x12\xe9\xee\xf6\x7b\x46\xdd\x64\xe5\x55\x25\x5f\xd3\x84\xad\xe2\x82\xf2\x9a\x54\x28\x66\x0e\xdd\xb9\x63\x8b\x6f\x50\x14\x4a\x4d\x92\xd3\xde\xf3\x29\x8a\xed\x6d\x02\x51\x26\x10\xfd\x84\xfe\x6f\x8c\x3f\xb6\xcf\x54\x73\x94\xf8\x9d\x7f\x63\x93\x41\x00\x64\x79\x16\x6e\x43\xb9\x12\xd7\xec\x49\x68\x7c\x83\x6f\xd2\x7d\x0d\x43\xd0\x33\x4d\x96\x8b\xdf\x84\xcf\x6d\x39\x7b\x47\x3a\xdf\x01\x9d\xc8\x96\x70\xb5\x54\xe3\xf6\x3c\x1b\x53\x6b\xbc\x58\xe8\x17\x7d\x7b\x56\x0d\x74\x4b\x0e\xe4\x5f\x29\xc8\xab\xbe\xa5\xf2\xb0\x48\x93\x43\x81\x50\x98\xd1\xab\x14\xac\x1f\xf7\xa1\x3c\x73\x3e\xfc\xa5\x99\x3a\x73\xc8\xaf\xf3\x3f\x30\x76\x39\x57\x9d\xf1\x5b\x62\x9e\x6d\xed\x82\x4a\xf1\x5d\xfe\xb3\x08\x86\xca\x1f\x08\xbe\x2a\x1a\xd4\xee\xac\xf0\x42\xda\xfb\x6c\x53\xe4\x94\x32\xad\xe3\x61\xbf\x74\xa6\x5c\x3a\x0f\x86\xb9\x07\x80\x77\x47\x7f\x98\x59\x9f\xe5\xec\x37\x95\x75\x1a\x4b\x08\x3d\x0c\x18\x9e\x9c\x2f\x02\x07\x5b\xe5\xa6\x7c\x60\x65\x4d\x83\x83\xee\x61\x1c\x26\x2e\x80\x32\x35\x7e\x60\xec\xd0\xf5\xed\x39\x43\xf8\xbe\xff\xc6\xde\x2e\xb9\x62\x48\xbc\xca\x1a\xd6\x44\xfd\x3d\x76\xb2\xaf\x73\x16\x4c\xdc\x5f\xc1\xe7\xc9\x9f\x8d\xa9\x1b\x73\xe9\xe3\xc4\x5f\xa6\x63\x74\x9f\x34\xb1\xc7\x9e\xc7\x64\xb1\x15\xf1\x17\x66\x72\xe3\x0c\xd4\x81\x64\xe3\x9b\xb8\xbc\xbe\x6d\x29\xa9\x21\x71\x02\xa5\x60\x54\x31\x73\x19\x2b\xe2\x38\x92\x22\xc5\x28\xe3\xae\xce\xec\xef\x78\x04\x26\x76\xf6\x43\xfa\xbf\x00\x00\x00\xff\xff\x2d\x2c\xe5\xce\x60\x0b\x00\x00")

func templatesServiceSnsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSnsTmpl,
		"templates/service/sns.tmpl",
	)
}

func templatesServiceSnsTmpl() (*asset, error) {
	bytes, err := templatesServiceSnsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sns.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSqsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\xc1\x72\xdb\x36\x10\xbd\xfb\x2b\x76\x70\xec\x28\x8d\xe2\xa4\x9d\x09\x6f\x9a\x71\xd3\x49\x3b\x4e\x65\x53\xb5\x0f\x1e\x1d\x20\x70\x25\xee\x04\x04\x18\x60\x29\x45\xd5\xe8\xdf\x3b\x00\x49\x89\x94\x18\x2b\x3a\xf8\x60\xbd\xb7\x0f\xbb\x78\x0f\x2b\xed\x76\x90\xe1\x92\x0c\x82\xf0\xe8\xd6\xa4\x50\xc0\x7e\x7f\x03\xb0\xbb\x01\x00\x10\x93\xe7\x74\x86\x45\xa9\x25\xe3\x27\xeb\x0a\xc9\x4f\xe8\x3c\x59\x23\x20\x01\x71\x3b\x7e\x37\x7e\x33\xfe\xf8\x66\xfc\x51\x8c\x6a\xfa\x54\x3a\x59\x20\xa3\xf3\x22\x69\x24\x00\xc4\x3d\x7a\x2f\x57\xf8\x88\x8c\x86\xc9\x9a\x29\x3a\xb2\x59\x87\x01\x20\xee\xd0\x2b\x47\x65\x80\x45\x02\x62\x96\x23\x98\xaa\x58\xa0\x03\xbb\x04\x8f\xca\x9a\xcc\xc3\xa4\x90\xff\x59\x03\xe9\x43\x0a\x0e\x59\x92\xf1\x20\xa1\xa8\xd5\x9b\x16\xa2\xd8\x6c\x5b\x62\x50\xf9\x12\x15\xba\xc8\x1d\x2e\x65\xa5\x39\x80\xef\x3f\xfc\xf6\xfb\x78\xdc\x05\xef\xc9\x3c\x49\x5d\xc5\xd2\x3e\x20\xbf\x1f\x80\x77\xb7\xe3\x8f\xa1\xae\x41\xf7\x2d\x4d\x3c\xa2\x42\x5a\x63\x33\xec\xb3\x24\x9e\x51\x81\xaf\x4e\x99\x96\xa8\x68\x49\xe8\x81\x73\x84\xac\x72\x32\x20\x23\x20\xd3\x8e\x3c\x02\xce\x25\x47\xb8\xaf\x0f\x52\x05\x2e\x28\xa9\x35\x6c\x24\xb1\x87\xca\x30\xe9\xe3\x85\x00\xf9\x20\x14\x4a\xbf\x55\x58\x61\xf8\xc7\xba\x0c\x1d\xb0\x05\x32\x4a\x57\x19\x02\x71\xcb\x71\xe8\x4b\x6b\x3c\x8e\x40\x7a\xb0\x65\x69\x3d\x66\x81\xe9\x90\x2b\x67\xc8\xac\x40\x1a\xc0\xa2\xe4\xed\x81\x0a\xb4\xec\x1f\x67\x2c\xc3\x16\x19\xe4\x5a\x92\x96\x0b\x7d\xbd\x29\xd7\xfb\x71\x3b\x60\xc5\x13\x79\x5a\x90\x26\xde\x06\x0b\x6c\xc5\x17\xb3\xa6\xd1\xac\x38\x0f\x59\x63\x2a\xb0\xef\x40\x56\xb9\x30\xfe\x26\x27\x95\x77\xe6\xdd\x90\xd6\xb0\x40\xa8\xcc\x61\x5c\xb0\x46\x61\xff\x4a\x32\xd4\xb4\x46\x87\x19\x2c\x9d\x2d\x8e\x6e\xfc\x0a\xb3\x9c\x3c\x2c\xb4\x55\x5f\x3d\x58\xce\xd1\x81\xb2\x45\x69\x0d\x1a\xf6\x35\xd9\x45\xc7\xc3\xd9\xa1\xcc\xcb\x02\x0f\xca\xd2\x64\xb0\xa2\x75\x93\x1c\x32\xc4\x24\xf5\x51\x20\x4e\x11\xdc\x2b\x9d\x55\xe8\x7d\xe4\x67\xa8\x91\x31\x16\xb4\x32\x27\x3d\x5d\xff\x86\xae\xf7\xeb\xc3\xfb\xdb\xce\xeb\xb9\xe9\x18\x27\x1e\xd1\xdb\xca\x29\xec\x2d\x8f\x87\xd0\x59\xdf\xbf\xb6\xb5\xc9\x73\x9a\x24\xe9\x43\x9a\x24\x35\xa9\x73\xe2\xd4\xd9\x12\x1d\x53\x4f\xeb\xc2\x32\x0a\x0d\x2c\x83\xee\x0f\x28\xc7\x80\xbd\xf2\xde\xd3\x3a\x35\x3d\xbd\x1f\x6c\x86\x13\xbd\x38\xc3\x17\x59\xaf\x8c\x43\x6d\x3d\x23\x4b\xf5\x35\x42\x27\x35\x83\x41\x3f\xd4\x9e\xa3\xcd\x85\x1f\xaf\xbe\xfb\x6a\xfe\xf5\xe8\x5e\xb9\xe8\xcf\x93\xfb\x24\x89\x9c\x9f\xba\xe7\xa9\xe4\x3c\xd4\xbe\x55\xd6\xac\xed\xf7\xb7\xa2\xd7\xf8\xd4\x6a\x52\x75\xd5\x4b\xb7\xac\x85\xb6\xf5\xb4\x61\x47\x3e\xa4\x13\x15\x32\xdc\x13\x38\xf0\xee\xac\xaa\x0a\x34\x1c\xb8\x7d\x21\x00\x91\xb2\x64\x8c\xe8\xd9\x31\x11\xff\x63\xb9\x44\xc5\x02\x20\x1c\x34\xd1\xda\x6e\x4e\x0e\x89\xac\x49\xdc\xb4\x0d\xcb\x7f\xf3\xc9\x2f\x43\xac\x36\xbc\xb1\x11\x10\x9f\x4c\x92\xfc\x65\x29\x7e\x51\xbe\x08\x31\x82\x17\x21\x9d\x49\xe4\xc6\x27\x41\x42\x8c\x60\xd7\xb3\xf8\x11\x57\xe1\x90\xfd\x08\xc4\x39\x38\x51\xca\x56\x86\x3f\x67\x27\x38\x9c\x07\x64\x3f\x9f\x77\x4c\x6e\x2c\x9e\xf7\x3e\xe8\xc2\x1d\xe8\x3c\x10\xf5\xbd\xff\x8d\xdb\x4b\xa9\x38\x12\x7f\x2a\x1a\x21\x44\x67\x41\x8f\xc9\x1a\xca\x67\x6f\x45\xfc\x53\x71\x59\xf1\xa5\x05\xd1\x2e\x9b\xa3\x7a\x4d\x1a\x98\xb1\xed\x63\xb0\x38\x98\xf8\x27\xf2\x84\x63\x80\x1a\x91\x51\xf7\xa9\xce\x87\xae\xcd\x99\xab\x15\x43\xcd\xa0\xd6\xb0\x05\xe7\x03\x1e\x89\x03\x2a\x29\x2a\x87\x7c\x59\xeb\xa4\xbb\x8e\xad\xe7\x1a\xf3\x53\x87\x6e\xc2\xdf\x6e\x07\x68\xb2\xf0\x13\xf2\xff\x00\x00\x00\xff\xff\x76\x37\xfd\x93\x5a\x0a\x00\x00")

func templatesServiceSqsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSqsTmpl,
		"templates/service/sqs.tmpl",
	)
}

func templatesServiceSqsTmpl() (*asset, error) {
	bytes, err := templatesServiceSqsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sqs.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSyslogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x38\x10\x0a\x14\xe8\x1c\x3b\x49\x51\x0c\x15\xb0\x07\x2f\x69\xba\x6c\x69\x6b\xd8\xbd\x3c\x14\x79\x60\xa4\x63\x95\xb3\x44\x6a\x24\x95\x34\x35\xf4\xdf\x07\x52\x17\x8b\x14\xa5\x3a\x45\xa2\x02\x05\x2c\x9e\xcb\xc7\x73\xfd\x94\xdd\x0e\x62\xdc\x50\x86\x10\x48\x14\xb7\x34\xc2\x00\xca\x72\xb2\x9b\x00\x04\x8b\x2f\xeb\x8f\x98\xe5\x29\x51\x78\xc1\x45\x46\xd4\x67\x14\x92\x72\x16\x84\x10\x9c\x1e\x9f\x1c\x1f\x1d\xbf\x3e\x3a\x7e\x1d\x4c\xb5\xec\x19\x67\x31\x55\x94\x33\x19\x84\xa0\xb5\x01\x82\xa5\xa0\xb7\x44\xa1\x7e\x01\xc1\x05\x0b\xc3\x37\xff\x15\x24\xd5\x02\x5f\xf5\x9b\x15\x6e\xb4\xa5\x46\x0a\xca\x29\x04\x4a\x14\x18\xc0\x35\x94\x13\x80\xd2\x18\xfe\x50\xa8\xbc\x50\x7b\xab\xbb\x1d\x08\xc2\x12\x84\x67\xdb\x29\x3c\x23\x79\x0e\xe1\x1f\x30\x5b\xe4\xb9\xd4\xb8\xc1\x3c\xc1\x6e\x07\x45\x9e\xa3\x30\x02\xb3\xf7\x24\x43\x28\xcb\x2b\xca\xb6\xad\x19\x23\xf6\x99\xa4\x85\x86\xa7\xe5\x8d\x64\xed\x6c\x76\xc5\x93\xb7\x82\x17\x39\x94\x65\x50\x8b\x1b\x34\xc6\x3d\xb2\xb8\x71\x15\x7c\x12\x69\xc7\x64\x6b\xb0\xe3\xa3\xbe\xa5\x16\x6c\x2c\x4d\x9a\xff\xab\x1b\x2e\x89\x20\x19\x2a\x14\xfe\xd0\xed\x4d\x9d\xa3\x8c\x04\xcd\x55\x9d\x82\x8b\x94\x24\x20\x15\x51\x94\x25\x40\x37\xb0\x22\xd1\x16\xa8\x84\xbc\xd6\x9d\x76\x35\x37\xa4\x48\x95\xd6\xda\x90\x54\x5a\x67\x1f\xef\x73\x13\x83\xb5\x12\x94\x25\x15\xc8\xfa\xb2\xee\xf5\x1c\x00\xeb\x7b\x99\xf2\x04\x3e\xad\xae\xa6\x80\xb3\x64\x06\xcf\x55\x94\xff\xa6\x52\x19\xce\xe7\x29\x4f\xe4\xc9\x2c\x27\x39\x0a\x25\x08\x4d\x75\x74\x23\x9e\x85\x27\x27\xa7\x2f\x5f\x3d\x6f\xfd\x8f\x7a\x5f\x63\x54\x08\xaa\xee\x4d\x2a\xe4\x08\x90\xcf\x79\x74\xc6\xd9\x86\x26\x20\x6b\x15\x48\x2a\x9d\x9e\x9f\x33\x9e\x65\xe4\x1c\x53\x9a\x51\x85\xf1\x15\x95\xca\xf1\x59\xdc\x30\x54\xb2\x1f\xff\x61\x9f\x75\xbc\x41\x56\xaa\x0f\xf0\xd9\x96\xc0\x0a\x25\x2f\x44\x84\x8f\x51\xe6\x4b\x14\x19\x95\x75\x9f\x76\xaa\x67\x29\xb8\x4e\x06\x45\x69\xbd\xd7\x7d\x1e\x35\x97\x4a\x49\x76\x13\x93\xf0\x92\xdd\xf2\x2d\x5e\x14\xac\x3a\x98\x76\x85\x9b\xb7\xda\x9b\x63\x68\x5f\xed\xad\x6a\xe7\xb4\xb4\xcc\x2c\x05\x65\x11\xcd\x49\xda\xb7\xa1\x27\xc5\xdf\x9c\x6a\x40\x5f\xad\x13\x80\x60\x66\x81\xd1\x8f\x2b\x02\x10\xe8\xda\xeb\xc9\x81\xe3\xc6\x06\xbc\xf8\xb2\x0e\xc3\x15\x26\x0e\x66\x0f\xf2\x5a\x8f\x64\xe4\x07\x67\xe4\x4e\xea\xaa\x76\x55\xae\x27\x43\xbf\xec\x20\xac\x4d\xd2\x17\x51\xc4\x0b\xa6\x06\x83\x69\xb0\xd5\x42\x97\xf1\x70\x48\x6b\x6b\x82\x3d\x2c\xa4\x87\x44\x94\x08\x16\x92\x3b\x19\xea\xc8\x86\x4f\x1d\xda\x5f\x72\xe0\x8d\xcf\x88\x8f\x94\x27\x47\x66\x46\x84\x23\xb3\x3f\x7c\xf1\x80\xcc\x4e\x3c\xfe\xda\x11\x60\x30\x5e\x55\xdd\x15\x76\x3a\x74\xe2\xa8\xf8\x5b\x7a\x5d\xdc\xb4\xb3\xe7\x82\xa6\x0a\x85\xbb\x18\x72\x64\xb1\xfc\xe0\xe6\xf7\xa7\x03\xa2\x95\xbd\x9e\x1e\x32\x28\xce\x51\x2a\xca\x88\x86\x31\x58\x66\x6f\x51\x2d\x94\xf2\x15\x9a\x77\x9e\x98\x13\x6d\xec\xc0\x96\xa9\xae\xbf\x24\x4a\xa1\x41\x60\x97\x6f\xd0\x24\xaf\x9e\x4e\x87\x2c\xf6\xb1\x84\xe9\x72\x0f\x3d\xd1\x1f\xe5\x04\xed\x3d\x3b\xcb\x63\x20\xa6\xc1\x19\x8f\xdd\x29\x1a\xac\x5f\xfe\x59\x44\x5b\xf4\x0c\x84\xb1\x36\x3e\x3a\xa4\x8f\x23\xce\x6e\xf9\xf7\x47\x6d\xe0\x5f\x1d\x7d\x2f\xff\xc1\xfb\xfd\xca\x99\x4b\xc3\x25\x66\x3f\x68\xee\xcf\x8b\xbd\x7d\xad\x78\xf5\x19\x96\xad\x3a\xb2\xb1\xac\x2b\xae\x15\x89\xb6\x46\xc8\x6b\xe6\x2f\xc2\xe2\xd4\x74\x5e\x40\x59\x8c\xdf\x67\xdf\xea\x17\x1d\x99\x15\x4f\x7b\x2e\x46\x9a\xa2\x92\xb7\xb3\xe1\x36\xc3\xb5\x17\xcc\xaa\x60\x8a\x56\x25\xce\x78\x8c\xff\x4a\x8b\xd1\xd1\x0c\x79\x61\xd8\xde\xe9\xab\xee\x41\xcb\x59\x7c\x18\x2f\x37\x86\x98\xb7\xd4\xb3\x0b\xcb\xa9\x43\x8b\x98\x5d\xc6\x32\x80\xb0\x43\xe8\x1d\xda\xe6\xce\xdf\x9a\x62\xf5\xd5\x6c\xe6\x65\x55\x96\x65\x62\x67\xa7\xed\x3d\xaf\x58\x77\x47\xe1\xba\xec\xcd\x55\xef\x20\xb6\x69\x4a\x43\x01\x9d\x24\x0e\xf6\xee\x42\xca\x22\x43\x2d\xbd\xe4\x29\x8d\xee\xcf\x79\x54\x64\xd8\x5b\xe4\xc1\x5a\x11\x85\xf5\x81\x9d\x7f\xb7\xeb\xf6\x4c\xcc\xd3\xbb\x52\xc9\x70\xef\xb2\xb7\x98\x7a\x43\xf5\xcd\x66\x83\x91\x29\x82\x45\x9a\xf2\xbb\xfe\xd4\x1d\xa6\x60\x15\xec\xfa\x73\xd0\x07\x06\x9a\xbe\x9d\x8d\xf2\x20\x77\x1c\xb8\xe3\xa2\xfb\xcb\xba\x40\x60\x7f\x69\x9e\x1e\x9d\x1c\x1f\x9d\xfc\xee\xef\xcb\x25\x51\xdf\xb4\xdc\xbc\x1a\x6e\xf3\x6e\xc1\x9b\xc4\x54\x89\xfb\x3a\x5c\xce\xa3\xe9\x83\xf1\x14\xf6\xcd\xd5\x2a\x23\xa9\x34\xe7\x51\xca\x8b\xf8\x8e\xa8\xe8\x5b\xb8\x2c\xd4\x3b\x54\x82\x46\xe7\x44\x11\xcf\x70\x86\x7d\xbc\xc7\xa8\x79\x47\x18\xa3\xd3\xf0\x4c\x20\x51\xf8\x1e\xd5\x1d\x17\xdb\x4b\xa6\x50\x6c\x48\xe4\x4e\x1b\x4b\xa3\x9a\xb1\x37\x3d\x1d\x1f\x99\xee\x28\xa5\xe8\x71\xe3\x51\xe8\x95\x28\x1c\x52\xa6\x00\x9d\xef\x23\x2d\xd6\xe3\x64\x5e\x86\xf7\x4b\x39\x31\xf4\xb6\x8a\x5b\x43\x14\x06\xd3\x61\x89\xae\x95\x40\x92\x8d\xca\x2e\x0b\x75\xc5\x93\x37\xb7\xc8\x94\x7c\xc2\xe8\x58\x4c\xfd\x85\xfe\xf7\x74\xe1\x32\x25\xbc\x31\x7f\x19\xa2\x9c\xb5\xe5\x63\xf6\xe8\x13\xde\xd1\x87\x75\x9c\x1c\xb5\x32\x03\x19\xf2\x71\xa5\x56\xa7\x89\xa8\x73\xdb\x41\x53\xfe\x60\x76\x2e\xf2\x73\x52\xd5\x3c\x9e\x44\xb5\x76\x1e\x05\xc0\xc8\x57\xd3\x41\x18\xa4\x4e\xf5\xfc\x31\x90\x78\xc8\xd7\x43\x90\xcc\x3d\x65\x5e\x3d\xee\x06\x1a\x7e\xeb\x52\x59\x0f\xb9\xed\xed\xd0\x9f\xec\x29\x0f\xec\x7a\xdb\x34\x1f\x28\x15\x15\x39\xd3\xb5\x75\xd1\xd4\x96\xf9\xf5\x45\xaf\x06\xeb\x63\x7f\xe2\x82\x1f\x60\x37\x97\x8b\x77\x61\xb8\xe7\x08\xe6\xaf\x4c\x93\x72\xb2\xff\x4a\xf9\x3f\x00\x00\xff\xff\x64\x71\x0e\x0c\xf4\x15\x00\x00")

func templatesServiceSyslogTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSyslogTmpl,
		"templates/service/syslog.tmpl",
	)
}

func templatesServiceSyslogTmpl() (*asset, error) {
	bytes, err := templatesServiceSyslogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/syslog.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\xcf\x0e\xda\x30\x0c\xc6\xef\x7d\x0a\xcb\x17\x2e\xd0\x16\xb6\x0b\xbd\xa1\xfd\x39\x4d\x0c\xd1\x02\xe7\x92\x1a\x88\x68\xeb\x28\x49\xd1\xa6\xaa\xef\x3e\x25\x5d\xa1\xd5\xc6\x65\x3b\x26\xf6\xf7\xb3\xfd\xd9\x6d\x0b\x05\x5d\x64\x4d\x80\x86\xf4\x43\x0a\x42\xe8\xba\xa0\x0d\x00\x70\x73\x4a\x33\xaa\x54\x99\x5b\xfa\xca\xba\xca\xed\x91\xb4\x91\x5c\x23\x24\x80\xab\x78\x19\x2f\xe2\xf5\x22\x5e\xe3\xdc\x25\xef\x72\x9d\x57\x64\x49\x1b\x4c\xc0\xc9\x01\xf0\xa0\xcb\xe7\x03\x00\xb3\x9f\x8a\xbc\x36\xb5\x5a\xd6\x57\xaf\xf3\x81\xcf\x64\x84\x96\xca\x0e\xec\x13\x9d\x6f\xcc\x77\x38\xec\xbf\xcd\x81\xc2\x6b\x08\xb3\x9b\xb5\xca\x24\x51\x74\xd5\xb2\x08\x05\xd7\x0f\xfe\x11\x0a\xae\x22\x9d\x8b\xfb\xc2\x25\x47\xcb\xd5\x87\x8f\x33\xf4\xc8\xae\x27\xe3\xa7\xc6\x58\xae\x32\x56\x52\xfc\x53\x1f\x53\xda\x96\xad\xbc\x48\x91\xbb\xf0\x7f\x33\x83\xdf\x5c\xdc\x93\xe1\x46\x0b\x1a\xd9\x36\x2e\x64\xfe\x5a\xa4\x1f\x2c\x49\xd2\x6d\x9a\x36\xe7\x57\x81\x67\xd5\x61\x53\x09\xe0\x32\x8c\x5f\xff\x3b\xcd\x8a\xb4\x95\x34\xe6\x02\x60\xda\xef\x3e\xe3\x3b\x39\x51\xeb\xfa\xba\x60\x32\xb5\x70\x70\xa2\xef\xc5\x7d\x6d\xb4\x1f\xea\x95\xfe\xa7\x47\x13\xd1\x4e\xb3\x65\xc1\xa5\x1f\xc2\xad\x14\x47\xc1\x2f\x75\xa1\x58\xd6\x76\x4a\x74\x37\xe4\xed\x1a\x6c\x1b\x9b\xf7\xbd\xb1\xaa\xb1\xef\x2f\xee\x98\x97\x0d\xe1\x1b\x9c\xc7\x04\x5d\xd0\xb6\x40\x75\xe1\xae\xfe\x57\x00\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/service/fluentd.tmpl": templatesServiceFluentdTmpl,
	"templates/service/memcached.tmpl": templatesServiceMemcachedTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/s3.tmpl": templatesServiceS3Tmpl,
	"templates/service/sns.tmpl": templatesServiceSnsTmpl,
	"templates/service/sqs.tmpl": templatesServiceSqsTmpl,
	"templates/service/syslog.tmpl": templatesServiceSyslogTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"service": &bintree{nil, map[string]*bintree{
			"fluentd.tmpl": &bintree{templatesServiceFluentdTmpl, map[string]*bintree{}},
			"memcached.tmpl": &bintree{templatesServiceMemcachedTmpl, map[string]*bintree{}},
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{}},
			"s3.tmpl": &bintree{templatesServiceS3Tmpl, map[string]*bintree{}},
			"sns.tmpl": &bintree{templatesServiceSnsTmpl, map[string]*bintree{}},
			"sqs.tmpl": &bintree{templatesServiceSqsTmpl, map[string]*bintree{}},
			"syslog.tmpl": &bintree{templatesServiceSyslogTmpl, map[string]*bintree{}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

