// Code generated by go-bindata.
// sources:
// templates/service/fluentd.tmpl
// templates/service/memcached.tmpl
// templates/service/mysql.tmpl
// templates/service/postgres.tmpl
// templates/service/redis.tmpl
// templates/service/s3.tmpl
// templates/service/sns.tmpl
// templates/service/sqs.tmpl
// templates/service/syslog.tmpl
// templates/service/webhook.tmpl
// DO NOT EDIT!

package aws

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesServiceFluentdTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x10\x84\x02\x05\x0a\x5b\x4e\xdd\x0e\xc3\x08\xec\xc1\x8b\xed\x2e\x9b\xbb\x1a\x76\xda\x3e\x0c\x79\x60\xe8\x63\x47\xb3\x2c\x0a\x14\x95\x2b\xfc\xdf\x77\x48\x5d\x22\x52\x94\xe2\x04\x89\x5a\x18\x90\xf9\xf1\xdc\xcf\x77\x8e\xf3\xf0\xe0\xad\x61\x13\xc6\xe0\xf9\x29\x88\xeb\x90\x81\xef\x1d\x0e\xbd\x87\x9e\xe7\xf9\xe3\x9f\xab\x73\xd8\x27\x11\x95\x30\xe3\x62\x4f\xe5\x0f\x10\x69\xc8\x63\x9f\x78\xfe\xe8\xe4\xe3\xc9\xe0\xe4\x37\xfc\xef\xf7\x15\xf6\x5b\x26\x93\x4c\xa6\x78\xa4\xae\x7a\x1e\xca\x15\x34\xde\x82\xf7\x6e\xd7\xf7\xde\xd1\x24\xf1\xc8\xef\x5e\x30\x4e\x92\x54\x89\xf7\xf4\xe3\x23\x28\x4b\x12\x10\x1a\x10\xfc\x43\xf7\x80\x87\xf3\x30\xde\x55\x62\x34\xec\x07\x8d\x32\x50\x4a\x11\xaf\x91\x85\xb2\x60\xce\xb7\x5f\x04\xcf\x12\xbc\xe5\x17\xf0\x43\xbf\x54\x0f\xf1\xba\x54\xe5\x7f\x17\x51\x4d\x64\x25\xb0\xa6\x63\x09\x1b\xa5\x41\x01\x4b\x49\xbd\xf2\x53\xcb\xf4\x17\x54\xa0\x81\x12\x43\x50\xdd\xb4\xe5\x4e\x20\x65\x22\x4c\x64\x11\xa3\x19\x6a\x89\xe5\xc4\xfb\xbe\x9c\xf7\x3d\x08\xb6\x81\xf7\x5e\xb2\x84\x0c\x87\x1b\x7d\xb0\x1e\x30\x1e\x45\xc0\x24\x17\x01\xdc\x52\x0c\x34\x04\x8c\xef\xc9\xe8\xf3\x68\xf4\xf9\xbd\xdf\x2f\xa5\x9e\xdf\x25\xda\xfb\x95\x14\x61\xbc\xf5\x2d\xb3\x96\x90\xf2\x4c\x30\x78\x8d\xd0\x2f\x40\xec\xc3\xb4\x48\x71\x2d\x38\x0b\xc1\x11\x2a\xc3\x9a\x92\xe2\x64\xcc\x4a\x67\x23\xba\xbf\x5c\x53\x72\x16\x5f\xf3\x1d\xcc\xb2\x38\x3f\xe8\xd7\xc1\xe5\xb7\x4a\x9b\x25\xe8\x31\x03\xd5\xd5\xda\xe9\xc1\x10\xb3\xc0\x30\xb0\x30\xa1\x51\x53\xc6\x2c\x26\xe4\x2f\x1e\x2a\x83\xfe\x35\x4e\xf0\x2c\x30\x8c\x51\x8f\x0d\x41\x50\xc4\xb7\x69\x03\xe7\x59\x6a\x4c\x83\xb1\x4b\x08\x59\xc2\xd6\xb2\xd9\x61\x79\x71\x8f\xee\xe9\x3d\x8f\xe9\x4d\xaa\xb2\x6d\x5f\xb9\xe8\xb5\xbd\x99\x41\x58\xe9\xa4\x8f\x19\xe3\x59\x2c\x5b\x83\xa9\x6d\x2b\x40\x67\xeb\xf6\x90\x16\xd2\x44\xfc\xbc\x90\x1e\x13\x51\x2a\x62\x82\xbe\x12\x15\x59\xf2\xd6\xa1\x7d\x91\x02\x67\x7c\x3a\x74\xa0\x27\x83\xad\xa2\x1d\xd2\xc1\x47\xe4\xc3\x33\x32\xdb\x73\xe8\xab\xda\x5e\xdb\x38\xcf\xbb\x8b\xd4\x3a\xb4\x67\x5d\x71\xb7\xf4\x2a\xbb\xac\x38\x69\x16\x46\x48\x5f\x66\x6b\x4f\x20\x41\xa2\x4c\xbf\xd9\xf9\x7d\x92\x20\x2a\xec\x45\xff\x18\xa2\x40\x6a\x94\x61\x4c\x95\x19\xad\x65\xf6\x05\xe4\x58\x4a\x57\xa1\x39\xf9\x44\x9f\x28\x61\x47\xb6\x4c\xee\xfe\x82\x4a\xfc\xd4\x94\x65\xb2\x53\x99\xbc\x82\x9d\x8e\x19\x36\x5d\x09\x53\xe5\x4e\x1c\xd1\xef\x9c\x53\x95\x9f\xb5\xa1\xd2\x12\x53\xff\x94\xaf\x6d\x16\xf5\x57\x9f\xfe\xc8\xd8\x0e\x1c\x84\xd0\xd5\xc6\x83\x63\xfa\x98\x71\x64\xf6\xdb\x57\x6d\xe0\x97\x52\xdf\xa7\xbf\xe1\x4e\x49\x17\x10\x01\x4d\x61\xa8\x83\x78\x8d\x4a\xa7\xf3\xe9\x78\x35\x55\x0b\xcc\x30\x1f\x47\xe5\xa4\x0d\xee\xc3\xc4\x9d\x34\x73\x64\x1b\xc1\x6c\xae\x04\xe6\xd5\x8e\x71\x66\xf8\xbf\x92\x94\xed\x34\xc8\x29\xe6\x4f\x1a\xaf\x23\xdd\x96\x7e\x18\xaf\xe1\x36\xb8\x2a\xbe\xa8\x61\x96\x3c\x6a\xa8\xe8\xe8\x98\x1c\x6f\xa6\xca\xee\x94\x0b\xa7\x31\x4b\x24\xc2\x30\xaf\xff\x18\xeb\xeb\xbf\xfa\x30\xf4\xcf\xf1\x84\x67\x52\xaf\x7f\xbf\x34\xf9\xc7\x49\x58\xe6\x38\x2f\xc0\xb6\x3f\xad\x35\x3e\x4e\xd3\x6c\x0f\x0a\xbd\xe0\x51\xc8\xee\x26\x9c\xe1\x7b\x63\xe0\xe1\x6a\x84\x3b\x6a\x71\x60\x86\xc2\xae\xce\xc7\x8d\xc5\x51\xe3\xa9\x4c\xc9\xa3\xca\x06\x81\x37\xc8\x67\xba\xd9\xe0\xfa\xa6\x7d\x8e\x22\x7e\xd3\x64\xa7\xf6\x55\x25\x37\xbb\xd8\xb8\x5d\xc6\x78\xe5\x4a\x15\x74\xee\x0b\x76\xdb\xd8\x6d\x55\x7f\x33\x1c\xf0\xcd\x65\x7e\x34\xc0\x7d\xfe\xe3\xaf\xee\x12\x45\xce\xbc\x52\xb8\x61\x4e\x02\xc3\x7a\x51\xe8\xc4\xe4\x89\xab\x3b\x61\xd1\x4f\x67\xfa\xf2\x58\xb4\xa6\xb0\x29\xae\xb8\xd2\x91\x4a\x7d\xce\x22\x9e\xad\x6f\xa8\x64\x57\x64\x91\xc9\xaf\x80\xfb\x33\x9b\x50\x49\x1d\x24\xa6\xf1\xee\x15\xd6\x81\x6d\x54\x82\xbe\xfe\x54\x35\x68\x50\xb9\xae\x2b\x58\x63\x45\x70\x2e\x1c\x2f\x72\x5d\x6f\x5b\xa7\x02\x30\xa6\xe5\xdc\x6a\xf5\xda\x80\xe2\x8f\x0c\xa0\xfb\x4e\x2c\xc6\x12\x81\xd3\x6b\xcc\x55\xfa\x86\xd1\x31\x16\xc7\x0f\xea\xdf\xdb\x85\x4b\x57\xca\x46\xff\xc6\x45\x1c\xc9\x87\xc2\x25\x68\xe6\x7e\x43\x1f\x5d\xb6\x76\xcf\xea\x0a\xd3\x92\x21\xd7\xe8\xae\xee\x94\x11\xb5\xbc\x6d\x15\xe5\x0e\x66\xcd\x91\xa7\x67\x7c\xf9\x38\x12\x55\xc9\x79\x15\x03\x3a\x96\xf8\xa3\x6c\x48\x55\xaa\x87\xaf\x61\x89\x63\xdc\x3f\xc7\x92\xa1\xa3\xcc\xf3\xc7\x26\xfa\xf6\x6f\xed\xcd\xca\xb1\x6b\x35\x46\xd5\x13\xe3\xc0\x61\x76\x41\xea\xe5\xbe\x9c\x4f\xfc\x53\x55\x5b\xb3\xb2\xb6\xf4\xdb\x4f\xc5\xc0\xbe\xf3\xf7\xce\x45\xf7\x12\x71\x36\xfe\x8a\xa5\x55\x8d\x62\xfd\x47\x8f\xde\xa1\xf7\xb8\x34\xff\x1f\x00\x00\xff\xff\x2d\xed\x69\x69\xbe\x12\x00\x00")

func templatesServiceFluentdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceFluentdTmpl,
		"templates/service/fluentd.tmpl",
	)
}

func templatesServiceFluentdTmpl() (*asset, error) {
	bytes, err := templatesServiceFluentdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/fluentd.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMemcachedTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5d\x4f\xeb\x38\x10\x7d\xe7\x57\x8c\xfc\xdc\xad\x68\xc5\xcb\x46\xab\x95\xba\xe1\x43\x91\x76\xd9\x8a\x76\xbb\x0f\x57\x7d\x08\xce\xa4\x58\x24\xb1\xaf\x3f\xb8\x42\x28\xff\xfd\xda\x4e\xd2\xc6\x49\x4b\x01\x5d\x04\x28\xb2\xc7\x67\x8e\x8f\xcf\x8c\xfd\xf6\x06\x19\xe6\xac\x42\x20\x0a\xe5\x0b\xa3\x48\xa0\xae\x2f\x00\xde\xec\x1f\x00\x59\xfc\xbf\x5a\x63\x29\x8a\x54\xe3\x2d\x97\x65\xaa\x37\x28\x15\xe3\x15\x81\x08\xc8\xfc\x72\x76\xf9\xdb\xe5\xef\xf6\x97\x4c\x9a\xf0\x98\x57\x19\xd3\x76\x5e\x91\xa8\x85\xb0\xa3\x4b\xc9\x5e\x2c\x80\x1b\x02\x72\x5b\x45\xd1\xcd\x77\x93\x16\x2e\xe4\x9b\x1b\x79\xc0\xdc\x7e\xee\xa3\xa0\x9e\x00\xd1\xd2\xd8\xaf\x2d\xd4\x1e\xa3\x6e\xe1\x97\xa9\x4c\x4b\xd4\x96\x42\x1f\x3e\xa9\x94\x4e\x2b\x8a\xeb\x57\x81\xbd\x71\x3b\xd3\x8e\x90\x95\x96\xac\xda\xb5\x24\xfd\xcc\x35\xe6\xa9\x29\xb4\x9b\xa4\x29\x7d\xc2\xa9\x9e\x4f\x4b\x46\x25\x0f\x83\x14\x95\x4c\xb8\xfd\xb8\xc0\xf5\x13\x82\xb6\x88\xc0\x73\x60\x6d\x4e\xd0\x1c\x8c\x42\xd2\x2e\xaa\xbb\xd5\xe4\xde\x94\xb1\x03\xbe\xe7\x19\xaa\x2f\xb0\x9a\x9d\x21\x52\x99\xf2\x11\xa5\xa3\xe2\xf9\x03\x2d\x8c\x72\xc2\x40\xce\x25\xe8\x27\xa6\x40\xa2\x28\x18\x4d\xdd\x22\xd8\x49\x6e\xc4\x98\x64\xef\x60\x3e\x46\x2f\xa0\x11\x4b\xb4\x8b\xad\x14\x20\x1a\x1c\x50\xe6\xb1\x42\xad\x4e\x6c\x29\xb7\x67\x8e\xfd\xb9\x45\x51\xf0\x1f\x98\x6d\xd2\xc2\x60\xe3\x86\xe6\xdc\x27\x5d\x2c\x6c\x47\x94\x57\x6d\x8a\xa3\x94\xff\x66\x4a\xff\x61\x2d\x6b\x1d\x16\xcf\xa3\xa8\x89\x8d\xa2\x24\xfb\xf3\x9d\x6d\x6c\x96\xf1\x9e\xf8\xa9\x74\xa7\x85\x82\x4f\xa4\x6d\x94\x70\x2b\x4e\xd1\x81\x96\xcf\x50\xd0\x11\xaf\x8d\xa0\xc7\x25\x38\xd0\xb0\x38\x8e\xc3\xfb\x3b\x3f\x8a\x1c\xb3\x4c\x86\xe8\x47\x24\x8b\x93\xeb\x07\xf8\xab\xe0\xf4\xb9\x9f\x61\x60\x9e\x0e\x3d\xa8\xe2\x7f\x8d\x16\x46\x87\x1d\x82\x4b\x3d\x9b\xcd\x67\xb3\x35\x15\x8b\xac\xc9\x6e\xd3\x38\x63\x1c\xba\xc6\x1d\xea\x85\xd6\x8d\x4f\x7c\x6d\xc5\x8d\xe7\x9d\x5f\x6c\xe3\xc9\xd9\xce\x48\x6f\xf7\x9b\x2a\x13\x9c\x55\x7a\xea\xa0\x50\x29\xdf\x48\xfa\xb6\xef\x65\x73\xdf\xbf\x28\x9b\x87\x6a\x52\x05\xfb\x7d\x40\xc5\x8d\xa4\x41\x1b\x20\x2b\xa4\x46\x32\xfd\x7a\xe7\x2b\xf3\xcc\x51\x86\xc1\x3d\xb9\x97\x92\x0b\x94\x9a\x0d\x5a\x8c\x9d\xf1\xa1\xe1\xb1\x1d\x5a\xad\x47\x5e\xe9\x94\x3e\xdf\xdb\x7e\x4a\x0e\xd2\x8c\xa9\x25\xd5\xce\x4b\x68\x75\xe8\xc5\x80\x03\x4b\x84\x4d\xaf\x39\xe5\x85\xc3\xd4\x54\x38\x69\x6e\x25\x2f\x5b\x4d\x89\xd7\xd8\x0d\xae\xf9\x68\xc8\x79\x2c\x11\x01\xab\xce\x79\x7b\x01\x9b\x9f\x6d\x40\xce\x06\x59\x4f\x0f\x96\x91\xde\x82\x7a\xe4\x68\x7f\x7a\x4d\x51\x9e\x55\xbb\x48\x95\x66\x7e\x41\x57\xc7\x9f\xd0\xfc\x8b\x72\xfb\x34\x49\xa6\x0e\xde\x4b\xf2\xc6\x77\x5d\xdb\x99\x0c\xa5\x6f\x81\x07\xdd\x29\x04\x3e\x12\x48\x42\x61\xcf\xab\xd6\x79\xfe\x83\x8a\x85\x75\xf2\x11\xc9\x16\x46\xf3\x7f\x58\xc5\x65\xfb\xae\xf8\x4f\xec\x64\x9a\x39\x78\x77\x13\x04\x3a\xed\xaf\xd3\xee\x9e\xdf\xef\x2e\x78\x00\x0c\xd4\x1d\x1e\xbe\x3f\x81\xfe\xe2\x91\x3b\x06\x00\x37\xd5\xce\x3e\x8f\x5c\x64\x89\xa5\xbf\x6b\x33\x72\x24\xa0\x7b\x17\x39\x8f\x4f\xaf\xa6\xf3\xab\x30\x68\xf4\x1c\xd8\xe7\x0f\x67\x06\xc9\x07\x65\x33\x28\x84\xb0\x50\xb3\xe1\x83\x2a\xec\x1a\xb6\xaa\xb6\xe3\xe3\xbe\xe8\xfe\xd7\x17\xf6\x29\x88\x55\xe6\x5e\x7f\x3f\x03\x00\x00\xff\xff\xcb\x2d\x07\xf3\x15\x0a\x00\x00")

func templatesServiceMemcachedTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMemcachedTmpl,
		"templates/service/memcached.tmpl",
	)
}

func templatesServiceMemcachedTmpl() (*asset, error) {
	bytes, err := templatesServiceMemcachedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/memcached.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x6d\x6b\x23\x37\x10\xfe\x9e\x5f\x21\xf4\xa9\x05\xd7\xf8\x7c\xf4\x4a\x4d\x29\x38\x76\x12\x16\x9a\xd4\xc4\x69\x0a\x2d\xf9\x20\xaf\xc6\x46\xdc\x5a\xd2\x49\xda\x1c\xb9\xb0\xff\xbd\xa3\x7d\xd7\xbe\xd8\x97\x40\x8f\x8b\x59\x34\xf3\xcc\x3c\x1a\xcd\x3c\xab\x7d\x7d\x25\x1c\xf6\x42\x02\xa1\x16\xcc\xb3\x88\x81\x92\x2c\xbb\x20\xe4\x15\xff\x08\xa1\xcb\xbf\xb7\x0f\x70\xd4\x09\x73\x70\xad\xcc\x91\xb9\x47\x30\x56\x28\x49\xc9\x82\xd0\xf9\xec\xc3\xec\xa7\xd9\xaf\xf8\x9f\x4e\x0a\xf7\x95\x92\x5c\x38\xb4\x5b\xba\x28\x43\xe0\xea\xc6\x88\x67\x0c\xe0\x97\x08\xbd\x96\x8b\xc5\xd5\x97\x94\x25\xde\xe5\x5f\xbf\x72\x0f\x7b\x7c\xac\xbd\x48\x36\x21\xd4\x99\x14\x9f\x9e\x48\x96\xc7\xc8\xca\xf0\x1b\x66\xd8\x11\x1c\x52\x68\x87\x5f\x26\x89\x8a\x11\xc9\xb7\x4e\x19\x76\x80\x96\x0d\xad\x0f\x2f\x1a\x72\xb6\x77\xe9\x71\x07\xa6\x64\x9a\x9b\xd6\xb0\x67\x69\xe2\x72\xeb\x87\x59\x68\xb1\xb1\x11\xda\x55\x3b\xad\x53\x10\x5b\xe4\x20\x56\x7c\x03\xf2\xc3\xcd\xe5\x8f\xb4\x44\x65\x15\x9c\xae\x99\x63\x3b\x66\xc7\x78\x6c\x9d\x11\xf2\x30\xc6\x83\x69\x7d\x8a\x48\xe9\x4a\x78\x99\x83\x48\x2c\x48\x9f\x42\x24\xad\x63\x32\x86\x3c\xe9\x7b\x68\xf0\xdd\xd4\xcd\xa7\x47\x11\x1b\x75\x8a\x4e\x95\x87\xc4\x09\xb3\x96\xec\x95\x69\x31\x53\x1c\x6c\x9f\xda\x2d\xa6\x10\xcb\x7f\xde\xc5\x6a\x8f\x5d\x03\xa7\xf8\xe4\xc1\x75\x02\x84\x3d\x33\x91\xb0\x9d\x48\x84\x7b\x21\xdf\x94\x1c\xa8\xd1\x06\x19\x7f\x55\x86\xbf\x81\x49\x98\x6c\x8b\x03\x03\x86\xe8\x2a\x4e\x3f\x43\xd3\xf7\x9d\x04\x67\xe3\xa3\xc3\xca\x00\x82\x89\x90\x44\x17\x71\x88\x4d\x77\x12\x9c\x1d\xaa\xce\x50\x71\x7c\xd3\x7e\x05\xfe\xc8\x92\x14\x8a\x61\x2b\xc6\x6a\x52\xf9\x92\xa7\x1e\xe5\x6d\x99\x62\x90\xf2\x1f\xc2\xba\xdf\x50\x11\x70\x80\x57\xf3\xc5\xa2\xf0\x5d\x2c\x22\xfe\xfb\x89\x6d\x3c\x6e\x56\x35\xf1\xb1\x74\xe3\x85\x22\x6f\x48\xdb\xf4\xc9\xa9\x53\xf3\x7c\xba\x05\xed\xf1\xfa\x0b\xc5\x30\x9f\xac\xff\x61\x84\xcb\xb6\x49\xab\x14\xbd\xe4\x8f\x3a\x1e\xae\x7f\x53\x03\xdc\x84\x2f\xc0\xe9\xb2\x0f\x46\x5e\x09\x6e\xc2\xe8\x03\xe7\xb5\x8a\xd6\xf7\xe4\x12\x25\xef\x73\x3b\x43\xa7\x73\xab\xe8\x81\x42\xff\x99\x3a\x9d\xba\x50\xfd\x95\x71\x1f\x3f\xce\x3e\x3d\xc4\x7a\xc9\x8b\xe4\x98\xc5\x37\x65\xf3\x42\xb8\x01\xb7\x74\xae\xe8\xd1\x4a\x53\x7c\x9f\x5e\x49\xae\x95\x90\x6e\xea\x91\x60\x6d\xfe\x4a\x68\x4f\x58\x13\xdb\x3f\xbe\x2f\x76\x8e\xec\x04\xbe\x92\xcf\xb7\x2f\xf6\x4b\xd2\xd6\xf2\x20\x72\xf9\xd2\xaa\xed\x83\xe8\xb6\xc4\x0c\xa1\x6b\xfb\x20\xba\xdd\x84\x43\xe8\xda\xee\xd1\xc1\x29\xdc\x83\x55\xa9\x89\x21\x38\x87\x2d\xc4\xa9\x41\x39\xbc\x31\x2a\xd5\xe7\x1a\x2c\x74\x6e\x35\xc1\xc6\x28\x0d\xc6\x09\x08\x35\x02\x2d\xb9\x6b\xa7\x99\x8e\x7e\x1f\xa4\xba\x59\x4c\xda\xee\x41\x86\x48\x1e\xf2\xe3\xc5\x43\x6a\xf9\x10\xbf\xd9\x48\x63\x4a\xa7\x62\x95\xf8\x80\x2e\xd6\xfe\xec\xae\x8d\x3a\x96\x07\x4e\xfd\xf9\xfb\xb5\x07\xd5\x5d\xf1\xbd\x1e\xe9\xa0\x66\xd5\x04\xd4\x25\x2b\xfe\x3d\x05\xd4\xd0\x29\xe2\x5d\x18\x6d\x01\xb2\x11\x21\x3b\x57\xda\xfb\x35\xfe\xac\x2f\xdb\xce\xdf\x55\xda\x00\xf2\x86\x12\xe7\xa0\x88\xdb\x66\x18\xa2\x7d\x31\x08\x95\xe2\x4e\xba\xe5\x2e\x37\xdc\x11\xe6\x66\xa7\x23\x8e\x34\x2c\xe7\xc9\x5a\xd5\x43\x78\xb6\x50\xcd\xb8\x7e\x4f\x95\x86\xee\x81\x35\xcf\x9e\x31\xdc\x12\x6d\x92\xad\xfc\x55\x26\xc0\x06\xb7\xa9\x51\x5c\xc4\x41\x3a\xb1\x17\x60\xc2\xc4\x7e\x3f\x5b\xc7\xe2\xcf\x77\xc5\xac\x76\xe0\x77\xf5\x84\xf7\x25\x65\x32\xda\x04\x3d\x54\xbb\xa7\x3a\xc0\x2b\x79\xc0\x0b\x7e\xdd\x2b\x74\xc0\x58\xdd\xea\xd1\xe7\xe7\xe9\xa7\xe9\xfc\x97\xd0\xe9\x96\x59\xbc\x74\x87\x7a\xd4\x17\xa1\x11\x48\x28\x82\x7d\xe5\x0b\x61\xcd\xed\xb0\xf6\xad\xd6\x3a\xae\xe1\xb4\x07\x96\x74\x97\x88\x38\x79\x59\xc6\x28\x81\x56\xec\x12\x18\xba\x1f\xf9\x01\x29\x7a\xa1\x6a\xbd\x83\x9e\x87\x76\x7c\x17\x06\x32\xd5\xfd\x64\x09\x55\x12\x35\xe5\xa9\xdf\xf6\x17\xd5\x6f\x76\x81\x1f\x5b\x20\xb9\xff\xbe\xfa\x2f\x00\x00\xff\xff\xf5\x59\xa3\x5b\x77\x0d\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x58\xdb\x6e\xe3\x36\x10\x7d\xcf\x57\x0c\xf4\xb2\x2d\xe0\xba\x89\xdb\x3c\xac\x51\x14\xf0\x25\x09\x04\x34\xa9\x11\xa7\x29\xd0\x22\x28\x68\x69\x6c\x10\x91\x49\x95\xa4\xbc\xeb\x35\xfc\xef\x4b\xea\x4e\xea\x62\xc7\xc1\xae\x77\xa3\x99\x39\x73\x38\x9c\x39\xa4\x7c\x38\x40\x88\x6b\xca\x10\x3c\x89\x62\x47\x03\xf4\xe0\x78\xbc\x02\x38\xe8\xbf\x00\xde\xe4\xef\xe5\x0b\x6e\xe3\x88\x28\xbc\xe7\x62\x4b\xd4\x2b\x0a\x49\x39\xf3\xc6\xe0\x8d\xae\x6f\xae\x7f\xba\xfe\xac\xff\x78\x83\xcc\x7b\xc6\x59\x48\x95\x36\x4b\x6d\xcf\x10\xf4\xd3\x69\x44\xd8\xfb\x23\xf9\xaa\xad\x0c\x83\xd2\x0c\xde\x3d\x1b\x8f\xef\xfe\x4f\x48\x64\x7e\xff\xd7\x3c\x79\xc6\xb5\x41\x76\x9c\xe1\x38\x00\xcf\x83\x37\xfd\x6f\x81\xb9\x10\x74\xa7\x39\x9d\xc0\x29\xbc\x52\x00\x25\x12\x4c\x41\x52\x8c\x1c\xca\x5b\x10\x41\xb6\xa8\xf4\xaa\xea\x94\x27\x51\xc4\x03\x1d\x19\x2e\x15\x17\x64\x83\x35\x9b\xb6\xbe\xec\x63\xf3\xc4\x7b\x4a\xb6\x2b\x14\xde\xa0\xb2\xcc\x71\x4d\x92\x48\x19\xe3\xcd\xb5\x6d\x90\x81\xa0\xb1\xca\x4b\x57\xe2\x83\xcc\x12\x80\xa4\xdf\x10\x7e\x78\x98\xfe\xe8\xe5\x41\xd5\x5a\xe7\x44\x91\x15\x91\x1d\x24\x96\x4a\x50\xb6\xe9\x20\x41\xe2\xb8\x87\x45\xee\x08\x61\x9e\x00\x98\x2e\x45\x33\xbf\xcf\xa4\x22\x2c\xc0\x3c\xe3\x47\x39\x84\xab\xa1\x1a\x0d\xb7\x34\x10\xbc\x87\x4b\x91\x04\x82\x88\x48\x09\x6b\x2e\x6a\xb4\x78\x88\xb2\xc9\xeb\x9e\x6c\x69\xb4\xbf\x80\x51\xcc\xa5\xda\x08\x94\x9f\x87\xb7\x3d\x8c\x16\xb9\x17\xec\xb2\x96\x87\x75\x96\xaf\xc1\xa3\xd9\xda\x1f\xe4\xd3\x47\xa2\x68\xcf\x07\xc1\x93\x18\xb6\xe4\xeb\x7f\x41\x95\x0b\x76\x24\x4a\x70\x00\x74\x88\x43\xf8\x74\x98\x4f\x8b\x2a\xce\x4c\x11\x1f\x71\xcb\xc5\xfe\xe7\x9b\xdb\xeb\xf4\xe7\xf8\xa9\x85\xba\x66\x40\x27\xff\x5c\xc0\x79\xad\xa7\x0d\x7b\x88\xa7\xc8\x71\x84\x40\x76\x84\x46\x64\x45\x23\xaa\xf6\xf0\x8d\xb3\x96\x06\x5b\x68\xb2\x5f\xb8\x08\xcf\xa7\x61\xa5\x5a\x6a\xe1\x42\x01\x71\x81\xd2\xc4\xaf\xc4\xe2\x02\xf8\x99\x40\x1d\x0c\x94\x41\x9c\xe1\x80\x4c\x56\x0c\x95\x3c\xb7\x32\x66\xd8\xbf\x60\xf8\x6a\xf6\x2a\x53\xa8\x4c\x8b\x06\x85\x2f\xbc\x35\x28\x2f\xf3\x14\xad\x94\xff\xa0\x52\xfd\xa6\x95\x59\xab\xde\x6c\x34\x1e\x67\xbe\xe3\xb1\x1f\xfe\xde\xb3\x8c\xd7\xc5\xac\x24\xde\x95\xae\xb7\x50\xe7\x66\x3d\xa7\xad\x0d\x19\xb7\x9a\x0d\x52\x7f\xe9\x13\x29\x55\xa4\xcb\x27\xfc\x74\xd7\x24\x45\x92\x46\xfa\xd7\x38\x68\xcf\x5c\xd5\x40\x2f\xc3\x14\xa0\x7f\xa1\xad\xc8\x33\x1a\x0a\x1b\xbd\xa5\x42\x33\x7f\xfe\x0c\x53\x7d\x52\xbc\xd7\x33\x38\x05\x68\xa2\x97\x27\x74\x0f\x7a\x2e\x69\x7c\x0d\x8b\xd6\x52\x95\x95\xd4\x1a\x39\x1c\x9d\x91\xde\x3a\x54\xff\x4c\x54\x9c\x58\xdd\xab\xd5\x54\xa8\xdb\x5f\x7f\x19\xbd\x04\xf1\x24\xcc\xd6\xae\x69\x98\x91\xa8\xce\xf0\x07\x54\x13\xa5\xb2\x09\x29\x94\xcc\x4c\xc9\x1d\x0b\x63\x4e\x99\x1a\x9a\x48\x94\x32\x3d\xc5\xeb\xf3\x5d\x61\x9b\xff\x5e\x86\x9d\x46\x3a\xc0\x77\x6c\x57\x94\xa7\x7e\x08\x5b\xe0\xf9\x55\xa3\xb4\x77\x01\xd4\x45\xae\x0d\xa0\xb4\x77\x01\xd4\xc7\xa1\x0d\xa0\xb4\x1b\x00\x6b\x3b\x9e\x51\xf2\x44\x04\x68\x6d\xc8\x12\x83\x44\x68\x4d\x4e\x0f\x96\x53\x8d\x6e\x3b\xd7\xba\x61\x21\x78\x8c\x42\x51\xb4\xa5\x4a\x5b\x52\x57\xa7\xed\x8a\xb1\x84\xe2\xae\x39\xa8\x47\x58\x49\x7c\xb6\x49\xb7\x5a\x6f\x58\xcd\x07\xcc\x7a\xfd\x58\x67\x55\x3c\xe0\x91\xc1\x54\x41\x6c\xf6\xf1\x5e\xf0\x6d\xbe\xf9\x9e\xe9\x05\xf3\xec\x85\xbb\x4f\xcc\xd8\xf9\xb1\x55\xb6\x62\x18\xcb\xaa\x65\x3f\x6f\x16\x35\xed\xe4\x87\x6e\x98\x57\x0b\x38\x76\x48\xea\xa9\xea\x3e\xcf\xf5\xc7\x7c\x5a\x77\x3e\xab\xba\x56\xc8\xc7\xaa\x9c\xc6\xf9\x61\xed\x0e\xee\xaf\xb3\xb9\x28\xe4\x7f\xe0\x56\x3c\x5f\xb3\x73\x4a\x54\x8b\xed\x70\xf4\xec\x8a\xf6\x96\xab\x9c\xc9\x93\xb5\xaa\xa6\xf7\x9c\x42\xb5\xdd\xe4\x4b\x9e\x0d\xa3\xbd\x24\xcf\xb9\x50\x59\xb1\xd6\xad\xb8\x33\xce\x0f\x91\x29\xba\xa6\x28\xec\xc4\x66\x3d\x4b\x45\x82\xf7\xa7\x6c\x62\x9d\xf0\xa7\x72\xce\x9b\xf2\xe2\xb8\xda\x37\xc4\x46\xa0\x6d\x6e\x86\xd7\xda\xa8\x11\x5b\xef\x4a\x27\xf0\x8e\x6d\xf4\x4b\x63\xc7\x51\x5b\xda\x6b\x47\x51\x35\x38\xf9\x33\x07\xf0\x91\x48\x4d\xd2\xd6\xb8\xa6\xb0\x75\x84\xd8\xda\xda\x14\x54\x3b\xac\xba\xf3\x56\x2f\x9c\xf9\x33\xc7\xd5\x96\x0f\xcb\x92\xac\x22\x1a\x44\xfb\x49\xa0\x65\x55\xd2\x55\x84\x6d\x57\x3f\x33\x6e\x59\x67\x15\x8d\xbc\x89\x1d\x20\x7d\xce\x5b\xba\xe7\xbe\xc2\xda\xca\xab\x45\xea\xad\x67\x88\x9c\xcd\x3e\x39\x4a\x8e\xff\x79\xca\x63\x89\xcd\xe9\x0e\xad\xde\xd2\x4a\xd7\xfc\x91\x5b\xec\xb6\x37\xf1\xdc\xe6\xbc\xf7\x34\xa5\xab\xed\x3b\x86\x81\x3b\x70\x4f\x3c\x3b\x35\xcd\xd7\x01\x3d\x5f\x36\x58\x4a\x05\x6d\xaa\x75\x55\x7c\x1e\xaf\x0e\x07\x40\x16\x9a\xef\x4c\xbe\x07\x00\x00\xff\xff\xb3\xf5\xfb\x49\x4b\x11\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\xdf\x6f\x22\x37\x10\x7e\xcf\x5f\x31\xda\x67\x0e\xe5\xb8\xaa\xed\xa1\x5e\x25\x4a\xc8\x69\xa5\x5e\x8a\x80\xa6\x52\xab\x3c\x18\x7b\x00\xeb\x76\xed\xad\xed\x4d\x1a\x45\xfc\xef\x1d\xef\x2f\xd6\xbb\x40\xb8\xe8\xa2\x24\x42\x3b\xe3\x99\x6f\xbe\xf9\x66\xd6\xbc\xbc\x80\xc0\x8d\x54\x08\x91\x45\xf3\x28\x39\x46\xb0\xdf\x5f\x01\xbc\xd0\x1f\x40\x34\xf9\x6b\xb9\xc2\x34\x4b\x98\xc3\x5b\x6d\x52\xe6\xee\xd1\x58\xa9\x55\x04\x63\x88\x46\xd7\xef\xaf\xdf\x5d\x7f\xa4\xdf\x68\x50\xba\x4f\xb5\x12\xd2\x91\xdd\x46\xe3\x2a\x04\x3d\x9d\x1b\xf9\x48\x01\xfc\x23\x88\x6e\xd5\x78\x3c\xfb\x37\x67\x89\x77\xf9\xc7\x3f\x59\xe0\x86\x3e\x36\x5e\xb0\x1f\x40\xe4\x4c\x4e\x9f\x1e\x60\x5f\xc4\xd8\x57\xe1\xe7\xcc\xb0\x14\x1d\x41\x68\x87\x9f\xe4\x4e\x13\x32\xc9\x6f\x99\x4c\xf4\x23\x9a\x99\x62\xeb\x04\x45\xcb\x87\xbc\x56\xcf\x99\x47\x10\x2d\x9d\x91\x6a\x5b\x01\x2e\x2c\x37\xb8\x61\x79\xe2\xbc\x71\x43\xb0\x30\xb4\x59\x6e\x64\xe6\x4b\xf2\xf6\x98\xca\xe3\x04\xd2\xc2\xd3\x0e\xdd\x0e\x0d\x7c\xa1\x93\xf2\xdd\xe4\x6f\x90\x16\xb0\xcc\x3b\xa4\x87\xd6\xc1\x1a\x81\x71\xae\xd3\x8c\x29\x89\x02\x9e\xa4\xdb\x41\xac\xac\x63\x8a\xa3\x07\xf3\x89\x33\xbe\xc3\x61\xfa\x61\x98\xa2\x90\x79\x0a\xda\xc0\x4e\x6e\x7d\x50\xa6\x04\xdc\xe5\xe9\xd4\x3b\x4c\x13\x0a\x86\xe6\xd3\xe8\x60\x1f\x46\x15\xc0\x7d\x8d\x34\xba\x61\x8e\xad\x99\xc5\x23\x35\xc3\xd9\xa2\xbd\xf5\xfa\x54\xc5\xde\x58\x39\x82\xa8\x32\x80\x54\x02\xff\xeb\x23\x68\x97\xf6\x06\xe6\x4b\x32\xdc\x68\x98\x4a\x6e\xf4\x99\x16\xac\x76\x08\x8e\x22\x82\xde\x10\x94\x32\x27\x38\x0d\x39\x15\xdf\x03\xd5\x52\xde\x65\x78\x82\x54\x53\x83\x74\x98\xb2\x40\x56\xc6\x01\x9b\xaf\x15\x3a\x7b\xa9\x7a\x26\x49\xa2\x9f\x50\xdc\xb3\x24\xc7\x52\xee\xa5\xb0\x07\xb5\x2f\x3c\xf4\x20\x77\xfa\x6e\xdf\xc0\xe5\xfb\x57\xe8\x53\x79\xba\x26\x95\x11\x81\x05\xeb\xc0\xab\x54\xb0\x21\x89\xb9\x1d\x29\xd9\x60\x96\x78\xa1\xd3\x21\xd8\x1a\x9d\x67\x7d\x6a\x97\x15\x15\x47\xe1\xfd\x2e\xad\xfb\x85\x76\x07\x8d\xfa\x74\x34\x1e\x97\xbe\xe3\x71\x2c\x7e\x3d\x03\xed\x7e\x3e\x6d\x08\x3e\x95\xee\x74\x43\xe1\x1b\xd2\x1e\xa4\x7f\x4e\xf9\x1e\x4f\xb7\xf1\x3d\x5c\xf7\x19\x3f\x4e\xc1\x01\x06\xc5\xf1\x18\xce\x57\x7e\x34\xf2\x54\x0a\x13\x46\x3f\x42\xd9\x34\xbe\x59\xc0\x6f\x89\xe6\x5f\xdb\x19\x3a\x42\xa9\xa3\x07\xeb\xf4\x8f\xdc\x65\xb9\x0b\x57\xb5\x36\xee\xc7\x0f\x3f\x7d\x5c\xf1\x6c\x22\xca\xe4\x94\xc5\xeb\xf7\xb0\xbd\x3f\xa3\x9b\x38\x57\xca\x79\x71\x10\xca\xe7\x42\x27\x83\x62\xe8\x52\x66\x9e\x67\x4a\xcc\xb5\x54\x6e\xe8\x03\xa1\xb5\xc5\x3a\x6f\xcf\xe6\x21\x95\xff\xf8\x5d\x52\x15\x81\x3a\x79\x66\xea\x71\x41\x0b\xd6\xb6\x57\x64\x90\xa8\x7a\xff\x34\x76\x7f\x3a\xe0\x69\x81\x56\xe7\x86\x63\xc0\xd4\x12\x79\x6e\xa4\x7b\x2e\xb1\xbc\x22\x81\xd0\xb9\xd5\xa6\xb9\xd1\x19\x1a\x27\x31\x1c\x24\xb2\x14\xae\x9d\x76\x1b\x5f\x07\xd4\x2f\xea\x41\xdb\x3d\xc8\x10\xab\x6d\xc1\x38\xf1\xd6\xf2\x01\x5f\x6c\x9c\x51\x4a\xa7\xb9\x4e\x7c\x40\xc7\x0b\x1a\x6f\x8d\x4e\xab\x1e\x44\xbe\x25\xfe\xd9\x4a\x77\x9f\x78\x35\xc6\x59\xc0\x59\xad\xd1\x86\xb2\xf2\xe7\x21\x80\x46\x4e\xb1\xe8\x1e\x8b\x5a\x07\xf6\x3d\xed\x17\x1b\xb0\x1c\xdf\x57\xf9\x4d\x98\x75\xb2\x38\x50\x4f\xfc\x37\xb0\xdc\x21\x78\x51\x12\x5c\x44\xa9\x16\x5f\xc8\x72\x61\x89\x85\x3d\x48\x34\xde\x94\xf2\xac\x37\xd3\xa0\xcb\x78\x55\x73\x67\x81\x1d\x8a\x3d\xe1\x18\x85\x8c\x9e\xa5\xab\x37\x1a\x17\xd2\xd5\x1f\xa9\x4b\x38\x3b\x77\xdf\x6a\xaa\x38\xe9\x14\x16\x5e\xf8\x7d\x91\x4a\x9b\xea\x62\xf9\x67\xb6\x35\x4c\x78\xbc\xfe\x4d\x19\xb8\x16\xa0\xef\xb4\x68\xae\x18\x4d\xb2\xe0\xee\xd1\x49\xd0\x95\xd2\x1d\xdd\x20\x83\xc3\x3d\xad\x75\x02\xcc\xd4\x96\xee\xc7\xcd\xf8\x45\x47\x8c\xf5\xa5\xd8\xdf\x89\x87\x3f\x0f\x47\x3f\x84\x4e\xc7\x5e\xe9\x4d\xfa\x9e\xb1\x93\x3e\x9c\xc2\xb6\xa5\xdb\xbd\x50\xcb\xad\x56\xf8\xbe\x2f\x1d\xe3\x5f\x8b\xda\x3b\xf1\xc3\xc5\x21\xba\xb7\xf2\x70\x73\xd1\x9c\x3f\xf4\x75\x78\x55\xff\xdf\x5f\xd1\xf7\x09\xa4\xcb\x2b\x7d\x85\xf8\x3f\x00\x00\xff\xff\xfd\xaf\xc0\xe0\x5a\x0c\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceS3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x4b\x6f\x1b\x37\x10\xbe\xe7\x57\x0c\xf6\x52\x40\xd8\xd4\x76\x7d\x68\xcb\x9b\x6b\x3b\xad\x9b\x54\x16\x2c\x37\x3d\x14\x3a\xd0\x2b\xae\xc4\x7a\xb5\x54\x49\xae\x64\x43\xd8\xff\xde\xe1\x63\xb5\x0f\x52\x92\x5b\x04\x08\x2a\x44\x89\x96\x1c\xce\x8b\xdf\x37\x33\x9b\xdd\x0e\xe6\x2c\xe7\x25\x83\x44\x31\xb9\xe1\x19\x4b\xa0\xae\xdf\x01\xec\xf0\x0b\x90\x5c\xfd\x31\x7d\x64\xab\x75\x41\x35\xfb\x20\xe4\x8a\xea\xcf\x4c\x2a\x2e\xca\x04\x08\x24\xdf\x9d\x5f\x9c\xbf\x3f\xff\x11\xff\x24\xa9\x13\xbf\x16\xe5\x9c\x6b\xdc\x57\x09\xf1\x2a\x70\xf5\x51\xac\x79\x66\x16\x20\xf9\x50\x12\x32\x16\x1a\x1f\xfe\x6c\x1e\x6f\xff\xae\x68\xa1\x9a\x95\x07\x96\xe3\x4f\x7f\x04\xea\x14\x92\x04\x66\x50\x9b\x6f\xda\xe8\xf3\x3e\xf0\x72\xd1\x2a\x8d\x6a\xe9\x08\x5a\x55\x5a\x56\xcc\xaa\xb3\x9a\xbc\xc2\x64\x42\x25\x5d\x31\x8d\xb2\x51\xa7\xfd\x82\x59\x7a\x5d\x33\x1b\xf8\x54\x4b\xa3\x33\x6d\xb7\x6e\x58\x4e\xab\xc2\xc4\x95\xf4\x97\x55\x26\xf9\x5a\x37\x19\x9b\x8e\xa7\x60\x15\xc3\x18\x4d\x42\x2e\x24\x94\x42\xf3\x9c\x67\xd4\x65\xcd\x1f\x3d\x14\xeb\xbf\xf5\x25\xc7\x9c\xb0\x63\x0e\xdd\x96\xf4\xa9\x60\xb0\x69\xad\x34\x1e\xf4\x52\xf4\xc0\x94\xa8\x64\xc6\x7a\x19\xfa\xa9\xca\x9e\x99\xee\xb9\xd5\x38\x46\x2c\x72\x08\x99\x5e\x12\xe2\xc5\xd2\xae\xd0\x44\x8a\x35\x93\x9a\xf7\x14\xee\x77\xaf\x32\xb4\xa4\x10\x4b\x5a\x8a\xc2\xe8\x9a\x48\xbe\x41\x04\xf6\x74\x74\x5c\x30\xb9\x74\x48\xf0\xf7\xee\x6c\x6b\x9a\x3d\xdb\xad\x36\x9d\xfb\x83\xe3\x4e\xd6\xd1\x50\xce\x17\x95\xb4\x0f\x11\x7f\xc0\x21\xec\x2e\xb7\xe8\xf2\xc0\x18\x6a\x34\x9f\xf0\xa0\xcb\x88\x39\xd0\x33\x62\x71\x1a\x15\x3e\xa4\xc4\x2a\xba\xdd\xb0\x52\xdb\x6b\x53\x97\xe4\xfe\xe9\x2f\x96\xe9\x6b\xc9\x30\x31\x73\x32\x8a\x3a\xd4\x75\xc0\x9c\xf3\x5c\xf9\x55\xf0\xd2\xc5\x42\x92\xd4\xfc\x43\x65\x49\xe8\x56\x11\x85\x9e\xa5\xc3\x3c\x3e\xb0\x85\x45\x4b\x1d\xec\xe0\x3d\x89\xaa\xd4\x77\xf3\xc1\x66\x43\x5e\x64\x5a\xc3\xb5\xf0\x13\xdc\xc9\x7f\x4b\xc0\x03\x5b\x89\xcd\xff\x33\x01\xd1\xf5\x59\x64\x35\x9a\x2a\x6f\x0d\x1a\x5f\xc6\xe2\x33\x2d\x4c\x79\x0b\xf5\x0e\x75\x86\x74\x68\xab\x4c\x40\x86\x3e\xf8\x3b\xe5\x28\x74\x6a\x67\xaa\x11\xd5\x95\x81\xb7\xaf\x2c\xf3\x08\xf9\x60\x98\xc6\x83\xae\xcf\x22\xae\x3e\xd2\xc5\x21\xfa\xec\x76\x67\xa3\x68\x52\x7f\xb9\xba\xfe\x48\x00\x4d\x32\xc9\xca\x0c\x9d\x77\x45\x78\x22\x0a\x9e\xbd\xda\x2a\x4c\x41\xd3\x05\x70\xec\x74\x3c\xe3\xba\x78\x85\xcc\x12\x4b\x81\x5e\xb2\x9e\xf0\x13\x43\x71\x66\x97\x5d\xf1\xf9\x36\x6a\xf1\x71\xc9\x15\xe4\xfc\x05\x35\x50\x2f\x08\x6b\x29\x36\xdc\x67\x0f\x98\x94\x68\x76\xbb\x64\x25\x70\x0d\x19\x2d\xbf\xd1\xb0\xa1\x05\x9f\xa3\x55\xc0\xda\xb8\xe2\xca\x88\x2a\x10\xa5\x35\xa6\x8d\x0f\x47\x6c\x71\x63\x68\x2b\xe4\x33\x95\x08\xc9\x39\x28\x5e\x66\x0c\x6e\xd8\x9a\x95\x73\x75\x5f\xc2\xaa\x52\x1a\x9d\x07\x85\x17\x84\xed\x87\xa2\xc8\x96\x17\x85\xf7\x03\x8d\x64\x4d\xeb\xa6\x05\xec\xcb\x3d\x9a\xa6\x1a\xe6\xc2\x78\xc7\x5e\xb8\x8a\x46\x3b\x3a\xab\x63\x58\xee\x21\xe7\x48\xd5\xb4\x92\x1f\xd9\xeb\x9e\x38\x2e\xd3\xc8\xc3\xc4\xc1\x82\x0c\x99\xe5\x05\x90\x5f\x07\x8a\xc8\x5b\xf1\x65\x3e\xb3\x00\x74\x9d\xe7\x3a\xe8\xc7\x5d\x07\x7a\x0d\x79\x3f\xfa\xb4\x05\x20\x1d\xb4\xeb\x7d\x67\x1a\xe3\x5f\xbd\x50\x5b\xc1\x4e\x67\x84\x41\x67\x75\xc2\x37\x22\xab\x56\xbe\x0c\xf6\x4b\x65\x43\xce\xc4\x8e\x66\xe7\x3f\xbc\xc7\xe9\xec\xe2\xfb\x41\xce\x13\x2c\x56\x6e\x10\x89\x3b\x60\x65\x0c\x8b\x99\x35\x82\x57\x17\xb4\xe7\x29\xb7\x2a\x2e\xc2\x76\x7c\x9b\xe7\x58\x92\x6d\x9c\x45\x21\xb6\xa1\x00\x36\x72\xe4\xdf\x9a\x16\xf1\x36\x8b\xd9\x31\x87\x47\xc9\xc9\x82\x75\x95\xf9\x54\x87\x75\xc0\xc4\x46\x26\xd5\x53\xc1\xd5\x72\xa8\x68\x16\x28\x6a\xa0\x9e\x7c\xa5\xe6\x10\x38\xd4\xc5\x51\x2c\x45\xb2\xfc\xc4\x9f\x59\x74\x13\xb7\x8d\x9f\x53\x1b\x10\x0a\xbe\x25\xa6\x4b\x32\x32\xbd\xf3\xd8\xf0\x74\xa0\x8b\x0d\x57\xfa\xcf\x75\x8f\x46\xbd\xe1\xcf\x26\x20\xac\xe1\x5f\xbb\x37\xb7\x0e\x87\xac\xff\x1d\x5f\x8e\x22\xf3\x77\x63\xeb\xee\xea\x37\x42\xac\x4c\x9c\xc9\x43\x22\x53\xbd\x34\x67\xcf\xb0\xe6\x6e\xc4\xcb\xd9\x60\x36\x36\x94\x74\xa7\x06\xdc\xf3\x15\xc0\x5d\x8b\x21\xf1\xa5\x9b\x94\x87\xf4\x3d\x55\x28\x4e\x31\xbc\x65\x32\xfe\x3c\x48\xe6\x96\x85\x4e\x0a\xa1\xf4\x09\x3b\x44\x64\xdc\xf7\xd2\x7b\xaa\x0d\x06\x31\x30\xfd\xc1\xdc\x75\x17\x95\xc4\xdc\xfe\xae\x3f\xe2\xb4\xa0\xac\x67\x21\x22\xeb\xf4\x8b\xc5\x11\x1b\x26\xbf\xa8\xfb\x80\xcd\xed\x6c\x94\xc4\xa2\xe8\x0f\x6b\xdd\xed\xfa\x18\x42\x1d\x12\x5c\x1b\x3d\x0a\xd3\x56\xf0\x4d\x58\x35\xa8\x0e\xde\xaf\x2c\xd4\x3b\xbe\xd5\xd1\x97\xc6\xfb\x4a\xaf\x2b\x7d\xea\x95\x31\xd2\xe4\xbd\xd4\xdb\xa3\x0c\x55\xb4\x82\x11\x2d\x53\x86\xd3\x9d\x3e\xad\xcb\x5c\xf1\xcf\x28\xa8\x2d\x4b\x3a\x3a\xd3\x50\xc7\x6c\x98\x84\x77\xe6\xbb\xdb\x01\xce\x5f\xe6\x7f\x54\xfe\x09\x00\x00\xff\xff\xc2\xbe\x10\x8f\x69\x11\x00\x00")

func templatesServiceS3TmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceS3Tmpl,
		"templates/service/s3.tmpl",
	)
}

func templatesServiceS3Tmpl() (*asset, error) {
	bytes, err := templatesServiceS3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/s3.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSnsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x53\xe3\x38\x10\xbd\xf3\x2b\x54\x3a\x52\x81\x84\xbd\xec\xae\x6e\xa9\x05\xb6\xd8\x8f\x4c\xc0\x0c\x73\xa0\x7c\x30\x8a\x02\x2a\x1c\xc9\x58\x32\x0c\x43\xf9\xbf\x4f\x4b\xb2\x62\x4b\x32\x49\x8e\x53\x85\x89\xa5\x6e\xb5\x5e\xf7\x7b\x2d\xf9\xe3\x03\xad\xd8\x9a\x0b\x86\xb0\x62\xf5\x2b\xa7\x0c\xa3\xb6\x3d\x42\xe8\x03\x1e\x84\xf0\xfc\x5b\x76\xcb\x36\x55\x59\x68\x76\x29\xeb\x4d\xa1\xef\x58\xad\xb8\x14\x18\x11\x84\x7f\x9b\x9d\xcd\x4e\x66\x7f\xc2\x1f\x9e\x38\xf7\xbf\xa4\x58\x71\x0d\x76\x85\x49\x17\x02\x66\xaf\x1b\xd6\x30\x33\x81\xf0\xa5\x20\x64\x21\x35\x0c\xee\xfd\xf0\xe2\xa5\x29\x4a\xe5\x67\x6e\xd8\x1a\x5e\xbb\x25\xa8\x9d\x20\x8c\x51\x8e\x5a\xf3\xd8\x70\x6d\xb7\xd3\xb2\xa8\x8b\x0d\xd3\x80\x66\x74\xa7\x6e\x02\xa6\x6e\xdf\x2b\x66\xd1\x66\xba\xe6\xe2\xb1\x43\x6a\x4d\xe7\x6c\x5d\x34\xa5\x01\x83\xc3\x69\x45\x6b\x5e\x69\x9f\x66\x76\x9d\x21\x1b\x18\x2d\x60\x4b\xa4\x25\x52\xcd\x83\x71\x79\xb0\x03\xfd\xc4\x15\xfc\x56\x9c\xe2\x2e\x46\x88\xf4\x86\x29\xd9\xd4\x94\x05\x40\x6f\xad\x7f\x0a\x94\xd8\x92\x13\x92\x2d\xe0\x9f\x73\x1a\x20\x5b\xd6\xb2\x62\xb5\xe6\x41\x2c\x6b\xc9\x1c\x22\x07\x1a\x4a\xd9\xd5\xf6\x6a\x6d\xeb\xda\xd5\x65\x32\x58\x81\x82\xf5\x36\xc6\x85\x58\x55\x92\x0b\xdd\x33\xf5\x0f\x0c\x5d\x00\x82\x27\xe6\xa7\xa8\x05\x29\xde\x14\x51\x2f\x0a\x26\x7a\xba\x2c\xe6\x1b\xf6\x68\x4b\xd6\x26\x96\x39\xa5\xb2\x11\xfa\x6a\x15\x19\x3d\xcb\xc0\x6e\xee\xeb\x35\x00\x04\xe9\x6a\x49\x65\x69\x5c\xcd\x8e\x81\x3d\x72\xef\x82\x22\xbf\xe5\x42\xde\x15\xa5\x0d\x3e\x70\xcb\xdb\x7c\xb8\xca\xb1\x60\x48\x35\x29\x07\x88\x33\x5d\xd0\x67\x6b\xe9\xd7\xfb\xb7\xed\xce\x0e\xff\x52\x96\x9c\xbe\x87\x5c\x6e\xfb\xa0\xcf\x72\xf2\x19\xd3\xd7\xf0\x6f\x18\x68\x9c\x6f\x14\x11\xee\x9c\xcf\x25\x6d\x36\x0c\x28\x8b\xcc\xe0\xe0\x1b\xd5\xf6\xe9\xec\x8f\x13\x68\xd5\xb3\xdf\x23\x09\x60\x60\x84\x84\x69\x44\x0e\x50\x07\xcd\xec\x0e\x46\x54\x31\x41\x19\xb7\xeb\xcf\x70\x42\xdd\xc5\x7a\xcd\xa8\xed\xac\x79\x59\xca\xb7\xd4\x61\x09\xcd\x48\x79\x55\x94\x38\x46\x6e\xcd\x50\x1a\xb3\xf8\x18\x47\xa6\x54\x24\x73\xea\x35\x9f\x46\x31\xb5\x4d\x42\xe4\x49\x08\xdf\xa1\xbf\x8c\xf0\x87\xf2\x19\x2b\x4e\x2d\xfe\xe3\xcf\x6c\xd4\x08\x66\x83\x33\xb3\x09\x81\xe3\x21\x39\x09\x45\x8e\xa1\x4e\x09\xfa\xbe\x09\x3c\xd2\x64\xbb\x78\x26\x1c\xb7\xf9\x60\x18\xa4\xe9\x2a\xa0\x12\xda\x12\xac\x06\x6a\x5c\x9e\x27\xad\x2b\x45\xa6\x53\x20\xe3\x74\x27\x1b\xf8\xb4\xd8\x14\x3f\xa4\x80\x2c\x4f\xa9\xdc\x4c\x53\xe7\x90\x20\x1c\x7a\x78\x96\x82\xfd\xe3\x3a\xe4\x3b\xce\x87\xaf\x70\xa7\xee\x38\xe4\xaf\xe6\xff\x13\x62\x7d\x0e\x3a\xe3\x97\x85\x7e\x32\x6b\xa7\x54\x8a\x57\xf9\x7d\x1a\x34\x95\x3b\x10\xdc\xaa\xa8\x51\xbb\xb3\xc2\x11\x69\xee\xb3\x45\x06\x69\x33\xa5\xe2\x66\xdf\x77\xa6\xec\x3b\x0f\xfa\xbe\x87\xd7\x4f\x5b\xbf\xef\x59\xe7\x65\xe5\x37\xe6\xb5\x6d\x4b\x14\x6a\x18\x86\xf7\x56\x17\x81\x82\x0d\x73\x63\x3a\x30\xb4\xa6\xc6\x9e\xf7\xd0\x8e\x46\x2e\x80\x3c\x15\x7e\x20\xec\x50\xf5\xed\x2e\x41\xb8\xba\xff\xcb\xde\xf7\xa9\xa2\x77\x3c\x48\x1a\x46\x44\xfe\x1e\xdb\xca\xd7\x2a\x0b\x8d\xdc\x5f\xc1\xe7\xc9\x97\x46\x57\x8d\xde\xf7\x71\xe2\x2e\xd3\x61\x74\xe7\x34\x92\xa3\xc7\x31\xba\xd8\x90\xf8\x37\xd3\x73\x6d\x05\xd4\x05\x99\x0c\x6f\xe2\xfc\xf0\xb2\xa5\xa0\x7a\xc7\x91\x28\x19\xa3\x35\x6c\xbd\x37\x56\x84\x71\x40\x45\x1a\x23\x8f\xab\x7a\x64\x1e\xf8\xaa\x66\x62\x65\x3e\xa4\x7f\x06\x00\x00\xff\xff\x2d\x2c\xe5\xce\x60\x0b\x00\x00")

func templatesServiceSnsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSnsTmpl,
		"templates/service/sns.tmpl",
	)
}

func templatesServiceSnsTmpl() (*asset, error) {
	bytes, err := templatesServiceSnsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sns.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSqsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\x38\xe8\x71\xf0\x56\xd7\xed\x06\x54\x6f\x06\xb2\x0e\xdd\x90\xce\x89\xbd\xf4\xa1\xf0\x03\x4d\x9d\x6c\xa2\x14\xa9\x90\x94\x1d\xcf\xf0\x7f\xef\x91\x92\x2c\xc9\x52\xe2\x18\x88\x83\x44\xdf\x77\x1f\xef\xee\x3b\x9e\x7c\x38\x40\x82\xa9\x50\x08\x91\x45\xb3\x15\x1c\x23\x38\x1e\x6f\x00\x0e\xf4\x01\x88\xa6\xdf\xe6\x0b\xcc\x72\xc9\x1c\x7e\xd6\x26\x63\xee\x11\x8d\x15\x5a\x45\x10\x43\x34\x19\xbf\x1f\xff\x3a\xfe\x44\x3f\xd1\xa8\xa4\xcf\x98\x61\x19\x3a\xe2\x44\x71\x25\x41\x4f\xef\xd0\x5a\xb6\xc6\x07\x02\x94\xa3\xe0\x19\x1a\xa1\x93\x16\x83\x38\xb7\x68\xb9\x11\xb9\x87\x09\x88\x16\x1b\x04\x55\x64\x2b\x34\xa0\x53\xb0\xc8\xb5\x4a\x2c\x4c\x33\xf6\xbf\x56\x30\xbf\x9f\x83\x41\xc7\x84\xb2\xc0\x20\x2b\xd5\xab\x14\x82\xd8\x62\x9f\xa3\x57\xf9\x1a\x14\xda\xc8\x2d\xa6\xac\x90\xce\x83\x1f\x3e\xfe\xfe\xc7\x78\xdc\x06\xef\x84\x7a\x64\xb2\x08\xa1\x5d\x80\x3d\x9f\x80\xf7\x93\xf1\x27\x1f\x57\xa1\xc7\x9a\x16\x3d\x20\x47\xb1\xc5\xaa\xd8\x6f\x4c\xb8\x85\xc8\xf0\xd5\x2a\xe7\x39\x72\x91\x0a\xb4\xe0\xa8\xde\xa4\x30\xcc\x23\x23\x10\xaa\x2e\x79\x44\x08\x73\x01\xee\xea\x03\xe3\x9e\x0b\x9c\x49\x09\x3b\x3a\xcc\x42\x41\xcd\x95\x4d\x43\x40\x58\x2f\xe4\x43\x9f\x0a\x2c\xd0\xff\xa3\x4d\x42\x1d\x75\x9a\xfe\xe6\xb2\x48\xe8\x99\xab\x39\x06\x6d\xae\x95\xc5\x11\x30\x0b\x3a\xcf\xb5\xc5\xc4\x33\xa9\xd1\x85\x51\x42\xad\x81\x29\xa0\x51\x70\xfb\x13\x15\x44\xda\x3d\x4e\x69\x07\x7b\x74\xc0\xb6\x4c\x48\xb6\x92\xd7\x9b\x72\xbd\x1f\x93\x01\x2b\x1e\x85\x15\x2b\x21\x85\xdb\x7b\x0b\x74\xe1\x2e\xce\x9a\x44\xb5\x76\x1b\x3f\x6b\x8e\x22\xba\x0e\x90\x2f\xbe\xfc\xdd\x46\xf0\x4d\xab\xde\x9d\xa0\xce\xaf\x90\xda\x7e\x2a\x17\xb4\xe2\xd8\x6d\x49\x82\x92\x4c\x33\xd4\xcb\xd4\xe8\xac\x71\xe3\x37\x58\x6c\x08\x5e\x49\xcd\x7f\x50\xbf\xe9\xb9\x01\xae\x33\xea\x2b\xdd\x11\x5b\x92\x4d\x70\xdc\x9f\xed\xc3\x2c\xdd\xac\x93\x32\x53\x09\xac\x49\xb8\x9c\x1c\xa1\x84\x13\x4c\x36\x02\xa1\x0a\xef\x5e\x6e\x34\xa7\x90\xc0\xa7\x54\xe8\x06\x86\x80\x5a\xe6\x2c\xa7\xeb\xef\xd0\xf5\x7e\x7d\xfc\x30\x69\xdd\x9e\x9b\x96\x71\x74\x83\xac\x2e\x0c\xe5\xdb\x5e\x1e\xf7\x3e\xb3\xae\x7f\x75\x6a\xb4\x9c\xe2\x98\x96\x41\x1c\x97\xa4\xd6\x89\x33\xa3\x73\x34\x4e\x74\xb4\xca\x5c\x5e\x5c\x46\x3e\x81\xd4\xeb\xbe\x40\x69\x06\xec\x95\xfb\x3e\x2f\xa7\xa6\xa3\xf7\xc2\x66\x38\xd3\x0b\x35\x7c\x65\xe5\xca\x38\xc5\x96\x35\x3a\xc6\x7f\x04\xe8\x2c\x66\x70\xd0\x4f\xb1\x7d\xb4\x6a\x78\xd3\xfa\xf6\xad\xf9\x8f\xde\x00\xaf\x34\xfa\xcb\xf4\x2e\x8e\x03\xe7\x4d\x7d\x9e\x31\xb7\xf1\xb1\xef\xa8\x1f\x5b\xfd\xfc\x2e\xea\x24\x3e\xd3\x52\xf0\x32\xea\x7b\x3b\xac\x86\xf6\x65\xb5\x7e\x47\xde\xcf\xa7\xdc\xcf\x70\x47\xe0\xc4\xbb\xd5\xbc\xc8\xc8\x26\xcf\xed\x0a\x11\x85\xfa\xe6\x30\xa0\xbd\x63\x02\xfe\x67\x9a\x22\xa7\x50\xf0\x07\x4d\xa5\xd4\xbb\xb3\x43\x02\x6b\x1a\x36\x6d\xc5\xb2\x4f\x36\xfe\x65\x88\x55\x0f\x6f\x48\x04\xa2\xcf\x2a\x8e\xff\xd6\x22\xbc\x28\xbf\x47\xd1\x88\x7e\x31\xa3\x62\xb6\xb3\xb1\x97\xa0\x07\x87\x8e\xc5\x0f\xb8\xf6\x87\x1c\x47\x10\xf5\x41\x6a\x80\xa6\xed\xfe\x25\x39\xc3\xa1\x3f\x20\xc7\xe5\xb2\x65\x72\x65\xf1\xb2\xf3\xa0\x0d\xb7\xa0\xfe\x40\x94\x7d\xff\x07\xf7\x97\xa6\xa2\x21\xbe\x69\x34\xfc\x10\xf5\x06\x3d\x4c\xd6\xd0\x7c\x76\x56\xc4\xbf\x85\xcb\x0b\x77\x69\x41\xd4\xcb\xa6\x51\x2f\x49\x03\x35\xd6\x79\x0c\x06\x7b\x13\xff\x42\x37\x75\x61\x80\x2a\x91\x51\xfb\xaa\x2e\x87\xda\x66\xd4\xd5\x8a\x3e\x66\x50\x6b\xd8\x82\x7e\x81\x0d\x71\x40\x85\x96\x12\xbd\xc6\x2f\x6b\x9d\x65\xd7\xb2\xb5\xaf\xb1\x3c\x77\xe8\xc6\x7f\xe8\xfb\x24\xd2\xab\x86\xbe\x42\xfe\x0c\x00\x00\xff\xff\x76\x37\xfd\x93\x5a\x0a\x00\x00")

func templatesServiceSqsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSqsTmpl,
		"templates/service/sqs.tmpl",
	)
}

func templatesServiceSqsTmpl() (*asset, error) {
	bytes, err := templatesServiceSqsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sqs.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSyslogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\xdd\x6e\xdb\x36\x14\xbe\xf7\x53\x10\x44\x81\x02\x9d\x23\xc7\x09\x8a\x61\x04\x76\xe1\x25\x75\x97\x2d\x5d\x0d\x3b\x6d\x2f\x86\x5c\x30\x34\xed\x68\x96\x44\x41\xa4\x92\x26\x81\xdf\x7d\x87\xd4\x8f\x45\x8a\x52\x9c\x20\x56\x0b\x03\x32\x3f\x9e\xff\xf3\x9d\xe3\x3c\x3d\xa1\x25\x5f\x85\x09\x47\x58\xf2\xec\x2e\x64\x1c\xa3\xed\x76\xf0\x34\x40\x08\x4f\x7e\x2c\xae\x78\x9c\x46\x54\xf1\xa9\xc8\x62\xaa\xbe\xf3\x4c\x86\x22\xc1\x04\xe1\x93\xe3\xf1\xf1\xd1\xf1\x6f\xf0\x1f\x0f\x35\xf6\x6b\xae\xd2\x5c\x49\x38\xd2\x57\x11\x02\xb9\x19\x4d\xd6\x1c\xbd\xdb\x0c\xd1\x3b\x9a\xa6\x88\xfc\x8e\x82\x49\x9a\x4a\x2d\x1e\x99\x07\x03\x28\x4f\x53\x9e\x19\x40\xf0\x0f\x8d\x39\x1c\x5e\x86\xc9\xa6\x16\x63\x60\xdf\x69\x94\x73\xad\x14\xf0\x06\x59\x2a\x0b\x2e\xc5\xfa\x73\x26\xf2\x14\x6e\xe1\x12\xbe\x1d\x56\xea\x79\xb2\xac\x54\xe1\x6f\x59\xd4\x10\x59\x0b\x6c\xe8\x98\xf3\x95\xd6\xa0\x81\x95\xa4\x41\xf5\x69\x64\xe2\x19\xcd\xc0\x40\x05\x21\xa8\x6f\xba\x72\xcf\xb9\x64\x59\x98\xaa\x32\x46\x8b\x07\x19\x89\x35\xfa\x36\xbf\x1c\x22\x1e\xac\x03\xf4\x5e\xb1\xf4\x17\x15\x49\x32\x1a\xc1\x81\x1c\x07\x29\x05\xef\x55\x46\xc3\x48\xbb\xc5\x44\x4c\xc6\xe3\x93\xd3\x8f\xef\xf1\xb0\x12\x79\xf5\x90\x1a\xd7\x17\x2a\x0b\x93\x35\x76\x6c\x9a\x73\x29\xf2\x8c\xf1\xb7\x88\xfb\x8c\x67\x71\x28\xcb\xfc\x36\x22\x33\xcb\x84\x36\x32\x6c\x28\x29\x4f\x26\xac\xf2\x34\xa2\xf1\xcd\x92\x92\x8b\xe4\x4e\x6c\xf8\x34\x4f\x8a\x83\x61\x13\x5c\x7d\xab\xb5\x39\x82\x76\xe1\xaf\xaf\x36\x4e\xb7\x96\x98\x19\x84\x81\x85\x29\x8d\xda\x32\xa6\x09\x21\x7f\x89\x50\x1b\xf4\xaf\x75\x02\x67\x81\x65\x8c\x7e\x5c\x08\x80\x74\x4e\x5a\x38\xe4\xa8\xb1\x0d\x86\x16\x21\x64\xce\xd7\x8e\xcd\x1e\xcb\xcb\x7b\x34\xa6\x8f\x22\xa1\xf7\x52\x67\xdb\xbd\x72\x3d\xe8\x7a\xb3\x83\xb0\x30\x49\x9f\x30\x26\xf2\x44\x75\x06\xd3\xd8\x56\x82\x2e\x96\xdd\x21\x2d\xa5\x65\xc9\xcb\x42\xba\x4f\x44\x69\x96\x10\xf0\x95\xe8\xc8\x92\x43\x87\xf6\x55\x0a\xbc\xf1\xe9\xd1\x01\x9e\x1c\xad\x35\xe7\x90\x1e\x32\x22\x1f\x5e\x90\xd9\x81\x47\x5f\xdd\xf6\xc6\xc6\xcb\xa2\xbb\x48\xa3\x43\x07\xce\x15\x7f\x4b\x2f\xf2\x9b\x9a\x90\xa6\x61\x04\xdc\x65\xb7\xf6\x39\x4f\x81\x25\xe5\x57\x37\xbf\xcf\x12\x44\x8d\xbd\x1e\xee\x43\x14\xc0\x8b\x2a\x4c\xa8\x36\xa3\xb3\xcc\x3e\x73\x35\x51\xca\x57\x68\x5e\x3e\x31\x27\x5a\xd8\x9e\x2d\x53\xb8\x3f\xa3\x0a\x3e\x0d\x65\xd9\xec\x54\x25\xaf\x64\xa7\x7d\x26\x4d\x5f\xc2\x74\xb9\x13\x4f\xf4\x7b\x87\x54\xed\x67\x63\xa2\x74\xc4\x14\x9f\x89\xa5\xcb\xa2\x78\x71\xfa\x47\xce\x36\xdc\x43\x08\x7d\x6d\x7c\xb4\x4f\x1f\x33\x01\xcc\xfe\xf3\x4d\x1b\xf8\xb5\xd4\x77\xfa\x37\x7f\xd8\x8d\x9c\x91\x34\x33\x36\x78\x0c\x53\x7f\x5e\xec\x91\x6c\xc5\xab\x3d\xf2\xed\xab\x3d\x13\xcb\x72\x71\xa1\x28\xdb\x18\x90\x57\xcc\x9f\x34\x59\x46\xa6\xf3\x70\x98\x2c\xf9\xcf\xe0\xb6\xfc\xa2\x81\x99\x8b\xa8\xa5\xa2\xa7\x29\x0a\xbc\x9d\x0d\xb7\x19\xae\xbd\xc6\xcc\x81\xeb\xc2\xa2\xc4\x13\x28\xa1\xff\x9a\xf3\x0e\x5f\xc1\x89\xc8\x95\x59\xef\x3e\xb6\x29\xc6\xcb\x49\xf6\xc4\x2e\xc1\xae\x3f\x9d\x65\x3c\x91\x32\x8f\xb9\x46\xcf\x44\x14\xb2\x87\x73\xc1\xe0\xbd\x35\xd3\x60\xfb\x81\x1d\xb4\x3c\xb0\x43\xe1\x16\xe0\x6e\x29\xf1\x94\xb1\x54\x92\xec\x54\xb6\x38\xba\xc5\x2f\x9f\x56\x2b\xce\x4c\x3c\x26\x51\x24\xee\xdb\x04\xd4\xbd\x8d\x14\x66\x97\x1b\xb5\xcf\x18\x54\x95\x70\xd0\xbb\x12\xb8\x9d\xe1\x76\x4e\xf3\xcd\x72\x00\xdb\xcb\xfa\xc9\x11\xec\xeb\xe3\x5f\xfd\x25\x0a\xb4\x78\xab\x71\xa3\xa2\xcf\x47\xcd\xa2\x30\x89\x29\x12\xd7\x74\xc2\x61\x98\xde\xf4\x15\xb1\xe8\x4c\x61\x5b\x5c\x79\xa5\x27\x95\xe6\x9c\x45\x22\x5f\xde\x53\xc5\x6e\xc9\x2c\x57\x5f\x38\xac\xc8\xec\x9c\x2a\xea\xe1\x29\x83\xf7\x6f\xa9\x1e\x6c\xab\x12\xcc\xf5\xe7\xaa\xc1\x80\xaa\x8d\x5c\xc3\x5a\x5b\x80\x77\xa7\x78\x95\xeb\x66\xa1\x3a\xcb\x38\xc4\xb4\x1a\x4d\x9d\x5e\x5b\x50\xf8\x1d\xc1\x69\xdc\x8b\x85\x58\x02\xf0\xd3\x1d\xe4\x4a\x1e\x30\x3a\xd6\x6e\xf8\x41\xff\x3b\x5c\xb8\x4c\xa5\xac\xcc\x6f\x58\xc0\x91\x62\x28\xdc\x70\xc3\xdc\x07\xf4\xd1\x67\x6b\xff\x38\xae\x31\x1d\x19\xf2\x4d\xe7\xfa\x4e\x15\x51\xc7\xdb\x4e\x51\xfe\x60\x36\x1c\x79\x7e\x8c\x57\x8f\x27\x51\xb5\x9c\x37\x31\xa0\x67\x4f\xdf\xcb\x06\xa9\x53\x3d\x7a\x0b\x4b\x3c\xe3\xfe\x25\x96\x8c\x3c\x65\x5e\x3c\x2e\xd1\x77\x7f\xeb\x2e\x4f\x9e\x75\xaa\x35\xaa\x9e\x19\x07\x1e\xb3\x4b\x52\xaf\x56\xe2\x62\xe2\x9f\xe9\xda\x9a\x56\xb5\x65\xde\x7e\x68\x06\xc6\xde\x9f\x34\xd7\xfd\x4b\xc4\xc5\xe4\x0b\x94\x56\x3d\x8a\xcd\xdf\x35\x06\xdb\xc1\x6e\x2f\xfe\x3f\x00\x00\xff\xff\xdc\xdf\x2a\x9d\x9e\x12\x00\x00")

func templatesServiceSyslogTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSyslogTmpl,
		"templates/service/syslog.tmpl",
	)
}

func templatesServiceSyslogTmpl() (*asset, error) {
	bytes, err := templatesServiceSyslogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/syslog.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/service/fluentd.tmpl": templatesServiceFluentdTmpl,
	"templates/service/memcached.tmpl": templatesServiceMemcachedTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/s3.tmpl": templatesServiceS3Tmpl,
	"templates/service/sns.tmpl": templatesServiceSnsTmpl,
	"templates/service/sqs.tmpl": templatesServiceSqsTmpl,
	"templates/service/syslog.tmpl": templatesServiceSyslogTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"service": &bintree{nil, map[string]*bintree{
			"fluentd.tmpl": &bintree{templatesServiceFluentdTmpl, map[string]*bintree{}},
			"memcached.tmpl": &bintree{templatesServiceMemcachedTmpl, map[string]*bintree{}},
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{}},
			"s3.tmpl": &bintree{templatesServiceS3Tmpl, map[string]*bintree{}},
			"sns.tmpl": &bintree{templatesServiceSnsTmpl, map[string]*bintree{}},
			"sqs.tmpl": &bintree{templatesServiceSqsTmpl, map[string]*bintree{}},
			"syslog.tmpl": &bintree{templatesServiceSyslogTmpl, map[string]*bintree{}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

