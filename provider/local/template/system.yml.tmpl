apiVersion: v1
kind: Namespace
metadata:
  name: convox-system
  labels:
    system: convox
    type: system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: convox-system
  name: router
  labels:
    system: convox
    type: system
rules:
  - apiGroups:
      - ""
      - extensions
    resources:
      - ingresses
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: convox-system
  name: router
  labels:
    system: convox
    type: system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rack
subjects:
  - kind: ServiceAccount
    name: router
    namespace: convox-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: convox-system
  name: router
  labels:
    system: convox
    type: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: convox-system
  name: router
  labels:
    system: convox
    type: system
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      system: convox
      type: system
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        system: convox
        type: system
    spec:
      containers:
      - name: router
        args:
        - router
        env:
        - name: DEVELOPMENT
          value: "false"
        - name: VERSION
          value: "{{.Version}}"
        image: convox/rack:{{.Version}}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        - containerPort: 5453
          protocol: UDP
      serviceAccountName: router
---
apiVersion: v1
kind: Service
metadata:
  namespace: convox-system
  name: router
  labels:
    system: convox
    type: system
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    system: convox
    type: system
---
apiVersion: v1
kind: Service
metadata:
  namespace: convox-system
  name: resolver
  labels:
    system: convox
    type: system
spec:
  type: LoadBalancer
  ports:
  - name: dns
    port: 5453
    targetPort: 5453
    protocol: UDP
  selector:
    system: convox
    type: system
