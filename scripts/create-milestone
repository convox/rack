#!/bin/sh

set -e

die() { echo $*; exit 1; }

gethub() {
  local path=$1 filter=$2 query=$3
  curl -s -u :$token "https://api.github.com$path?$query" | tr -d '\t\r' | jq -r "$filter"
}

posthub() {
  local path=$1 data=$2 filter=$3
  curl -X POST -s -u :$token -d "$data" "https://api.github.com$path" | tr -d '\t\r'# | jq -r "$filter"
}

patchhub() {
  local path=$1 data=$2 filter=$3
  curl -X PATCH -s -u :$token -d "$data" "https://api.github.com$path" | tr -d '\t\r'# | jq -r "$filter"
}

merge() {
  local pr=$1
  local base=$(git rev-parse --abbrev-ref HEAD)
  local remote="https://github.com/$(gethub /repos/convox/rack/pulls/$1 ".head.repo.full_name")"
  local ref=$(gethub /repos/convox/rack/pulls/$1 ".head.ref")
  local work="merge-${ref}"

  git branch -D $work >/dev/null 2>&1 || true
  git fetch $remote $ref:$work
  git checkout $work
  git rebase $base || (git rebase --abort; git checkout $base; die "could not rebase: $pr")
  git checkout $base
  git merge --no-ff --no-edit -m "[merge] pull request #$pr" $work
  git branch -d $work
}

milestone=${1:-$(date +%Y%m%d)}
token=$(git config github.token)

[ -n "$token" ]        || die "no github.token found in git config"
[ -x "$(which curl)" ] || die "needs curl"
[ -x "$(which jq)" ]   || die "needs jq"

echo "milestone: $milestone"

mid=$(posthub /repos/convox/rack/milestones "{\"title\":\"$milestone\"}" ".number")

gethub '/repos/convox/rack/issues' ".[]|select(.pull_request)|.number" "labels=status/6-merge" | while read pr; do
  echo "adding to milestone: $pr"
  patchhub "/repos/convox/rack/issues/$pr" "{\"milestone\":$mid}" >/dev/null
done
