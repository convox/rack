package api

func (s *Server) AddRoutes() {
	s.Route("POST", "/apps/{name}/cancel", s.AppCancel)
	s.Route("POST", "/apps", s.AppCreate)
	s.Route("DELETE", "/apps/{name}", s.AppDelete)
	s.Route("GET", "/apps/{name}", s.AppGet)
	s.Route("GET", "/apps", s.AppList)
	s.Route("SOCKET", "/apps/{name}/logs", s.AppLogs)
	s.Route("PUT", "/apps/{name}", s.AppUpdate)
	s.Route("POST", "/apps/{app}/builds", s.BuildCreate)
	s.Route("GET", "/apps/{app}/builds/{id}.tgz", s.BuildExport)
	s.Route("GET", "/apps/{app}/builds/{id}", s.BuildGet)
	s.Route("POST", "/apps/{app}/builds/import", s.BuildImport)
	s.Route("GET", "/apps/{app}/builds", s.BuildList)
	s.Route("SOCKET", "/apps/{app}/builds/{id}/logs", s.BuildLogs)
	s.Route("PUT", "/apps/{app}/builds/{id}", s.BuildUpdate)
	s.Route("GET", "/system/capacity", s.CapacityGet)
	s.Route("PUT", "/apps/{app}/ssl/{service}/{port}", s.CertificateApply)
	s.Route("POST", "/certificates", s.CertificateCreate)
	s.Route("DELETE", "/certificates/{id}", s.CertificateDelete)
	s.Route("POST", "/certificates/generate", s.CertificateGenerate)
	s.Route("GET", "/certificates", s.CertificateList)
	s.Route("", "", s.EventSend)
	s.Route("DELETE", "/apps/{app}/processes/{pid}/files", s.FilesDelete)
	s.Route("POST", "/apps/{app}/processes/{pid}/files", s.FilesUpload)
	s.Route("", "", s.Initialize)
	s.Route("POST", "/instances/keyroll", s.InstanceKeyroll)
	s.Route("GET", "/instances", s.InstanceList)
	s.Route("SOCKET", "/instances/{id}/shell", s.InstanceShell)
	s.Route("DELETE", "/instances/{id}", s.InstanceTerminate)
	s.Route("DELETE", "/apps/{app}/objects/{key:.*}", s.ObjectDelete)
	s.Route("HEAD", "/apps/{app}/objects/{key:.*}", s.ObjectExists)
	s.Route("GET", "/apps/{app}/objects/{key:.*}", s.ObjectFetch)
	s.Route("GET", "/apps/{app}/objects", s.ObjectList)
	s.Route("POST", "/apps/{app}/objects/{key:.*}", s.ObjectStore)
	s.Route("SOCKET", "/apps/{app}/processes/{pid}/exec", s.ProcessExec)
	s.Route("GET", "/apps/{app}/processes/{pid}", s.ProcessGet)
	s.Route("GET", "/apps/{app}/processes", s.ProcessList)
	s.Route("POST", "/apps/{app}/services/{service}/processes", s.ProcessRun)
	s.Route("DELETE", "/apps/{app}/processes/{pid}", s.ProcessStop)
	s.Route("GET", "/apps/{app}/processes/{pid}/wait", s.ProcessWait)
	s.Route("SOCKET", "/proxy/{host}/{port}", s.Proxy)
	s.Route("POST", "/registries", s.RegistryAdd)
	s.Route("GET", "/registries", s.RegistryList)
	s.Route("DELETE", "/registries/{server:.*}", s.RegistryRemove)
	s.Route("POST", "/apps/{app}/releases", s.ReleaseCreate)
	s.Route("GET", "/apps/{app}/releases/{id}", s.ReleaseGet)
	s.Route("GET", "/apps/{app}/releases", s.ReleaseList)
	s.Route("POST", "/apps/{app}/releases/{id}/promote", s.ReleasePromote)
	s.Route("POST", "/resources", s.ResourceCreate)
	s.Route("DELETE", "/resources/{name}", s.ResourceDelete)
	s.Route("GET", "/resources/{name}", s.ResourceGet)
	s.Route("POST", "/resources/{name}/links", s.ResourceLink)
	s.Route("GET", "/resources/", s.ResourceList)
	s.Route("OPTIONS", "/resources", s.ResourceTypes)
	s.Route("DELETE", "/resources/{name}/links/{app}", s.ResourceUnlink)
	s.Route("PUT", "/resources/{name}", s.ResourceUpdate)
	s.Route("GET", "/apps/{app}/services", s.ServiceList)
	s.Route("PUT", "/apps/{app}/services/{name}", s.ServiceUpdate)
	s.Route("GET", "/system", s.SystemGet)
	s.Route("", "", s.SystemInstall)
	s.Route("SOCKET", "/system/logs", s.SystemLogs)
	s.Route("GET", "/system/processes", s.SystemProcesses)
	s.Route("GET", "/system/releases", s.SystemReleases)
	s.Route("", "", s.SystemUninstall)
	s.Route("PUT", "/system", s.SystemUpdate)
	s.Route("", "", s.Workers)
}

