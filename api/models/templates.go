// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x7c\xff\x73\xdb\x36\xb2\xf8\xef\xf9\x2b\x30\x9c\x7e\x46\xce\x55\x96\x1d\xf7\x3e\xf7\xee\xd8\xe7\x9b\x71\x65\xa5\x71\x6b\xc7\x3a\xc9\x49\xe7\x35\xf1\x74\x60\x12\x92\x50\x53\x00\x03\x80\xfe\x52\x8d\xfe\xf7\x37\xf8\x42\x12\x00\x41\x91\xb6\x93\xe7\x9b\x6b\x2b\x72\xb1\x58\xec\x2e\xf6\x1b\x96\xd8\x6c\x40\x8a\x16\x98\x20\x10\xc1\x3c\x8f\xc0\x76\xfb\x0a\x80\xcd\x06\x7c\x07\xf3\x1c\xc4\xc7\x60\x74\x92\xe7\xf5\xc3\x35\x24\x78\x81\xb8\x50\x6f\x2e\xca\x1f\xfa\xf5\x2b\x00\x00\x88\x4e\x7e\x9b\x5f\xa1\x75\x9e\x41\x81\xde\x52\xb6\x86\xe2\x23\x62\x1c\x53\x12\x81\x18\x44\x47\x87\x6f\x0e\xf7\x0f\xff\xb5\x7f\xf8\xaf\x68\xa8\xc1\xc7\x94\xa4\x58\x60\x4a\x78\x14\x1b\x14\x6a\x26\x61\x70\x80\xe8\x06\x66\x90\x24\x88\xed\x27\x35\xa8\x3f\x77\x63\x50\xce\x68\x82\x38\x7f\xd2\x18\x86\x96\x98\x0b\xf6\xd8\x35\x28\x3a\x23\x02\x31\x02\x33\x49\x31\x88\xde\x92\x38\x9e\x7c\x29\x60\x26\x57\xf0\x49\x3e\x99\xa1\x45\x14\x5b\x60\x60\x3b\x04\xd1\xff\x20\x1e\x81\x6b\xb0\x1d\x96\x58\xa6\x0c\xdf\x41\x81\x3a\x90\x94\x50\x61\x1c\x3f\x65\x90\xdc\xce\x51\x52\x30\x2c\x1e\x7f\x66\xb4\xc8\x25\x9b\x37\x36\x3a\x10\x83\x4f\x1b\x85\x4d\x0a\xc0\x85\x95\x38\xa3\x6b\xbd\x2e\x83\x34\x9a\x42\x06\xd7\x48\x20\xa6\x86\xee\x96\x48\x2e\x61\x9f\x20\x8d\x20\x7c\xb9\x96\x71\x56\x70\x81\x98\xa5\x06\x00\x44\x57\x8f\x39\xd2\x84\x0b\x86\xc9\x32\x1a\xd6\xaf\x4e\xd1\x02\x16\x99\x50\x6f\xdd\xe7\x3c\x61\x38\x17\xa5\xce\x45\xe6\x55\xcd\xb5\x53\x94\x67\xf4\x71\x8d\x88\xb8\x80\x0f\x78\x5d\xac\x03\x73\xc6\x20\x7a\x5f\xac\x6f\x10\x0b\x4d\xa9\x34\xf9\xb0\x6d\xd2\x18\x44\x06\x2f\xc8\x11\x4b\x10\x11\x70\x89\x00\x5d\x00\xc3\x06\xc4\x81\xa0\xe0\x16\xa1\x1c\xb0\x82\x10\x4c\x96\xe0\x7e\x85\x33\x04\x52\x45\x97\x5c\xe6\x2e\x92\x31\x79\x26\xc9\x6f\x76\x93\xac\xf1\x7e\x3d\x92\x27\xe4\x0e\x33\x4a\x24\xcd\x61\x62\xdb\x45\xba\x43\xa2\x41\x81\xda\x1b\xb2\xdf\x3c\x0e\xc2\x4b\x92\x3d\x02\x98\x65\xf4\x1e\xc0\x44\x2e\x57\x2e\x56\xac\x30\x07\xd2\x06\x2e\x18\x5d\x03\x4c\x38\x4e\x11\x10\x2b\x04\x3e\x4e\xc7\x2d\x34\xbf\xa7\xf6\x8b\x13\x89\x10\xa5\x1f\x61\x56\x20\xbd\xab\xd5\xfe\x1d\x2a\x38\x70\xdd\x58\xc4\xaf\xe8\xf1\x5b\xf3\xc9\x32\x39\xcf\x60\xd3\x07\x8e\xc0\xbc\xb8\x21\x48\x70\x83\x48\xf2\x89\xe7\x28\xc1\x8b\x47\xc9\x96\x7d\xc5\xa3\x8c\xc2\x14\x94\x26\x02\x20\x92\xe6\x14\x13\xc1\xbf\x09\xcf\x66\x28\x43\x90\x87\x16\xf4\xb5\x6d\xc6\x0c\xe5\x94\x63\x41\x59\x48\x48\x2f\x9b\x6c\x4e\x0b\x96\x20\x90\xd0\x14\x01\x56\x4f\xd3\x20\xc1\xb5\xdd\x5f\x9b\x8a\xab\x15\x02\xe7\x8e\xe8\xb8\x99\x0f\x2c\xe5\x84\x60\x41\x59\xb5\x29\x02\xc4\x69\xc5\x68\x21\xeb\x1c\x73\xf1\xdf\x27\xbf\xcd\xe3\x78\x32\x3e\x8a\x63\x0d\x1c\xc7\x67\xe9\xbf\x9f\x43\xea\xc7\xe9\x18\x70\x3d\x5f\x3f\xaa\xda\xf5\xfe\xdb\x10\x97\x9b\xed\xd1\x8f\xc8\x32\x40\x72\xa8\xf3\xf6\xde\xde\x6c\xf2\x9f\x0f\x67\xb3\xc9\xe9\x6b\x70\x0e\xd7\x37\x29\x04\xe3\x82\x0b\xba\xbe\xa2\x39\x4e\xc0\x3b\x48\xd2\x0c\x31\x60\xb6\x03\x28\x31\x5a\x64\x5e\x60\x72\x8e\xc8\x52\xac\x14\x91\x6f\xec\x57\x9e\x01\x68\xd2\x37\x1d\xb7\x70\xae\x66\xda\xc7\xe9\x58\x72\xec\xb9\x0c\xeb\x60\xd0\x74\x3c\x3e\x3b\x9d\x7d\x75\x95\x97\x33\x4b\xc4\xe1\xe9\x9d\xa8\xe8\x02\xe6\x39\x26\x4b\x5b\xbf\xa3\x29\x65\x62\xca\xa8\xa0\x09\xf5\x3c\xcf\x4a\x88\x5c\xc7\x75\x52\xb7\x10\x41\xcc\x82\x8b\xde\x5d\x5d\x4d\xa5\x49\x3b\x23\x5c\xc8\x9d\x16\x7a\xa7\xf6\x3a\x6a\x83\x98\x47\x35\x77\xcc\x74\x7c\xf7\x7c\xf3\x17\x4f\xe8\xcc\x28\x92\x1d\xeb\xbb\x1a\xb7\x2e\xcf\xbc\x6a\x9f\x6c\x3e\x3f\xf7\xa7\xca\x76\x2c\x4d\x82\xbf\x6c\x2a\xb0\x0d\xca\x7b\x86\xb8\xb2\xca\x8e\xc0\xad\x2d\x37\xa3\x59\x8b\x1b\x55\x7b\xe2\xec\xe4\x22\x8e\x15\x8c\xb5\x92\x29\xa3\x39\x62\x02\x23\xd7\x4a\x4a\xb7\xc7\x79\xb1\x46\x12\x7e\x4a\x33\x9c\x3c\x9e\xd2\xa4\x68\xc4\x4d\x9e\xad\x90\xb9\xd4\xd1\xfe\x9b\xc3\xfd\x37\xff\x65\x4d\xa2\x80\xe6\x02\x0a\x64\xc6\x7f\x72\x5e\x01\x0f\x9f\x02\x9f\x2c\x16\x28\x51\xce\x58\xb9\x5f\x0f\x9b\x21\x1d\x93\x04\xe7\x65\xca\x33\x47\xec\x0e\x27\x48\x3b\xe8\x4c\xd9\xa3\x11\x5c\xc3\xbf\x28\x81\xf7\x7c\x94\xd0\xb5\x93\xa5\xd8\x0b\x4d\x8c\x41\xfb\x04\x22\x2e\x78\x5c\x2f\xbc\xf6\xee\xe5\xdf\xd6\xf9\x6d\xbf\x75\x30\x47\x53\x28\x56\x92\xf8\x83\xc8\x7d\x2c\x39\xa9\x79\xed\xf2\xc0\xe7\x80\x86\x7c\x7c\x0f\xd7\x5a\x7e\xe9\x1a\x13\x99\x07\x42\x41\x59\x83\x17\x51\x87\x80\x40\x5f\x21\x81\x86\xa0\x24\x63\x1b\xa2\xb0\x58\x16\xfd\x4d\xfe\x2c\x15\x53\x3f\x00\xdb\x0e\xb6\xd9\xbf\x6a\xc8\x6d\xc3\xc4\x5a\xaa\xbd\x43\xad\xb5\xeb\x89\xe3\xb7\x05\xd1\x54\xf5\xd2\xee\x31\x4d\x51\x53\x93\xe7\x3f\xfc\x54\x24\xb7\x48\xd4\xf9\xef\x2f\x14\x1b\xd5\xd8\x8f\x86\xf2\x5f\x09\x25\x77\xf4\x21\x1a\x5a\xe9\xb0\x22\x63\x86\x96\xca\x84\x6f\xc1\x75\x53\xcf\xa2\xf9\x0f\x26\x92\xf6\xb1\x6a\xa4\x4c\xfb\xc8\x03\x07\x6d\x55\xa3\x90\x19\xf1\x81\xd6\xe8\x83\x85\x2a\x5f\x60\x4a\x46\x7f\xe1\x3c\xd2\x73\xb5\x6a\xa1\x71\xc1\x12\x19\x26\x29\x7a\x18\xa1\x07\x93\x93\x38\x60\x17\x68\x4d\xd9\xe3\x1c\xff\xa5\x98\xfa\xe6\xe8\x9f\xee\xeb\xd2\xac\x68\xd2\x7f\x46\xe2\x44\x68\xdd\x68\xd8\x1e\xa9\x19\x8c\x34\xf6\x59\x34\x2b\x88\xc0\x5a\x93\x09\x4d\xd1\x9f\xdc\x9d\xe0\x0a\xaf\x11\x2d\x94\x86\xfd\x70\x78\x18\xb5\x6b\x44\x38\xe1\x67\x95\x59\x04\xa3\x96\x5c\x3f\x61\x94\xfc\x49\x6f\xfa\x80\x96\x65\x01\x1b\xb4\x67\x25\x81\x6b\x0b\xb4\x03\x79\x55\xcd\x69\xc3\x1e\x1a\x54\x86\xbc\x51\x0b\x52\x2e\x74\x2d\xc6\x75\x16\x97\x85\xc8\x0b\xd1\x5d\xc0\xa2\x06\x0e\x8c\x76\x2f\xae\x86\xeb\x5b\xb1\x0a\x8f\xa8\x13\x07\x21\xbc\xe0\x45\x5a\x29\x99\x64\x69\x65\x33\xbb\xa0\x82\xf3\x9d\xe2\x2b\xf9\xff\xcd\x46\x26\x73\x0a\xaf\x55\x33\x0c\x15\xda\xca\x6a\x21\x83\x64\x89\xc0\x77\xb7\xaa\x58\x38\x21\x82\x29\x23\xcb\xcb\xc5\x44\x13\x02\x6f\x32\x94\x6e\x36\xa0\xc8\x73\xc4\x24\xe4\x76\x5b\xab\xff\x7b\xaa\x74\x3f\x58\x1d\x93\x4f\xe6\x28\xd3\xc6\xf2\x13\x38\xb4\x37\xb3\x8b\xef\x6d\xb9\x8b\xb5\xbd\x90\x1b\x7c\xff\x8d\xda\x37\x66\xeb\xd4\xeb\xda\xbd\xc2\xb2\x78\xe5\xad\x0e\xb5\xad\xae\x26\x03\x39\x64\x58\x01\x45\x69\x5c\xc7\x74\xbd\x86\xa7\x28\xc3\x6b\x2c\x50\x2a\x03\x9d\xc8\xaa\xfc\xd4\x05\x9c\xe1\xe1\xf0\xe8\xff\xff\xc3\x7e\xe7\x24\x09\xba\xfa\xd3\x28\xdb\xb0\x82\x0c\xc1\x78\xfa\x01\x14\x04\x0b\xfd\x04\xc9\xfd\x83\x86\x00\x92\x14\x5c\xfc\x24\x47\xcc\x4e\x2e\xac\x37\x51\xad\xdf\x7d\xd9\x53\xa9\xa0\x5a\x7f\x74\x4e\x97\x6e\x9e\x1a\xd0\xb7\x0a\x46\x6b\xd8\xb0\x63\x06\x6b\x23\xb7\xcd\xe1\x7a\x2b\xba\xe4\xea\x9f\x1a\xa8\xcf\x14\xb5\x59\xe9\x55\xf1\x6e\xa9\x92\xe3\x45\x3d\x6c\xf4\x0e\xf2\x69\x25\x0d\xa3\x1b\x9e\xf6\xd4\xc0\x26\xb0\xe2\x56\xb1\xd9\x52\xa3\x91\x54\x30\xb0\xdd\x4e\xc6\xf3\x2b\xc8\x6f\x4f\x25\xf1\x58\x04\x52\xc7\x1c\x91\x94\x5f\x2a\xb7\xe7\x78\xf6\x61\x15\xba\x29\x1f\x72\x1d\x48\x02\x35\xb8\xcc\xea\xfc\x39\x2c\x60\x2b\xc0\x79\x33\x3a\xec\x17\x05\x98\x89\xaf\xe8\x2d\x22\x9d\x2e\xae\xd5\xbd\x99\x28\xad\x25\x62\xf0\xe2\x84\xb9\x80\xc9\xad\x1a\xa1\xb6\xbd\x14\x57\xc5\xc3\xa8\x19\x3b\xd8\xd5\xa4\x0a\x51\xf9\xcc\x03\xf5\x8a\x9b\x15\xb8\xfd\xdc\x1b\x52\x45\x25\x06\x54\xfe\xf6\x40\x24\xc7\xb5\x89\xdb\x1d\xb1\x96\xb1\xaa\xbb\xa2\x46\xac\x7a\xb6\x86\x4b\x0b\x4e\xfd\x0c\x01\x6e\x36\x52\x63\xd1\x48\x99\x21\x92\x8e\x4e\x18\x83\x8f\xdb\x6d\x33\x5e\x35\x00\x81\xb4\x02\x38\x5a\xad\x22\xa0\x21\xf8\x0e\x65\x2a\xba\x55\x3a\xde\x8d\xde\x26\x46\x61\xd8\x6e\x87\x9b\x0d\xca\x38\xda\x6e\x37\x1b\x44\xd2\xd6\x31\xd1\x66\x53\xce\xb5\xdd\x46\x41\xd2\xc2\xc3\xaf\x9b\xac\x90\xf3\xc9\x1d\x4c\x90\x4d\xb3\x2e\x32\x80\x28\xda\xcd\x96\xcd\x06\xdc\x49\x33\x17\x18\xba\x6d\xe4\x43\x61\xa2\xa2\x71\x5e\xd4\x1a\x6e\xf9\xb8\x37\x61\x1f\x57\xc9\xbf\xe1\xe8\x7c\xc4\x3a\xf6\x0c\xe2\x3e\x7a\x29\xee\xb6\x62\x7f\x05\x70\x32\x9d\x96\x9a\x28\x6d\x65\xab\xd2\xca\x6d\x78\x32\xfe\xd5\xc0\x22\x72\x67\x7e\xb7\xc0\x9e\xfc\x36\xff\x63\x36\xf9\xf9\xec\xf2\xbd\x3d\xc2\x7a\x1a\x1e\x67\x05\x27\xe8\x71\x08\xbe\xd3\x42\xd3\x6a\x6a\x2d\x05\x04\xa4\xad\xf4\x53\x2a\x87\x1e\x13\x45\x21\x20\x63\xb8\x25\x76\x13\xd2\x54\x8a\xa1\xff\xd5\xd4\x86\x76\x25\xad\x5d\x56\xef\x65\x8c\xce\x31\xb9\xfd\x08\x19\x0f\x13\xd7\xa0\x6d\x27\x55\x6d\xb3\x47\xe7\x97\x3f\xff\xf1\xf3\xec\xf2\xc3\xb4\xcd\xab\x87\x2a\x09\xb3\xcb\xf1\x64\x3e\x6f\x5a\x2f\x3f\x8d\x6d\xa8\xd8\x47\x9a\x15\xeb\x40\x3e\xef\x32\x02\x8d\x2e\x68\x41\x84\x0c\x2c\xcd\x80\x30\x0b\xb4\x9b\x46\x5f\xc0\xe8\x1d\xe5\x02\x44\x07\x77\x90\x1d\xb0\x82\x1c\xa4\x34\xb9\x45\x6c\xc4\x69\x72\xdb\x26\x5a\x49\xba\x1a\xb6\xdd\xc6\x9b\xcd\x68\x4c\x89\x80\x98\x20\x16\x54\x35\xcd\x41\x69\x54\x5a\x90\xb5\xe4\xa9\x07\x77\x9a\xfc\x83\x66\xfe\xeb\xf9\xb5\x03\x69\xfd\x14\x1f\xa5\x9d\x6c\x21\x2c\x94\x2a\xd7\xe4\xb5\xaa\x57\xdb\x1b\x50\x9d\x28\x2b\x8a\xde\x53\x1d\xdd\x01\x1f\xb4\x61\x60\xa3\xc9\x83\x60\x50\xd2\xd8\x25\xc9\xc0\xce\xac\x86\x5e\xc0\xbc\x45\xac\x61\x79\xc9\x41\xb6\xd3\x34\xba\x1f\x62\x87\xf4\x9b\xf9\x49\x9a\x32\xc4\x79\x09\x5e\xee\x8e\x90\x6b\x79\xd2\x96\x79\x01\xdf\xca\xd0\x30\xcc\xb5\xe7\xe3\x9d\x52\x26\xac\xea\xf6\x0e\x89\x8c\x24\x68\xdb\x76\xf2\x95\x38\x96\x5a\xdc\xa6\xef\xed\x8e\x46\x4e\xb1\xd9\x80\xd1\x4f\xe5\x21\xd4\x76\x2b\x65\x17\xb4\x25\xc0\x58\xb2\x5a\xcf\x5b\x44\xd4\xa2\xfa\xdf\x44\x4c\x53\x86\xef\x70\x86\x96\x28\xad\x4d\x5c\xfd\xac\x41\x60\xdf\xfa\x9c\x91\x7e\x80\x63\x6e\xec\x5f\xb5\xd3\xe8\x60\xd4\xcb\xaf\x43\xb1\xa2\x9b\x2e\xbc\x72\xd8\xa3\xc3\xc2\x77\x90\x5b\xe2\x78\xe5\xb3\xbf\xce\x5e\x4a\xa8\xb2\x46\xa9\x26\x6b\x09\x50\x43\xcc\x77\x33\x80\x40\xf2\xa0\xb2\x96\x57\x21\xee\xbb\x99\xdf\x64\x2c\xad\xa4\x29\x52\xf7\xab\x51\xd6\xcd\x27\x95\x7a\x96\xcf\xbc\x20\xbd\x6e\xc5\x18\x53\xb2\xc0\xcb\x82\xf9\x79\xbd\x01\x34\x1d\x15\xef\x10\xcc\xc4\xea\x71\xaa\xfb\x2a\x6a\xad\x68\xb4\x74\x34\x2d\x52\xd9\x47\xb2\x6b\xac\xe9\x34\x71\x15\xcb\xa7\x98\x63\x86\xd2\xb1\x74\x8c\xc1\xf0\xaf\xa5\x7c\xd2\x2b\xfc\x8b\xce\x29\x4c\x4b\xc9\x07\xaa\xed\xa5\x16\xb5\x18\x8f\x40\xa8\x58\x6d\xe7\x7e\x69\x8e\x3d\x42\x4e\x62\x46\xec\xa9\x14\xa2\x9e\xf9\xf0\xb5\x6b\x27\x02\x68\xec\x95\xd4\x89\x66\xcd\x96\xfe\x9a\xde\x30\x14\x5b\x9f\x29\x0d\xe5\xbf\xee\x59\x08\xb6\xb7\x42\x5b\x96\xdc\xac\x0e\xec\x92\x6e\x33\xd5\xb7\xc8\xf5\x4c\x91\x4d\x79\x57\x65\x28\xd8\xb8\xe7\x56\xcf\x2a\x46\xda\xa5\x91\xef\x4c\x35\x46\x91\x17\x1f\x1b\x7a\x47\x53\xeb\xa9\x05\x5c\xce\x32\x65\x68\x81\x1f\x24\x7c\xce\x30\x11\x0b\x10\x95\xb8\xff\x1f\x8f\x5c\x9c\x7e\x15\x66\x64\xfb\x40\xab\xf4\xa2\xba\xeb\x02\x73\x04\xdd\xd4\x58\x1a\x96\x05\x4e\x1a\x7d\x06\xad\xad\x7d\xfe\x52\x3b\xd1\xaa\x68\xaf\xd1\x06\xf3\x2c\x91\x84\x8b\x99\x61\x71\x54\x0d\x21\x32\xb1\xe8\xcd\xbc\x5a\xd1\xca\xf1\x9e\x04\x9f\xc2\xc3\x6f\xd2\xd2\xf3\x1c\x0a\x55\x30\xf2\x1c\xd2\xa4\x1d\xd4\x06\xa9\x9a\x6c\x06\x49\x4a\xd7\x1c\xec\x61\x41\x61\x3d\xcb\xeb\x86\x7f\xde\xb9\x90\x67\x89\xdf\x2d\xd6\xb6\xd5\x31\x8d\x80\x2f\x7c\xab\xd7\xad\x1d\xd5\xde\xab\x78\xec\xb1\xd6\xe3\xe3\xee\xb8\xc5\x1b\x5b\xd7\xbf\xad\x92\xb2\x6f\x26\xa5\xdc\x1c\xeb\x2c\xc7\x81\xe8\xf4\xfd\x5c\x27\x4e\xd7\xee\x81\xff\x37\x51\xe7\xf2\x3f\x9f\x12\xa2\xb5\x60\x77\xaa\xaf\x66\xd5\x91\x37\xdd\xd7\xd1\x70\xdf\x01\x7e\x03\xc2\x6d\xb5\x19\xf9\x4e\x17\x08\x56\x20\xa5\x8f\x23\xdb\x58\xbf\x4c\xdf\xfd\xa3\x83\x6f\xa0\xf1\x01\x85\x6b\x6b\xd8\x7b\x21\x27\xfd\x58\xf7\x48\xc6\x72\xf6\x4c\x56\xbf\x67\x30\xde\x8d\x14\x98\x7b\x78\xd4\x48\xe0\x40\x8f\x8a\xfa\x7e\x49\x6a\xa3\xbc\xe0\x36\x2b\x9e\x91\xa5\x49\xa7\xbd\x04\x63\xe7\x9e\x33\x50\x7e\xc0\xa8\x02\xca\xd1\xc4\x1c\xaf\x37\x23\xca\x68\x8c\x53\x76\x26\xf9\x1d\x1d\x8e\xd4\xff\x0e\x0e\x03\x25\xef\x96\x9a\x4c\x3d\xda\xea\x0e\x30\xfd\x67\xcd\x24\xb2\x2d\x85\x8c\xce\x72\xbb\xd5\x48\x24\x79\xb3\x3a\xff\x96\xd1\xb5\x15\xaf\x3a\x3b\xb9\x01\x7c\x45\xdb\x40\xdd\x74\xb2\x2b\xc5\xf2\xe4\x19\x48\x6c\xed\xa4\xea\x63\x9e\x9c\xa5\x3e\x2b\x1a\xa7\xc3\xc3\xd6\x0d\x10\x3a\xeb\xd4\x4a\x9b\x41\x2e\x70\x52\xef\x7d\x4c\x96\x71\x6c\x9b\x82\x5a\x89\x9f\xe7\x1a\x9c\xac\xb6\xc7\xee\xac\xd7\xdd\xb6\x6b\xea\x8a\xe1\x3c\x59\xa1\x35\x02\x11\xae\x3f\xf0\x70\xd2\x58\xfd\x5e\xb7\x82\x84\x9a\x40\xac\x5e\x59\xbd\xeb\xce\x16\x9a\xca\xb2\x4f\xd5\x15\xbf\x75\x40\xef\xb6\xb3\xfa\xfa\xd8\x00\x74\xf3\x10\x67\x83\x06\x37\x40\x4d\xb9\x47\x58\xd5\x60\x3f\xb4\xd7\xd4\xae\x4d\x8d\x8c\xa4\x75\xc9\x67\x21\x6c\xcd\x75\x06\xd7\xd6\x5c\x91\xab\xee\x52\x75\x08\x52\x9d\x4a\xa7\x0c\x62\x82\xc9\x52\xb7\x6f\x69\x32\x8c\x2e\x45\xb1\x72\x39\x43\xbb\x39\xe6\x1f\x87\x8e\x31\xab\xf1\xd8\xad\x14\x20\x3a\x4b\x33\x64\x75\xd4\x48\x25\xb3\x1e\xe9\x44\xd0\x46\xc3\x28\xe7\xbf\x53\x82\xca\x29\xeb\x57\xba\x48\x30\x5e\xa1\xe4\xd6\x2f\x4d\x98\xfa\xc1\xd5\x8a\x21\xbe\xa2\x99\xaa\x2b\x1d\xb9\x0a\xa5\x98\x78\xa7\xba\xf3\x14\x11\x7a\x48\xf9\xd4\x37\x28\xd1\x15\x64\xcb\x70\xe3\x55\xa3\x68\x67\xa1\x2b\x0d\x1a\xd8\x6e\xe3\x56\x0d\x6d\xdb\x98\x65\xa0\x61\x50\x51\x26\xda\x2a\x7b\xf6\x8c\x50\xac\x3c\x13\xd7\x3c\xb4\xf5\xf8\xaf\x47\x5a\x12\x70\x80\x3f\x90\x55\x90\x9b\x75\xba\x6b\xc9\xa4\x6c\x38\xfd\x9a\x7e\xcb\x71\xee\x9a\x9d\xa3\xe0\xd9\x8a\xed\x3e\xdc\x78\xc9\x6b\x83\x55\xe3\xfb\xfb\x37\x17\xb5\xb7\x19\x55\xc2\xdb\x08\xdd\x9f\x99\xc0\x0d\xeb\x1e\xdc\xf9\x79\xb0\x21\xb4\xd5\x7b\xda\x8e\xa0\xb7\x8b\x0c\xf5\xf8\x3a\x9c\xf3\x01\xc2\x9c\xab\xf1\xe8\x89\x43\xa5\x93\x27\xe6\x8b\x81\xc3\xac\xf9\xfc\xdc\xe2\x55\xe9\x64\xbf\x9d\x2c\x1a\x5a\xd0\x6a\xba\x77\x81\xbe\x94\x8c\x66\xfd\xdc\x6f\x57\xfd\xba\xf1\x4b\x4b\x0f\x70\xcf\x0d\xdc\xdc\xb0\x0f\x8f\xbb\x76\x6d\xa0\x94\xe9\xb6\x16\x6b\x87\xe3\xe0\x09\x36\x5b\xab\x41\x65\xbc\xe4\x80\x5b\xaf\x42\x87\xe1\x42\x30\x7c\x53\x08\xbd\xe0\x96\xa3\xb0\x92\x98\x2e\x32\x80\x93\x6a\x4a\x77\xd5\x3c\x5a\xd9\x36\xce\x3f\xbc\xfd\xc3\x4d\x03\xdf\xcb\x77\x50\xa3\xcd\x79\xd8\x59\x51\x7d\xb9\xfe\x9c\xff\x34\xa6\xf4\x16\xa3\xb9\xc0\xc9\x2d\x26\x88\xf3\x2a\x7e\x90\xab\x72\xa5\x0b\x17\xaa\x7e\xfa\x18\x39\x6c\x09\x16\x95\x37\xa0\x47\xda\xdb\x96\x4c\x99\x4f\x7a\x2b\x6b\x01\x6a\xe5\x0e\x7d\x0f\x5c\x35\xf4\x56\x47\x5a\x9d\xb1\xf0\xb6\x39\xc6\x03\xa8\xb9\x55\x09\xc6\x4a\x06\xba\xd2\xf2\x40\x8b\xb0\xd5\x3a\xa7\xda\x43\xc6\x8c\x92\x5f\xe8\x0d\x6f\xb6\xc0\xca\x28\x8a\x54\x0d\xe8\x6d\x09\x46\x6b\xa7\x7a\x6b\x4e\x5c\x42\x5a\x87\x0e\x4e\xf7\xc9\xbe\x64\x9b\xd5\xb9\xb2\x2f\x57\x61\x57\x37\x1a\x1d\xe0\x2b\xf3\xc0\x82\x79\x61\x7f\xf7\xce\xee\x6e\x2b\x12\x7a\x73\xe8\x04\xaf\x8d\xf6\xfb\xe8\x77\x9c\xbf\xc5\x8a\x14\x3f\x06\x8c\x3e\x93\x66\x10\x38\x28\x38\x02\x5c\x30\x9c\x88\xc1\x8f\xfe\x19\x95\xff\xfb\x0e\x32\xa0\xbe\x48\x02\xc7\x80\xa1\x2f\x05\x66\x68\x6f\xa0\x1e\x0c\x5e\x37\x06\x4b\x60\x78\xef\x80\xc2\x7b\xbe\xcf\xd3\xdb\x16\xe0\x24\xa3\x45\x5a\x75\xe6\x83\x63\x40\xd0\xbd\xc4\x30\x1a\xcb\x17\xd5\x41\xd5\x5e\x78\xf4\x97\x02\xb1\x47\xae\x1b\xb2\xac\x29\xad\xc7\x81\x69\x43\x88\x74\xfd\x1c\x1c\x83\x8d\xff\x56\xfe\xa3\x2a\x93\xc4\x60\xe0\xeb\xd1\xc0\x1f\xb0\xed\x9c\xd0\x1c\x12\x8c\x10\xb9\x1b\xbd\xbf\x3c\x9d\xfc\x71\x75\x3e\xff\x63\x36\xf9\x65\x32\xbe\xfa\xe3\xc3\xfb\x93\x0f\x57\xef\x2e\x67\x67\xbf\x4f\x4e\xc1\x31\x18\x1c\x76\x0b\x08\x3d\xe4\xd2\x34\x97\xfa\x09\x8e\xc1\xc2\xe8\xfe\x1e\xba\x43\x44\x0c\x41\x42\x89\x40\x0f\xe2\x75\x78\x75\x09\x25\x9c\x66\x68\x94\xd1\xe5\xde\x60\x36\xf9\xcf\x87\xc9\xfc\x0a\xcc\x26\xe3\xc9\xd9\xc7\xc9\x69\x0c\x06\xe0\x7b\xf0\xcb\xfc\xf2\xfd\x48\x33\x14\x2f\x1e\x35\xda\xd7\xdd\x9c\x55\xd8\x1d\x01\x8f\x52\x55\xa5\xba\x41\x8a\xa5\x7c\x4f\xf3\x7d\x68\x51\xcc\xd8\x10\xa4\x50\xc0\x16\x62\xe5\x1f\x5e\x00\x09\xb7\x03\xc2\x5f\x96\x84\x6e\x50\x5b\xfe\xc7\x56\x87\xd6\x3b\x91\x49\x1d\x49\x21\x5f\xdd\x50\xc8\xd2\x56\x4c\x25\x64\x0e\x39\xbf\xa7\x3d\x00\x4d\xdd\x1e\x1c\xab\x25\x8f\x34\x53\x3e\x1d\x5e\x8f\xcc\x27\x08\x3d\x66\x2a\x6f\x77\x68\xe2\xa8\x6f\x7e\xe8\x25\xa8\xf2\x6f\x41\xd9\x9e\x44\x8d\x8f\x0f\x7f\x2c\x09\x1c\x65\xea\x5b\xd3\x7f\xe3\x1f\x01\xfe\xfe\xfb\x0e\xc6\x03\x23\x22\x33\xf6\x13\x2e\x97\xf3\x2b\x7a\x04\xc7\xc7\x60\x70\x5a\x32\x72\xd0\x03\x93\xfc\xab\x38\x0f\x8e\x41\x03\xab\xf2\xf8\x3b\x19\x25\xff\x1a\x47\xf1\x3b\x5f\x76\xf1\x47\xf1\xa6\xe6\xfd\xb3\xd8\x53\x0f\x97\x6b\xa9\x84\x55\x32\x69\x6a\x74\xa8\x2f\x8f\x4a\x9d\x03\xc7\xa0\x05\xf3\xff\x35\xa3\x94\x82\xab\x7a\x74\xab\x61\xb5\xff\x56\x94\x8b\xb8\x16\xf5\xb0\x0b\x5e\x1a\xbd\x18\xfc\xfd\xef\x3f\x74\x43\x42\xb1\x8a\xc1\xe0\x00\xe6\x39\x3f\x90\xe6\x4c\xd9\xaf\x11\xcc\x73\xf0\x3d\x18\x1c\x54\x1f\x57\x58\xef\xcc\x33\xf5\x9e\x15\x64\xd0\x39\xc7\x1a\x89\x15\x4d\x63\x30\x98\x5e\xce\xaf\xba\xc1\x57\x08\xa6\x88\xf1\xb8\x9f\x6c\x07\x27\x49\x82\x72\x31\x88\xc1\x00\xe6\x79\x26\x93\x2f\x4c\xc9\xc1\x9f\x9c\xf6\xa0\x4c\x21\x18\x4b\x0f\x40\xc4\xbe\x0c\xaa\x7c\x34\x0f\xfb\xf7\xf7\xf7\xfb\xd2\x44\xef\x17\x2c\x43\x24\xa1\x29\x4a\x7b\xe2\xfd\xc0\x11\xdb\x3f\x59\x22\xa2\x88\x4b\x0a\x96\x1d\x34\x1c\xa2\x3f\x68\xdb\x89\x1a\x16\x4a\x60\xfa\x7b\xc1\x58\x4a\xa5\xd4\xee\x9d\xca\xf9\x24\x33\x27\xb5\x93\xa1\x2f\xe0\x58\x07\x37\x23\x19\x3c\x20\x2e\xf6\x8c\xc6\x5a\x2e\x89\x21\xde\x63\x0f\x4a\x7c\x37\x34\x7d\x94\x4e\xbb\xe9\xb3\x7d\x68\xc7\xe7\xce\x05\x14\x05\x8f\x07\x43\xc0\x10\x1f\x71\xf5\x4b\x46\x79\xed\x2e\x2b\x88\xe6\x9d\xd1\xa9\xc1\xd0\xf7\xd7\x12\xad\xd1\xb8\x80\xd7\xf6\x91\x2a\x22\x90\x98\x48\x45\xc0\x64\xb9\x37\x28\xc4\xe2\x9f\x81\x38\x2a\x34\x8e\x92\xbd\x81\x74\x43\x03\x8b\x7f\xc9\xaa\x20\xb7\xaf\xc1\x46\xb3\xe7\xfb\x63\xa0\x1e\x80\x6d\x7f\x8c\x88\xa4\x36\xc2\x9e\x16\xd1\x66\x8e\x9c\xba\x7b\x3e\x33\x4a\xc6\x4a\xa3\x94\x12\x14\x88\x3a\x7d\xf0\x8e\x55\x04\x5e\xef\x02\x67\xe8\x8b\x5e\x30\x63\x94\x0d\xdc\xb0\x88\x76\x05\x3c\xfe\x9a\x07\x13\x39\x48\xaa\x83\x1e\xdd\x47\x9b\xd4\xd2\x17\x10\x67\x7b\x3d\xc6\x3c\x71\x71\x2a\x5e\xa1\x5c\x9c\x42\x01\xc1\xb1\x1d\xbb\x5b\xaa\xda\xb1\xc2\x41\xa2\xbf\xc2\x18\x80\xd8\x58\x6a\xf3\xe0\x2b\x0b\xe1\x9e\x61\x81\xf6\x4a\x6a\x77\xb3\x41\xc2\x23\x92\xee\x50\x96\xa0\x4f\x0d\x50\xb5\xfd\xb1\x51\x1b\xaf\x7e\x07\x0e\xe9\xbc\xa3\x73\x53\x03\xeb\x48\xb7\x65\xda\x3b\x5f\x51\x26\x4c\xde\x3b\x2b\x9c\x9b\x0f\xbc\x73\x3d\xc9\x62\x1e\xc7\x0a\xa8\x33\xe5\xb6\x52\xed\xd1\x39\x25\xcb\x32\xb3\xe6\xc9\x0a\xa5\x85\x7b\x79\xc2\xdc\x3c\x9b\x3c\xe4\x0c\xf1\xf2\xeb\x33\x45\x9c\x79\xe3\x35\x1b\xe8\x43\x8e\x46\x25\x4c\x65\xd5\xe1\x0c\xdc\xae\x2b\xb4\x75\xd6\x9d\xa5\x01\x82\xcd\x79\x8a\x77\x24\x93\x9b\x43\x89\xcf\x11\xcc\xf3\xcf\x51\x0c\x3e\x47\xa6\x84\x60\x86\x7d\x8e\x86\xe0\x73\x99\xdc\xd5\x00\xa6\x22\x56\x01\x18\x85\xad\x01\xcc\x87\x45\x0a\xc0\x3a\x1c\x09\x55\x62\x02\xf2\xd3\x95\x91\x29\x62\x6b\xcc\x79\xa8\x84\x02\xfc\x1a\x8a\x05\x1b\x12\x29\x70\x64\x6a\xae\x2b\x90\x48\xf4\x67\xf4\xf1\x19\xb9\xa3\xb7\x28\x74\x65\x80\x53\x72\x01\xcf\x14\x8a\x75\x37\x85\x9c\x54\x6d\x72\xee\xdd\x46\x61\xeb\x91\xaa\x38\x29\x34\xad\x7d\x43\x0d\x75\xb7\x26\x7e\x7a\xb5\x2b\x78\xad\xa0\xfe\x80\x55\x5f\x64\xf0\x0e\xf2\xc9\xd8\xbe\xdd\x46\x11\x75\xc9\x9c\xaa\xf5\xae\x3b\x02\xdd\x4b\x11\x86\x20\x2a\xf8\x3e\x82\x5c\xa8\xef\x9c\xed\x13\xd2\x27\xe2\xb8\x47\x5c\xec\x1f\xbd\x00\x07\x2a\x34\x0e\x45\x87\x41\x71\xbd\xeb\x3b\xdc\xd0\x47\xfb\x35\xab\xe4\x9b\xc0\x3d\x5c\x81\x6f\x57\x67\x16\x98\xd9\x07\x4e\x1b\x81\xc3\x78\x03\x10\xfc\xa8\x35\x6c\xbb\x5e\xfe\x31\xab\x75\x9f\x58\xa3\xd3\xb8\xd1\x69\xf3\xaa\xd4\xb8\x6e\xbe\x79\x5f\x61\x97\x5c\xd3\x07\x4c\x7d\x19\xd1\xf8\x50\x5b\x51\x74\x92\x24\xb4\x20\xe2\x2c\xad\x3e\xd7\xee\x10\xcb\x53\x26\xf2\xd9\x17\xc0\x3b\x6c\x30\xcd\xec\xc7\x56\xae\x78\xb7\x39\x38\xad\xd3\xe1\x4f\xc6\xfd\x7b\x7b\x5a\xc4\xdf\xeb\xbe\x9e\xd6\x6b\x78\xbc\xcf\x04\xea\x3b\x71\x9c\xe7\xa0\x71\x43\x8e\xf3\xda\x3b\x79\xe9\xb8\xc4\xc7\xbd\xc0\xc7\x9f\xc7\xba\xce\xc7\x7b\x05\x40\x84\x12\xdf\x9a\x7a\x30\xee\xc9\x8c\x7d\xd8\xd2\xd2\x54\x14\xbc\x1d\xa7\xb4\xab\xb5\x87\x69\x5c\xeb\x13\x3e\xce\x73\x9c\xbb\x7b\x22\xe3\xb4\xca\x37\xc1\xda\x6f\x59\xfa\xfa\x17\x28\xb5\x0a\x59\xf3\x58\xb7\x43\x65\x14\xa6\x37\x55\x3b\xd4\xa9\xa9\x7c\xfe\x2d\x78\x38\xd7\x36\x46\x5b\x02\xc4\xca\x53\x38\xfe\x96\xd1\x75\xb0\xb1\xaa\x1b\xdb\xcc\xc7\xf5\x1b\x16\xab\x1e\xb8\x92\xa3\x4e\xe2\x93\xa3\xf8\xa4\x10\x2b\xca\xf0\x5f\x28\xd8\x2a\xd8\x18\x15\x3a\x6a\xb4\x2e\x43\x0a\xf2\xf5\x6f\x01\x34\xde\x13\xf7\x10\xf7\x3a\xa8\xbd\xb6\xeb\xea\x30\xc4\xf6\x05\x31\xcd\x7b\x57\x5c\x63\x33\xff\x21\x8e\xcd\x1d\x48\xc6\xda\x9c\xa2\x0c\x49\x3d\xa9\x4e\x19\xa3\x19\x12\x10\x93\x0e\x6b\xa4\xee\x2c\x1d\x53\x22\x98\xee\x7a\xf0\xdb\xc8\xa2\x2b\xe8\x7d\xdb\xb7\x29\xaf\x23\x88\xf8\x23\x17\x68\x2d\x8d\x6b\x75\xd6\x6b\xae\x5d\x02\xae\xd7\x37\xf0\x30\xcf\x6d\xe0\x1d\x5e\x2b\xc4\x36\x8b\x6b\xff\x1b\x00\x00\xff\xff\xaa\xe4\x96\x3a\x78\x5a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

