// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xbc\xb9\x93\x3d\x23\xcb\x8f\xb9\xd9\xbb\xe5\x5c\xae\xca\x91\x9d\x89\x77\xed\x44\x27\x39\x49\xdd\x26\xa9\x2d\x98\x84\x24\xae\x29\x80\x03\x80\x8e\x3d\x2a\xfd\xf7\x2d\x3c\x48\xe2\x49\xc9\x76\x52\x9b\xad\x9d\x44\x64\xa3\xd1\xe8\x6e\xf4\x0b\x0d\xae\xd7\x20\x47\xf3\x02\x23\x90\xc0\xaa\x4a\xc0\x66\xf3\x02\x80\xf5\x1a\xfc\x00\xab\x0a\xa4\x2f\xc1\xe8\xb4\xaa\xba\x87\x2b\x88\x8b\x39\x62\x5c\xbe\xb9\x6a\x7e\xa8\xd7\x2f\x00\x00\x20\x39\xfd\x38\xbb\x46\xab\xaa\x84\x1c\xbd\x26\x74\x05\xf9\x07\x44\x59\x41\x70\x02\x52\x90\x9c\x1c\x1d\x1f\x1d\x1c\xfd\xf9\xe0\xe8\xcf\xc9\x50\x81\x8f\x09\xce\x0b\x5e\x10\xcc\x92\x54\xa3\x90\x33\x71\x8d\x03\x24\x37\xb0\x84\x38\x43\xf4\x20\xeb\x40\xdd\xb9\xbd\x41\x15\x25\x19\x62\xec\x51\x63\x28\x5a\x14\x8c\xd3\x87\x6d\x83\x92\x0b\xcc\x11\xc5\xb0\x14\x14\x83\xe4\x35\x4e\xd3\xf3\xdf\x6b\x58\x8a\x15\x7c\x12\x4f\xa6\x68\x9e\xa4\x06\x18\xd8\x0c\x41\xf2\xff\x88\x25\xe0\x0b\xd8\x0c\x1b\x2c\x13\x5a\xdc\x41\x8e\xb6\x20\x69\xa0\xc2\x38\x5e\x95\x10\xdf\xce\x50\x56\xd3\x82\x3f\xfc\x46\x49\x5d\x09\x36\xaf\x4d\x74\x20\x05\x9f\xd6\x12\x9b\x10\x80\x0d\x2b\x70\x26\x5f\xd4\xba\x34\xd2\x64\x02\x29\x5c\x21\x8e\xa8\x1c\xda\x2f\x91\x4a\xc0\x3e\x42\x1a\x41\xf8\x66\x2d\xe3\xb2\x66\x1c\x51\x43\x0d\x00\x48\xae\x1f\x2a\xa4\x08\xe7\xb4\xc0\x8b\x64\xd8\xbd\x3a\x43\x73\x58\x97\x5c\xbe\xb5\x9f\xb3\x8c\x16\x15\x6f\x74\x2e\xd1\xaf\x3a\xae\x9d\xa1\xaa\x24\x0f\x2b\x84\xf9\x15\xbc\x2f\x56\xf5\x2a\x30\x67\x0a\x92\xb7\xf5\xea\x06\xd1\xd0\x94\x52\x93\x8f\x62\x93\xa6\x20\xd1\x78\x41\x85\x68\x86\x30\x87\x0b\x04\xc8\x1c\x68\x36\x20\x06\x38\x01\xb7\x08\x55\x80\xd6\x18\x17\x78\x01\xbe\x2e\x8b\x12\x81\x5c\xd2\x25\x96\xd9\x47\x72\x81\x9f\x48\xf2\x2f\xbd\x14\x2b\xb4\xdf\x8e\xe2\x73\x7c\x57\x50\x82\x05\xc9\x61\x5a\xe3\x12\xed\x11\x68\x50\x9e\xe6\x7e\xdc\x6d\x1e\x0b\xe1\x3b\x5c\x3e\x00\x58\x96\xe4\x2b\x80\x99\x58\xae\x58\x2c\x5f\x16\x0c\x08\x13\x38\xa7\x64\x05\x0a\xcc\x8a\x1c\x01\xbe\x44\xe0\xc3\x64\x1c\xa1\xf9\x2d\x31\x5f\x9c\x0a\x84\x28\xff\x00\xcb\x1a\xa9\x4d\x2d\xb7\xef\x50\xc2\x81\x2f\xde\x22\xfe\x8a\x1e\xbe\x37\x9f\x0c\x8b\xf3\x04\x36\xbd\x67\x08\xcc\xea\x1b\x8c\x38\xd3\x88\x04\x9f\x58\x85\xb2\x62\xfe\x20\xd8\x72\x20\x79\x54\x12\x98\x83\xc6\x42\x00\x84\xf3\x8a\x14\x98\xb3\xef\xc2\xb3\x29\x2a\x11\x64\xa1\x05\x7d\x6b\x93\x31\x45\x15\x61\x05\x27\x34\x24\xa4\xe7\x4d\x36\x23\x35\xcd\x10\xc8\x48\x8e\x00\xed\xa6\xf1\x48\xb0\x4d\xf7\xb7\xa6\xe2\x7a\x89\xc0\xa5\x25\x3a\xa6\xe7\x03\x0b\x31\x21\x98\x13\xda\x6e\x8a\x00\x71\x4a\x31\x22\x64\x5d\x16\x8c\xff\xcf\xe9\xc7\x59\x9a\x9e\x8f\x4f\xd2\x54\x01\xa7\xe9\x45\xfe\xbf\x4f\x21\xf5\xc3\x64\x0c\x98\x9a\x6f\x37\xaa\xe2\x7a\xff\x7d\x88\xab\xf4\xf6\xd8\x8d\xc8\x26\x3e\xb2\xa8\x73\xf6\xde\xde\xf4\xfc\xff\xde\x5f\x4c\xcf\xcf\xf6\xc1\x25\x5c\xdd\xe4\x10\x8c\x6b\xc6\xc9\xea\x9a\x54\x45\x06\xde\x40\x9c\x97\x88\x02\xbd\x1d\x40\x83\xd1\x20\xf3\xaa\xc0\x97\x08\x2f\xf8\x52\x12\x79\x6c\xbe\x72\x0c\x80\x4f\xdf\x64\x1c\xe1\x5c\xc7\xb4\x0f\x93\xb1\xe0\xd8\x53\x19\xb6\x85\x41\x93\xf1\xf8\xe2\x6c\xfa\xcd\x55\x5e\xcc\x2c\x10\x87\xa7\xb7\x82\xa2\x2b\x58\x55\x05\x5e\x98\xfa\x9d\x4c\x08\xe5\x13\x4a\x38\xc9\x88\xe3\x79\x96\x9c\x57\x2a\xac\x13\xba\x85\x30\xa2\x06\x5c\xf2\xe6\xfa\x7a\x22\x4c\xda\x05\x66\x5c\xec\xb4\xd0\x3b\xb9\xd7\x51\x0c\x62\x96\x74\xdc\xd1\xd3\xb1\xfe\xf9\x66\xcf\x9e\xd0\x9a\x91\x67\x3d\xeb\xbb\x1e\x47\x97\xa7\x5f\xc5\x27\x9b\xcd\x2e\xdd\xa9\xca\x9e\xa5\x09\xf0\xe7\x4d\x05\x36\x41\x79\x4f\x11\x93\x56\xd9\x12\xb8\xb1\xe5\xa6\xa4\x8c\xb8\x51\xb9\x27\x2e\x4e\xaf\xd2\x54\xc2\x18\x2b\x99\x50\x52\x21\xca\x0b\x64\x5b\x49\xe1\xf6\x18\xab\x57\x48\xc0\x4f\x48\x59\x64\x0f\x67\x24\xab\xbd\xb8\xc9\xb1\x15\x22\x95\x3a\x39\x38\x3e\x3a\x38\xfe\x2f\x63\x12\x09\x34\xe3\x90\x23\x3d\xfe\x93\xf5\x0a\x38\xf8\x24\xf8\xf9\x7c\x8e\x32\xe9\x8c\xa5\xfb\x75\xb0\x69\xd2\x0b\x9c\x15\x55\x93\xf1\xcc\x10\xbd\x2b\x32\xa4\x1c\x74\x29\xed\xd1\x08\xae\xe0\x1f\x04\xc3\xaf\x6c\x94\x91\x95\x95\xa4\x98\x0b\xcd\xb4\x41\xfb\x04\x12\xc6\x59\xda\x2d\xbc\xf3\xee\xcd\x9f\x8d\xf5\xdb\x7c\x6b\x61\x4e\x26\x90\x2f\x05\xf1\x87\x19\xc1\x77\xe4\xfe\x30\xb1\xdf\x0a\x86\x2a\x96\xdb\xac\x70\x19\xa1\x20\x1f\xde\xc2\x95\x12\x63\xbe\x2a\xb0\xc8\x06\x21\x27\xd4\x63\x49\xb2\x45\x4e\x60\x57\x59\x01\x4f\x5e\x82\xbf\x9e\x44\x0c\xce\x25\x3f\x8a\x9f\x8d\x7e\xaa\x07\x60\xb3\x85\x7b\xe6\xaf\x0e\x72\xe3\x59\x5a\x43\xc3\x7b\xb4\x5b\x79\xa0\x34\x7d\x5d\x63\x45\xd5\x4e\x4a\x3e\x26\x39\xf2\x15\x7a\xf6\xf3\xab\x3a\xbb\x45\xbc\xcb\x82\xff\x42\x0a\xad\x21\x07\xc9\x50\xfc\xa5\xe4\x9a\x0c\x8d\xa4\x58\x92\x31\x45\x0b\x69\xc9\x37\xe0\x8b\xaf\x6e\xc9\xec\x67\x1d\x50\xbb\x58\x15\x52\xaa\x5c\xe5\xa1\x85\xb6\xad\x54\x88\xbc\xf8\x50\x29\xf6\xe1\x5c\x16\x31\x0a\x82\x47\x7f\x14\x55\xa2\xe6\x8a\x2a\xa3\xf6\xc4\x02\x59\x81\x73\x74\x3f\x42\xf7\x3a\x35\xb1\xc0\xae\xd0\x8a\xd0\x87\x59\xf1\x87\x64\xea\xf1\xc9\x7f\xdb\xaf\x1b\xeb\xa2\x48\xff\x0d\xf1\x53\xae\x74\xc3\x33\x41\x42\x33\x28\xf6\xb6\x5b\x32\xad\x31\x2f\x94\x26\x63\x92\xa3\x7f\xb0\xff\x1c\xfd\x6c\xcf\x71\x5d\xac\x10\xa9\xa5\x92\xfd\x7c\x74\x94\xc4\x95\x22\x9c\xf9\xd3\xd6\x40\x82\x51\x24\xe9\xcf\x28\xc1\xff\x20\x37\xbb\x80\x36\xf5\x01\x13\x74\xc7\x92\x02\x53\xb6\xa8\x07\x79\x5b\xd6\x89\x61\x0f\x0d\x6a\x82\xdf\x24\x82\x94\x71\x55\x94\xb1\xdd\xc6\xbb\x9a\x57\x35\xdf\x5e\xc9\x22\x1a\x0e\x8c\xfa\x17\xd7\xc1\xed\x5a\xba\x0a\x8f\xe8\x52\x08\xce\x9d\x30\x46\x18\x2a\x91\x6e\x29\x7d\xd3\x1b\xa1\x85\x73\xdd\xe3\x0b\xf1\xff\xf5\x5a\xa4\x75\x12\xaf\x51\x3c\x0c\x55\xdc\x9a\xb2\x21\x85\x78\x81\xc0\x0f\xb7\xb2\x6a\x78\x8e\x39\x95\x76\x96\x35\x8b\x49\xce\x31\xbc\x29\x51\xbe\x5e\x83\xba\xaa\x10\x15\x90\x9b\x4d\xb7\x03\xde\x12\xa9\xfe\xc1\x32\x99\x78\x32\x43\xa5\xb2\x97\x9f\xc0\x91\xb9\x9f\x6d\x7c\xaf\x9b\x8d\xac\x4c\x86\xd8\xe3\x07\xc7\x72\xeb\xe8\xdd\xd3\xad\xab\x7f\x85\x4d\x15\xcb\x59\x1d\x8a\xad\xae\x23\x03\x59\x64\x18\xa1\x45\x63\x5f\xc7\x64\xb5\x82\x67\xa8\x2c\x56\x05\x47\xb9\x08\x79\x12\xa3\x04\xd4\x66\xcd\xc7\xc3\xa3\xe1\xc9\x2f\x7f\x32\xdf\x59\xe9\x82\x2a\x03\x79\x05\x1c\x5a\xe3\x21\x18\x4f\xde\x83\x1a\x17\x5c\x3d\x41\x62\xff\xa0\x21\x80\x38\x07\x57\xaf\xc4\x88\xe9\xe9\x95\xf1\x26\xe9\xf4\x7b\x57\xf6\xb4\x2a\x28\xd7\x9f\x5c\x92\x85\x9d\xb1\x06\xf4\xad\x85\x51\x1a\x36\xdc\x32\x83\xb1\x91\x63\x73\xd8\x0e\x8b\x2c\x98\xfc\xaf\x02\xda\x65\x8a\xce\xac\xec\x54\xfa\x8e\x94\xcb\x8b\x79\x37\x6c\xf4\x06\xb2\x49\x2b\x0d\xad\x1b\x8e\xf6\x74\xc0\x3a\xc4\x62\x46\xd5\xd9\x50\xa3\x91\x50\x30\xb0\xd9\x9c\x8f\x67\xd7\x90\xdd\x9e\x09\xe2\x0b\x1e\x48\x22\x2b\x84\x73\xf6\x4e\x7a\x3e\xcb\xb9\x0f\xdb\x20\x4e\xba\x91\x2f\x81\x74\x50\x81\x8b\xfc\xce\x9d\xc3\x00\x36\x62\x9c\xe3\xd1\xd1\x6e\x81\x80\x9e\xf8\x9a\xdc\x22\xbc\xd5\xcb\x45\x3d\x9c\x0e\xd4\x22\x41\x83\x13\x2a\xcc\x38\xcc\x6e\xe5\x08\xb9\xed\x85\xb8\x5a\x1e\x26\x7e\xf8\x60\xd6\x95\x5a\x44\xcd\x33\x07\xd4\x29\x73\xb6\xe0\xe6\x73\x67\x48\x1b\x98\x68\x50\xf1\xdb\x01\x11\x1c\xdf\x21\x66\x6d\xa2\x55\x7b\x41\x5e\xb4\x7a\xb1\x82\x0b\x03\x4e\xfe\x0c\x01\xae\xd7\x42\x61\xd1\x48\x5a\x21\x9c\x8f\x4e\x29\x85\x0f\x9b\x8d\x1f\xb1\x6a\x80\x40\x7e\x01\x2c\xa5\x96\x31\xd0\x10\xfc\x80\x4a\x19\xdf\x4a\x15\xdf\x8e\xde\x24\x46\x62\xd8\x6c\x86\xeb\x35\x2a\x19\xda\x6c\xd6\x6b\x84\xf3\xe8\x98\x64\xbd\x6e\xe6\xda\x6c\x92\x20\x69\xe1\xe1\x5f\x7c\x56\x88\xf9\xc4\x06\xc6\xc8\xa4\x59\x55\x1b\x40\x92\xf4\xb3\x65\xbd\x06\x77\xc2\xca\x05\x86\x6e\xbc\xc4\x28\x4c\x54\x32\xae\xea\x4e\xc1\x0d\x17\x77\x1c\x76\x71\xad\xfc\x3d\x3f\xe7\x22\x56\xd1\x67\x10\xf7\xc9\x73\x71\xc7\xaa\xfe\x2d\xc0\xe9\x64\xd2\x68\xa2\x30\x95\x51\xa5\x15\xbb\xf0\x74\xfc\x57\x0d\x8b\xf0\x9d\xfe\x1d\x81\x3d\xfd\x38\xfb\xfb\xf4\xfc\xb7\x8b\x77\x6f\xcd\x11\xc6\xd3\xf0\x38\x23\x36\x41\x0f\x43\xf0\x83\x12\x9a\x52\x53\x63\x29\x20\x20\x6d\xa9\x9f\x42\x39\xd4\x98\x24\x09\x01\x69\xbb\x2d\xb0\xeb\x88\xa6\x55\x0c\xf5\x97\xaf\x0d\x71\x25\xed\x3c\xd6\xce\xcb\x18\x5d\x16\xf8\xf6\x03\xa4\x2c\x4c\x9c\x47\x5b\x2f\x55\xb1\xd9\x93\xcb\x77\xbf\xfd\xfd\xb7\xe9\xbb\xf7\x93\x98\x53\x0f\x95\x14\xa6\xef\xc6\xe7\xb3\x99\x6f\xbd\xdc\x44\xd6\x53\xb1\x0f\xa4\xac\x57\x81\x8c\xde\x66\x04\x1a\x5d\x91\x1a\x73\x11\x57\xea\x01\x61\x16\x28\x2f\x3d\xba\x60\xb3\x07\xc6\xd1\x2a\x22\x44\x41\xe4\xe8\x0d\x61\x7c\xb3\x49\xd7\xeb\xd1\x98\x60\x0e\x0b\x8c\x68\x50\xa9\x14\xaf\x84\xf9\x88\x20\x8b\xe4\xa4\x87\x77\x8a\xd0\x43\x3f\xd7\x75\x1c\xd8\xa1\xb0\x73\x92\x63\xc2\x22\x46\x08\x0b\xa5\xc5\x1d\x79\x51\x45\x8a\xbd\x01\xed\x19\xb2\xa4\xe8\x2d\x51\x61\x1c\x70\x41\x3d\x53\x9a\x9c\xdf\x73\x0a\x05\x8d\xdb\x64\x16\xd8\x83\xed\xd0\x2b\x58\x45\x04\x18\x96\x97\x18\x64\xba\x47\xad\xe5\x21\x76\x08\x0f\x59\x9d\xe6\x39\x45\x8c\x35\xe0\xcd\x3e\x08\x39\x91\x47\x6d\x8e\x67\xf0\xad\x89\x01\xc3\x5c\x7b\x3a\xde\x09\xa1\xdc\x28\x68\xf7\x48\x64\x24\x40\x63\x1b\xc7\x55\xe2\x54\x68\x71\x4c\xdf\xe3\x2e\x45\x4c\xb1\x5e\x83\xd1\xab\xe6\xdc\x69\xb3\x11\xb2\x0b\x5a\x0d\xa0\x6d\x56\xa7\xe7\x11\x11\x45\x54\xff\xbb\x88\x69\x42\x8b\xbb\xa2\x44\x0b\x94\x77\xc6\xac\x7b\xe6\x11\xb8\x6b\x2d\x4e\x4b\x3f\xc0\x31\x3b\xc8\x6f\x1b\x68\x54\xd4\xe9\x24\xd2\xa1\xa8\xd0\xce\x0b\x5e\x58\xec\x51\x01\xe0\x1b\xc8\x0c\x71\xbc\x70\xd9\xdf\xa5\x29\x0d\x54\x53\x8f\x94\x93\x45\x42\xd1\x10\xf3\xed\x50\x3f\x90\x25\xc8\xf4\xe4\x45\x88\xfb\x76\x8a\x77\x3e\x16\x56\x52\xd7\xa5\x77\xab\x47\x76\xed\x26\xad\x7a\x36\xcf\x9c\x68\xbc\x6b\xbe\x18\x13\x3c\x2f\x16\x35\x75\x13\x78\x0d\xa8\x9b\x28\xde\x20\x58\xf2\xe5\xc3\x44\xb5\x52\x74\x5a\xe1\x35\x71\xf8\x16\xa9\xe9\x1c\xe9\x1b\xab\x7b\x4b\x6c\xc5\x72\x29\x66\x05\x45\xf9\x58\xb8\xc0\x60\xa0\x17\xa9\x93\xec\x14\xe8\xb5\x6a\x12\xb4\x0e\xc9\x25\x81\x79\xa3\x17\x21\xfb\x12\x08\x0a\xdb\xed\xbc\x5b\x42\x63\x8e\x10\x34\xe8\x11\x7b\x32\x59\xe8\x08\x3b\xda\xb7\xed\x44\x00\x8d\x49\x6b\x97\x51\x76\x6c\xd9\x5d\xd3\x3d\x43\xe1\x9c\x5f\x38\x62\x8e\x97\x78\x4d\xc5\x8f\x24\xbf\xc1\x9d\xe4\x17\x02\xfa\xe4\xeb\x67\xf5\x06\xc1\x8e\x31\x32\xa7\xdb\x56\x04\x0a\x36\xeb\xd9\x85\xb2\x96\x95\x66\x15\xe4\x07\x5d\x78\x91\xe4\xa5\x2f\x35\xbd\xa3\x89\xf1\xd4\x00\x6e\x66\x99\x50\x34\x2f\xee\x05\x7c\x45\x0b\xcc\xe7\x20\x69\x70\xff\x3b\x4b\x6c\x9c\x6e\xc1\x65\x64\x7a\x41\xa3\xca\x22\x3b\xea\x02\x73\x04\x1d\xd5\x58\x98\x96\x79\x91\x79\xcd\x05\xd1\x76\x3e\x77\xa9\x5b\xd1\xca\x78\xcf\xeb\x7d\x79\x92\x48\xc2\x75\xcb\xb0\x38\xda\x2e\x10\x91\x44\xec\xcc\xbc\x4e\xd1\x9a\xf1\x8e\x04\x1f\xc3\xc3\xef\xd2\xc7\xf3\x14\x0a\x65\x38\xf2\x14\xd2\x84\xa1\x54\x26\xa9\x9d\x6c\x0a\x71\x4e\x56\x0c\xec\x15\x9c\xc0\x6e\x96\x7d\xcf\x43\xf7\x2e\xe4\x49\xe2\xb7\xeb\xb2\xb1\x92\xa5\x16\xf0\x95\x6b\xf7\xb6\x6b\x47\xbb\xf7\x5a\x1e\x3b\xac\x75\xf8\xd8\x1f\xb9\x38\x63\xbb\x52\xb7\x51\x3d\x76\x4d\xa7\x90\x9b\x65\x9f\xc5\x38\x90\x9c\xbd\x9d\xa9\xd4\xe9\x8b\x7d\xca\xff\x5d\xd4\xb9\xf9\xe7\x63\x82\xb4\x08\x76\xab\xd0\xaa\x57\x9d\x38\xd3\x7d\x1b\x0d\x77\x5d\xe0\x77\x20\xdc\x54\x9b\x91\xeb\x76\x01\xa7\x35\x92\xfa\x38\x32\x8d\xf5\xf3\xf4\xdd\x3d\x25\xf8\x0e\x1a\x1f\x50\xb8\x58\x97\xde\x33\x39\xe9\x46\xbb\x27\x22\x9a\x33\x67\x32\x9a\x3c\x83\x11\x6f\x22\xc1\xec\x73\x22\x2f\x85\x03\x3b\x14\xcf\x0f\x1a\x52\xbd\x02\x83\xdd\xa1\x78\x81\x17\x3a\xa1\x76\x52\x8c\xde\x3d\xa7\xa1\xdc\x90\x51\x15\x69\xce\xf5\x61\xba\x9f\xc0\x25\xe3\x22\xa7\x17\x82\xdf\xc9\xd1\x48\xfe\xef\xf0\x28\x50\xde\x8e\x54\x65\xba\xd1\x46\x2f\x80\x6e\x3a\xf3\xd3\xc8\x58\x12\x99\x5c\x54\x66\x7f\x11\xcf\x2a\xbf\x12\xff\x9a\x92\x95\x11\xb1\x5a\x3b\xd9\x03\xbe\x26\x31\x50\x3b\xa1\xdc\x16\x1a\x3a\xf2\x0c\xa4\xb6\x66\x5a\xf5\xa1\xca\x2e\x72\x97\x15\xde\x41\xf0\x30\xba\x01\x42\xc7\x9a\x4a\x69\x4b\xc8\x78\x91\x75\x7b\xbf\xc0\x8b\x34\x35\x4d\x41\xa7\xc4\x4f\x73\x0d\x56\x5e\xbb\xc3\xee\xec\xd6\x1d\xdb\x35\x4a\xf1\xd0\xef\x60\x34\xcb\x96\x68\x85\x40\x52\x74\x97\x3a\xac\xf0\x5b\xbd\x57\x8d\x1f\xa1\x96\x0f\xa3\x41\x56\xed\xba\x8b\xb9\xa2\xb2\x69\x4e\xb5\xc5\x6f\x9c\xc5\xdb\x3d\xac\xae\x3e\x7a\x80\x76\x26\x62\x6d\xd0\xe0\x06\xe8\x28\x77\x08\x6b\xbb\xea\x87\xe6\x9a\xe2\xda\xe4\x9d\xa2\x45\x97\x7c\x11\xc2\xe6\xaf\x33\xb8\x36\x7f\x45\xb6\xba\x0b\xd5\xc1\x48\xf6\x25\x9d\x51\x58\xe0\x02\x2f\x54\xb3\x96\x22\x43\xeb\x52\x92\x4a\x97\x33\x34\xfb\x60\xfe\x74\x64\x19\xb3\x0e\x8f\xd9\x35\x01\x92\x8b\xbc\x44\x46\xf3\x8c\x50\x32\xe3\x91\x4a\x05\x4d\x34\x94\x30\xf6\x37\x82\x51\x33\x65\xf7\x4a\x95\x09\xc6\x4b\x94\xdd\xba\xc5\x09\x5d\x41\xb8\x5e\x52\xc4\x96\xa4\x94\x95\xa5\x13\x5b\xa1\x24\x13\xef\x64\x4b\x9e\x24\x42\x0d\x69\x9e\xba\x06\x25\xb9\x86\x74\x11\x6e\xb3\xf2\xca\x76\x06\xba\xc6\xa0\x81\xcd\x26\x8d\x6a\x68\x6c\x63\x36\x81\x86\x46\x45\x28\x8f\xd5\xf6\xcc\x19\x21\x5f\x3a\x26\xce\x3f\x9f\x75\xf8\xaf\x46\x1a\x12\xb0\x80\xdf\xe3\x65\x90\x9b\x5d\xba\x6b\xc8\xa4\xe9\x32\xfd\x96\x7e\xcb\x72\xee\x8a\x9d\xa3\xe0\x39\x8a\xe9\x3e\xec\x78\xc9\xe9\x7d\x95\xe3\x77\xf7\x6f\x36\x6a\x67\x33\xca\x84\xd7\x0b\xdd\x9f\x98\xc0\x0d\xbb\xc6\xdb\xd9\x65\xb0\x0b\x34\xea\x3d\x4d\x47\xb0\xb3\x8b\x0c\x35\xf6\x5a\x9c\x73\x01\xc2\x9c\xeb\xf0\xa8\x89\x43\xa5\x93\x47\xe6\x8b\x81\x83\xab\xd9\xec\xd2\xe0\x55\xe3\x64\xbf\x9f\x2c\x3c\x2d\x88\x9a\xee\x3e\xd0\xe7\x92\xe1\x57\xd0\xdd\xe6\xd4\x6f\x1b\xbf\x44\x3a\x7e\x77\xdc\xc0\xfe\x86\xbd\x7f\xe8\xdb\xb5\x81\x62\xa6\xdd\x48\xac\x1c\x8e\x85\x27\xd8\x61\x2d\x07\x35\xf1\x92\x05\x6e\xbc\x0a\x1d\x7c\x73\x4e\x8b\x9b\x9a\xab\x05\x47\x0e\xc3\x1a\x62\xb6\x91\x01\xac\x54\x53\xb8\x2b\xff\x70\x65\xe3\x9d\x80\x38\xfb\x87\xe9\x5e\xbd\xe7\xef\x20\xaf\xa9\x79\xe8\x0a\xcb\xd7\x95\x67\xeb\xcf\xe5\xab\x31\x21\xb7\x05\x9a\xf1\x22\xbb\x2d\x30\x62\xac\x8d\x1f\xc4\xaa\x6c\xe9\xc2\xb9\xac\x9f\x3e\x24\x16\x5b\x82\x65\xe5\x35\xd8\x21\xed\x8d\x25\x53\xfa\x1a\x6f\x6b\x2d\x40\xa7\xdc\xa1\x3b\xc0\x6d\xef\x6e\x7b\xa8\xb5\x35\x16\xde\xf8\x63\x1c\x80\x8e\x5b\xad\x60\x8c\x64\x60\x5b\x5a\x1e\xe8\x06\x36\xba\xe4\x64\x2b\xc8\x98\x12\xfc\x17\x72\xc3\xfc\x6e\x57\x11\x45\x61\xe7\xce\xc5\xb6\x1b\x17\xd1\x44\x78\xc7\xdb\x16\x3b\xf4\xef\xf7\xdc\xb4\xf0\x5a\xb5\xb6\xdd\xb2\xf8\x36\x77\x2c\x1e\x71\xc3\x22\x72\x0e\x69\x5a\xd2\xf8\xcd\x8a\xa8\x95\xb5\xc3\x3a\x7b\xb3\x68\xf9\xba\x27\x5e\x5b\xef\x52\xec\x78\x93\xa2\xf7\xde\x4b\xb8\x4f\x60\x87\xbb\x2f\x26\x4f\x13\x94\xb1\x74\x5a\xe3\x6b\xc8\x6e\xc3\xa0\xf6\xbd\x8c\x20\x88\x99\xda\x46\xcc\xf5\x29\xc5\xed\xe1\x41\x18\x04\x28\x5a\x32\xf3\x0c\x73\x4b\x54\x6f\x0d\x86\x14\xa7\xf0\x2b\x4b\x05\x92\x88\x1f\x00\xbe\xe5\x6c\x6f\x5c\xc4\x47\x24\x8f\x40\x77\x9a\x65\xa4\xc6\xfc\x22\xdf\x82\x51\xaf\xf2\xb0\x07\x73\xdb\xf1\x35\xbe\x7c\x3f\xbb\x3e\x9f\x26\x91\xbe\x00\xd0\xa4\x13\xc1\x77\xa1\xa7\xfe\xb3\x50\xb4\xf4\x7c\xdd\x0a\x0b\x2b\x29\xc9\x82\xa5\x63\x8a\x20\x47\x6d\x3f\x55\xc4\x6f\xdb\xa0\x33\x4e\x11\x5c\xf5\xc2\x4e\x6a\x7e\x49\x16\xe7\x77\x08\x73\x16\x6c\xa2\xd8\xa6\xe2\x91\x3e\xa6\x46\xb9\xe4\x24\x3d\xf7\x76\x86\xaa\x67\xa4\x4f\x2b\x40\x22\xb0\x1c\xc8\x1b\xc8\xe9\x21\xfc\xca\x9a\x5b\x39\x3f\xfa\x37\x71\xd4\x9f\x7f\xa1\x74\xfe\x75\x2c\x0f\x9c\x85\x74\xda\x62\x9c\x21\x83\x24\x8d\x33\xce\x0d\xd3\xa3\xde\xc2\x88\x04\xfc\x38\x40\x3b\xeb\xf6\x6e\x58\xcc\x61\x47\x2f\x91\xb9\x55\xbc\xd6\xf5\x6f\xaf\xd6\x25\x0d\x32\xa3\x8d\xc0\xea\x1c\x3d\x10\x61\x90\xd1\x75\x7a\x20\xa2\x12\xd3\xad\x79\xf7\xb7\x96\xfa\x81\x01\xd3\x73\x3b\xab\x21\x35\x78\x6e\xbf\xed\x52\x96\x51\xd5\xf8\xe5\xc8\x2a\x44\x79\x17\xe7\x92\xbf\x15\xd5\xeb\xa2\x0c\x28\x44\xf2\x19\xfb\xf5\x9c\x41\xcd\x10\x60\x9c\x16\x19\x1f\xfc\xea\xba\xdf\x3b\x48\x01\xfc\xca\xc0\x4b\x40\xd1\xef\x75\x41\xd1\xde\x00\x7e\x65\x07\x2c\xbf\x1d\xec\x07\x81\x51\x26\x80\x31\xfa\x2a\x86\x8d\xce\xc7\xb3\xbd\xf5\x0a\xde\x4f\x11\xa7\x05\x62\xe9\xf1\xd1\x26\x3c\x4c\xe8\xbf\x31\x6e\x5c\x92\x3a\xff\x08\x79\xb6\xbc\x24\x0b\xb6\x17\x1e\xa3\x2d\x3f\x78\x09\x06\x01\x03\xef\xad\x25\x62\x8f\xf4\xec\x72\x3b\x08\x54\x96\xcd\x31\xbb\x54\x41\x32\xf8\x35\xd8\x36\xd9\x83\x58\x5f\x24\xf4\xf0\x1a\xd7\x05\xa2\x68\x25\x02\x6e\xb5\x61\x08\x16\xad\xdd\x65\xf9\x67\x54\xfe\xf5\x90\x2d\xa4\x8a\x57\x82\x87\x8d\xe6\x0f\x52\x87\xde\xae\x88\xd7\xd3\x21\x22\x96\x32\x0c\x73\x28\x58\xd6\x51\xd3\x0e\xd2\xc1\xc0\x95\xae\xd7\xf7\x84\xee\x2b\x91\x3b\x36\x1b\x0e\xbc\x04\x73\xbd\x99\xf7\x90\x30\x97\x43\x90\x11\xcc\xd1\x3d\xdf\xf7\xf8\x23\x67\x91\xea\xa2\x3a\xed\xc1\x4b\x20\x87\x8c\xf4\xef\x11\x45\x55\x09\x33\xb4\x77\xf8\x1f\xff\xb6\xf7\xf9\x73\xfe\xd3\xfe\xaf\x87\x8b\x61\x87\x7f\x25\xb4\x70\x08\x72\x94\x45\x70\x03\x40\x11\xaf\x29\x06\xea\xb8\x7f\x34\xa7\x64\x35\x5e\x42\x2a\x76\xe6\x9e\x18\xe6\x29\xaf\xf8\x4f\x60\x1f\x34\x84\xaa\x4e\x8c\x80\xa8\x93\xe6\x1f\x8c\x43\xca\x51\xfe\xea\x21\x05\x03\x61\xa4\x06\xc3\x18\xa4\xad\x3f\xa9\xab\x4f\x9f\x14\x2b\x74\xcf\xc9\x97\x28\x1a\xbd\xd5\xd2\xe6\x1f\x71\x40\xe1\x9d\x53\x70\x1c\x05\x20\x77\x88\xd2\x22\x47\x2c\x8d\x2f\x4f\x21\xd2\xbd\x59\xef\xba\x01\x9f\xfa\x06\x00\xa9\xde\x18\xae\x50\x6a\x2d\x6a\xd8\x08\x3e\xfd\x04\x06\x6c\x39\x18\x82\xc1\x41\x36\x68\x9f\x0a\x65\xed\x43\xfb\x25\xf6\x32\x38\x6a\x13\x15\x2a\xbb\x45\x5f\xc1\x4b\x70\x05\xf9\x72\x34\x2f\x09\xa1\x7b\xf2\x9f\x54\x76\x7c\xec\xed\xff\x78\x7c\x74\x74\x74\x14\xd6\x89\x92\x2c\xf6\xac\x25\x81\x9f\xc0\x20\x1d\x80\x9f\x5a\xf3\xf2\x13\x18\x1c\x0a\x3d\x90\xb3\xbc\x14\x6f\xe4\x74\x3f\x81\xc1\x8a\x35\x0b\x95\x8f\x2d\xcd\x37\x94\x1c\x51\x1a\xd5\x6e\x29\x0b\x46\x4a\x34\x12\x84\x0c\x10\xa5\x27\x83\x21\x10\x23\x82\xd4\x8a\x3f\x0c\x71\xed\xae\xf6\xda\x29\xf6\xc1\x5a\x38\x87\x11\x55\x19\xd2\x9e\xd2\xf2\x76\xe3\x8e\x72\x82\xd1\xbe\x30\x22\x82\xf4\x9d\xf7\x8c\xcf\xf0\x66\x42\xc9\xb6\x15\x62\x0c\x2e\xd0\x10\x64\x37\x3d\x96\x81\xc9\xd0\x4c\x18\x69\xc1\xc4\x03\xc1\xa8\x3d\xe1\x89\xce\x20\x47\x7b\xfb\xfb\xa3\x85\x5a\x4e\xc0\x0d\x81\x9d\xb7\x6c\xe3\x62\x84\xfd\x4c\xdb\x5f\xd1\x6d\x52\x36\x01\xa3\x82\x67\xa1\xe0\x51\xf1\x24\xa2\x31\x6c\x94\xd9\x91\x67\xcb\xf0\x27\x0a\x7d\x9b\xcc\x77\x63\x83\xa6\x4e\xc5\xb8\x3b\xed\x68\x2d\xc2\x14\xb4\xb2\x14\x61\x12\xe3\x70\x55\xa5\x11\x31\x6d\xd9\xd1\x51\xa6\x83\xc7\xcb\x09\x3c\x46\x56\x20\x26\x2f\xe0\xf0\x5b\x2f\x35\xce\x6c\x29\xe0\xca\x48\x17\xba\xed\x74\x13\xdb\x3b\xbe\x93\x35\x6b\x3c\x56\xd4\x1f\x38\xce\x77\x9a\x6c\x74\xc8\xb1\xa5\x30\x27\x42\x8a\xd9\x92\x50\xae\xa3\x86\x69\xdd\x53\xa4\xd3\x3a\x91\x4a\xa0\xad\xc1\xbc\x11\xc4\x8f\x2e\x09\x5e\x34\x31\x3b\xcb\x96\x28\xaf\xed\x6f\xab\xcc\xf4\xb3\xf3\xfb\x8a\x22\xd6\x14\x8b\x24\x71\xfa\x8d\xd3\x96\xa4\x8e\x43\xbd\x9a\xb9\x0c\xdb\xa3\xb1\x7d\x97\xab\x44\x2e\xa5\x5e\xe4\x01\x82\xf5\xc9\xab\x73\x78\x5b\xe9\xe3\xcb\xcf\xcd\x95\xe3\xcf\x49\x0a\x3e\xcb\xb1\xba\x3c\x0e\x36\x9b\xcf\xc9\x10\x7c\x4e\xb4\x31\xef\x00\xf4\x8d\x42\x09\x60\xc8\x38\x54\x96\x0d\x88\x48\x65\x5e\x13\x44\x57\x05\x63\xa1\x14\x0d\xb8\x39\x9a\x01\x1b\x92\x1a\xb0\xcb\xab\x59\xdb\xb5\xa8\x72\xf5\xf4\x02\xdf\x91\x5b\x14\xfa\x5a\x88\x95\xaf\x81\x27\xf2\xdd\xa8\x9c\x8a\x49\xa5\x03\x64\x4e\xad\xd4\x54\x15\x99\x4a\x4b\x34\xd1\x26\x42\x4f\xa3\x8d\x89\xfb\x36\x4e\xb8\xf4\x1d\xfc\xae\xa8\xba\xb8\xae\x6a\x21\x6f\x20\x3b\x1f\x9b\xdf\xb7\x92\x44\xbd\xa3\x56\xe1\xa1\xef\x23\xa1\x5e\x5d\xa5\x66\x07\x08\x32\x2e\xbf\x6f\x60\xb6\x4b\x3c\x05\xc7\xc9\xf3\x70\x7c\x45\xcf\xa7\x43\xe2\x78\x0e\x1d\xa8\x3e\xc8\x10\xe6\x14\x96\xcf\x22\x05\xd5\xcf\x5f\x0e\xac\x0e\x30\xa1\x7c\xf9\x6c\xf9\xc0\xea\x80\x91\xfa\x5b\x23\x92\x5c\xd6\x78\xbe\xf4\x7d\x29\x21\xf4\x59\x95\x4e\xa9\xc5\x9b\xc0\x37\x13\x03\x5f\x17\x98\x1a\x60\x4d\x01\xc9\xec\xfe\xb2\xb6\x88\x06\x08\x7e\x76\x20\xec\x48\x9e\xff\xb9\x01\xe3\xdb\x8f\xde\x15\x11\xaf\x41\xf2\x45\x63\x1b\xb6\xf3\xcd\xf9\x4e\x46\xc3\x35\xd5\x17\xb0\x2b\x23\xbc\x4f\x69\x78\x35\xd4\x17\xda\x4a\xf5\x8a\xe5\x31\x13\xb9\xec\x0b\xe0\x1d\x7a\x4c\xd3\x96\x33\xca\x15\xe7\x7b\x3b\xd6\x2d\x98\xf0\x47\x3d\xdc\x13\xbf\x88\xf8\x77\x3a\xed\x8b\x1e\x1d\x39\xe7\x59\xd1\x7a\xb0\x7b\xd6\x66\xbd\x76\xef\xfe\xf4\x97\x9e\xed\x83\x40\x77\x1e\xe3\x58\xd0\x79\xa5\x8e\x84\x1c\xbf\xe7\xc0\xec\x54\xd3\x35\x7c\x65\xf8\xe0\xad\xf1\x80\x5d\x2c\x10\x3b\x28\x0c\x1f\x13\x5a\x01\x97\x7d\x44\x68\x5d\x7e\xf2\xc1\xe2\x1f\xc6\xfb\xf6\xdf\xbc\xeb\xad\xfd\x27\x48\x35\xb3\x96\x04\xe6\x37\x6d\x33\xab\xea\xae\xbe\x41\x91\x93\xbf\xc8\x18\x65\x10\x10\x6d\x7a\x28\xd8\x6b\x4a\x56\xc1\xb6\xd8\xed\xd8\xa6\x2e\xae\x8f\x05\x5f\xee\x80\x2b\x3b\xd9\x4a\x7c\x76\x92\x9e\xd6\x7c\x49\x68\xf1\x07\x0a\x36\x7a\x7b\xa3\x42\x8d\x22\xc6\x51\x46\x90\xaf\x3f\x06\xd0\x38\x4f\x9c\x8b\x75\x41\x25\x36\x3d\xd8\x16\x7b\x6c\x7e\xc9\xcb\xff\x40\x96\x6d\x73\x66\x3f\xa7\xa9\xfe\x5e\x9d\x36\x3a\x67\xa8\x44\x42\x4f\xda\x1e\x91\x64\x8a\x38\x2c\xf0\x16\xa3\x24\x3f\x33\x3d\x26\x98\x53\xd5\xb3\xe6\x36\x01\x27\xd7\xd0\xb9\x9b\xbd\x6e\xbe\x1b\x93\x30\xf9\xa1\x02\x61\x63\xdb\x4e\x1d\xfd\x89\x3c\x60\x47\x00\x1a\x1e\x56\x95\x09\xdc\xe3\xbc\x42\x6c\x33\xb8\xf6\xcf\x00\x00\x00\xff\xff\x1b\xda\x05\xcf\x2a\x60\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

