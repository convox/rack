// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xbc\xb9\x93\x33\x23\xcb\xb2\xa7\x76\xef\x96\x73\xb9\x2a\x47\x76\x26\xde\xb5\x13\x9d\xe4\x64\xea\x36\x49\x6d\xc1\x24\x24\x71\x4d\x01\x1c\x00\x74\xec\x51\xe9\xbf\x5f\xe1\x41\x12\x4f\x4a\xb6\x93\xda\x6c\xed\x24\x22\x1b\x8d\x46\x77\xa3\x5f\x68\x70\xb3\x01\x39\x5a\x14\x18\x81\x04\x56\x55\x02\xb6\xdb\x17\x00\x6c\x36\xe0\x07\x58\x55\x20\x7d\x05\x46\xa7\x55\xd5\x3d\x5c\x43\x5c\x2c\x10\xe3\xf2\xcd\x55\xf3\x43\xbd\x7e\x01\x00\x00\xc9\xe9\x6f\xf3\x6b\xb4\xae\x4a\xc8\xd1\x1b\x42\xd7\x90\x7f\x44\x94\x15\x04\x27\x20\x05\xc9\xc9\xf8\x78\x7c\x38\xfe\xcb\xe1\xf8\x2f\xc9\x50\x81\x4f\x08\xce\x0b\x5e\x10\xcc\x92\x54\xa3\x90\x33\x71\x8d\x03\x24\x37\xb0\x84\x38\x43\xf4\x30\xeb\x40\xdd\xb9\xbd\x41\x15\x25\x19\x62\xec\x51\x63\x28\x5a\x16\x8c\xd3\x87\x5d\x83\x92\x0b\xcc\x11\xc5\xb0\x14\x14\x83\xe4\x0d\x4e\xd3\xf3\xdf\x6b\x58\x8a\x15\x7c\x12\x4f\x66\x68\x91\xa4\x06\x18\xd8\x0e\x41\xf2\x7f\x88\x25\xe0\x0b\xd8\x0e\x1b\x2c\x53\x5a\xdc\x41\x8e\x76\x20\x69\xa0\xc2\x38\x5e\x97\x10\xdf\xce\x51\x56\xd3\x82\x3f\xfc\x4a\x49\x5d\x09\x36\x6f\x4c\x74\x20\x05\x9f\x36\x12\x9b\x10\x80\x0d\x2b\x70\x26\x5f\xd4\xba\x34\xd2\x64\x0a\x29\x5c\x23\x8e\xa8\x1c\xda\x2f\x91\x4a\xc0\x3e\x42\x1a\x41\xf8\x66\x2d\x93\xb2\x66\x1c\x51\x43\x0d\x00\x48\xae\x1f\x2a\xa4\x08\xe7\xb4\xc0\xcb\x64\xd8\xbd\x3a\x43\x0b\x58\x97\x5c\xbe\xb5\x9f\xb3\x8c\x16\x15\x6f\x74\x2e\xd1\xaf\x3a\xae\x9d\xa1\xaa\x24\x0f\x6b\x84\xf9\x15\xbc\x2f\xd6\xf5\x3a\x30\x67\x0a\x92\x77\xf5\xfa\x06\xd1\xd0\x94\x52\x93\xc7\xb1\x49\x53\x90\x68\xbc\xa0\x42\x34\x43\x98\xc3\x25\x02\x64\x01\x34\x1b\x10\x03\x9c\x80\x5b\x84\x2a\x40\x6b\x8c\x0b\xbc\x04\x5f\x57\x45\x89\x40\x2e\xe9\x12\xcb\xec\x23\xb9\xc0\x4f\x24\xf9\x4f\xbd\x14\x2b\xb4\xdf\x8e\xe2\x73\x7c\x57\x50\x82\x05\xc9\x61\x5a\xe3\x12\xed\x11\x68\x50\x9e\xe6\x7e\xdc\x6f\x1e\x0b\xe1\x7b\x5c\x3e\x00\x58\x96\xe4\x2b\x80\x99\x58\xae\x58\x2c\x5f\x15\x0c\x08\x13\xb8\xa0\x64\x0d\x0a\xcc\x8a\x1c\x01\xbe\x42\xe0\xe3\x74\x12\xa1\xf9\x1d\x31\x5f\x9c\x0a\x84\x28\xff\x08\xcb\x1a\xa9\x4d\x2d\xb7\xef\x50\xc2\x81\x2f\xde\x22\xfe\x86\x1e\xbe\x37\x9f\x0c\x8b\xf3\x04\x36\x7d\x60\x08\xcc\xeb\x1b\x8c\x38\xd3\x88\x04\x9f\x58\x85\xb2\x62\xf1\x20\xd8\x72\x28\x79\x54\x12\x98\x83\xc6\x42\x00\x84\xf3\x8a\x14\x98\xb3\xef\xc2\xb3\x19\x2a\x11\x64\xa1\x05\x7d\x6b\x93\x31\x43\x15\x61\x05\x27\x34\x24\xa4\xe7\x4d\x36\x27\x35\xcd\x10\xc8\x48\x8e\x00\xed\xa6\xf1\x48\xb0\x4d\xf7\xb7\xa6\xe2\x7a\x85\xc0\xa5\x25\x3a\xa6\xe7\x03\x4b\x31\x21\x58\x10\xda\x6e\x8a\x00\x71\x4a\x31\x22\x64\x5d\x16\x8c\xff\xf7\xe9\x6f\xf3\x34\x3d\x9f\x9c\xa4\xa9\x02\x4e\xd3\x8b\xfc\x7f\x9e\x42\xea\xc7\xe9\x04\x30\x35\xdf\x7e\x54\xc5\xf5\xfe\xfb\x10\x57\xe9\xed\xb1\x1f\x91\x4d\x7c\x64\x51\xe7\xec\xbd\x83\xd9\xf9\xff\x7e\xb8\x98\x9d\x9f\xbd\x04\x97\x70\x7d\x93\x43\x30\xa9\x19\x27\xeb\x6b\x52\x15\x19\x78\x0b\x71\x5e\x22\x0a\xf4\x76\x00\x0d\x46\x83\xcc\xab\x02\x5f\x22\xbc\xe4\x2b\x49\xe4\xb1\xf9\xca\x31\x00\x3e\x7d\xd3\x49\x84\x73\x1d\xd3\x3e\x4e\x27\x82\x63\x4f\x65\xd8\x0e\x06\x4d\x27\x93\x8b\xb3\xd9\x37\x57\x79\x31\xb3\x40\x1c\x9e\xde\x0a\x8a\xae\x60\x55\x15\x78\x69\xea\x77\x32\x25\x94\x4f\x29\xe1\x24\x23\x8e\xe7\x59\x71\x5e\xa9\xb0\x4e\xe8\x16\xc2\x88\x1a\x70\xc9\xdb\xeb\xeb\xa9\x30\x69\x17\x98\x71\xb1\xd3\x42\xef\xe4\x5e\x47\x31\x88\x79\xd2\x71\x47\x4f\xc7\xfa\xe7\x9b\x3f\x7b\x42\x6b\x46\x9e\xf5\xac\xef\x7a\x12\x5d\x9e\x7e\x15\x9f\x6c\x3e\xbf\x74\xa7\x2a\x7b\x96\x26\xc0\x9f\x37\x15\xd8\x06\xe5\x3d\x43\x4c\x5a\x65\x4b\xe0\xc6\x96\x9b\x91\x32\xe2\x46\xe5\x9e\xb8\x38\xbd\x4a\x53\x09\x63\xac\x64\x4a\x49\x85\x28\x2f\x90\x6d\x25\x85\xdb\x63\xac\x5e\x23\x01\x3f\x25\x65\x91\x3d\x9c\x91\xac\xf6\xe2\x26\xc7\x56\x88\x54\xea\xe4\xf0\x78\x7c\x78\xfc\x9f\xc6\x24\x12\x68\xce\x21\x47\x7a\xfc\x27\xeb\x15\x70\xf0\x49\xf0\xf3\xc5\x02\x65\xd2\x19\x4b\xf7\xeb\x60\xd3\xa4\x17\x38\x2b\xaa\x26\xe3\x99\x23\x7a\x57\x64\x48\x39\xe8\x52\xda\xa3\x11\x5c\xc3\x3f\x08\x86\x5f\xd9\x28\x23\x6b\x2b\x49\x31\x17\x9a\x69\x83\xf6\x09\x24\x8c\xb3\xb4\x5b\x78\xe7\xdd\x9b\x3f\x5b\xeb\xb7\xf9\xd6\xc2\x9c\x4c\x21\x5f\x09\xe2\x8f\x32\x82\xef\xc8\xfd\x51\x62\xbf\x15\x0c\x55\x2c\xb7\x59\xe1\x32\x42\x41\x3e\xbc\x83\x6b\x25\xc6\x7c\x5d\x60\x91\x0d\x42\x4e\xa8\xc7\x92\x64\x87\x9c\xc0\xbe\xb2\x02\x9e\xbc\x04\x7f\x3d\x89\x18\x9c\x4b\x7e\x14\x3f\x1b\xfd\x54\x0f\xc0\x76\x07\xf7\xcc\x5f\x1d\xe4\xd6\xb3\xb4\x86\x86\xf7\x68\xb7\xf2\x40\x69\xfa\xa6\xc6\x8a\xaa\xbd\x94\x7c\x42\x72\xe4\x2b\xf4\xfc\xe7\xd7\x75\x76\x8b\x78\x97\x05\xff\x95\x14\x5a\x43\x0e\x93\xa1\xf8\x4b\xc9\x35\x19\x1a\x49\xb1\x24\x63\x86\x96\xd2\x92\x6f\xc1\x17\x5f\xdd\x92\xf9\xcf\x3a\xa0\x76\xb1\x2a\xa4\x54\xb9\xca\x23\x0b\x6d\x5b\xa9\x10\x79\xf1\x91\x52\xec\xa3\x85\x2c\x62\x14\x04\x8f\xfe\x28\xaa\x44\xcd\x15\x55\x46\xed\x89\x05\xb2\x02\xe7\xe8\x7e\x84\xee\x75\x6a\x62\x81\x5d\xa1\x35\xa1\x0f\xf3\xe2\x0f\xc9\xd4\xe3\x93\xff\xb2\x5f\x37\xd6\x45\x91\xfe\x2b\xe2\xa7\x5c\xe9\x86\x67\x82\x84\x66\x50\xec\x6d\xb7\x64\x56\x63\x5e\x28\x4d\xc6\x24\x47\xff\x64\xf6\x04\xd7\xc5\x1a\x91\x5a\x6a\xd8\xcf\xe3\x71\x12\xd7\x88\x70\xda\x4f\x5b\xeb\x08\x46\x91\x8c\x3f\xa3\x04\xff\x93\xdc\xec\x03\xda\x14\x07\x4c\xd0\x3d\xeb\x09\x4c\x19\xa2\x1e\xe4\x6d\x4d\x27\x86\x3d\x34\xa8\x89\x7c\x93\x08\x52\xc6\x55\x45\xc6\xf6\x19\xef\x6b\x5e\xd5\x7c\x77\x19\x8b\x68\x38\x30\xea\x5f\x5c\x07\xb7\x6f\xdd\x2a\x3c\xa2\xcb\x1f\x38\x77\x62\x18\x61\xa5\x44\xae\xa5\x94\x4d\xef\x82\x16\xce\xf5\x8d\x2f\xc4\xff\x37\x1b\x91\xd3\x49\xbc\x46\xe5\x30\x54\x6e\x6b\x6a\x86\x14\xe2\x25\x02\x3f\xdc\xca\x92\xe1\x39\xe6\x54\x1a\x59\xd6\x2c\x26\x39\xc7\xf0\xa6\x44\xf9\x66\x03\xea\xaa\x42\x54\x40\x6e\xb7\x9d\xfa\xbf\x23\x52\xf7\x83\x35\x32\xf1\x64\x8e\x4a\x65\x2c\x3f\x81\xb1\xb9\x99\x6d\x7c\x6f\x9a\x5d\xac\xec\x85\xd8\xe0\x87\xc7\x72\xdf\xe8\xad\xd3\xad\xab\x7f\x85\x4d\x09\xcb\x59\x1d\x8a\xad\xae\x23\x03\x59\x64\x18\x71\x45\x63\x5c\x27\x64\xbd\x86\x67\xa8\x2c\xd6\x05\x47\xb9\x88\x77\x12\xa3\xfe\xd3\xa6\xcc\xc7\xc3\xf1\xf0\xe4\x4f\x7f\x36\xdf\x59\xb9\x82\xaa\x01\x79\xd5\x1b\x5a\xe3\x21\x98\x4c\x3f\x80\x1a\x17\x5c\x3d\x41\x62\xff\xa0\x21\x80\x38\x07\x57\xaf\xc5\x88\xd9\xe9\x95\xf1\x26\xe9\xf4\x7b\x5f\xf6\xb4\x2a\x28\xd7\x9f\x5c\x92\xa5\x9d\xae\x06\xf4\xad\x85\x51\x1a\x36\xdc\x31\x83\xb1\x91\x63\x73\xd8\xde\x8a\x2c\x99\xfc\xaf\x02\xda\x67\x8a\xce\xac\xec\x55\xf7\x8e\xd4\xca\x8b\x45\x37\x6c\xf4\x16\xb2\x69\x2b\x0d\xad\x1b\x8e\xf6\x74\xc0\x3a\xbe\x62\x46\xc9\xd9\x50\xa3\x91\x50\x30\xb0\xdd\x9e\x4f\xe6\xd7\x90\xdd\x9e\x09\xe2\x0b\x1e\xc8\x20\x2b\x84\x73\xf6\x5e\xba\x3d\xcb\xb3\x0f\xdb\x08\x4e\xfa\x90\x2f\x81\x5c\x50\x81\x8b\xe4\xce\x9d\xc3\x00\x36\x02\x9c\xe3\xd1\x78\xbf\x28\x40\x4f\x7c\x4d\x6e\x11\xde\xe9\xe2\xa2\xee\x4d\x47\x69\x91\x88\xc1\x89\x13\xe6\x1c\x66\xb7\x72\x84\xdc\xf6\x42\x5c\x2d\x0f\x13\x3f\x76\x30\x8b\x4a\x2d\xa2\xe6\x99\x03\xea\xd4\x38\x5b\x70\xf3\xb9\x33\xa4\x8d\x4a\x34\xa8\xf8\xed\x80\x08\x8e\xef\x11\xb0\x36\xa1\xaa\xbd\x20\x2f\x54\xbd\x58\xc3\xa5\x01\x27\x7f\x86\x00\x37\x1b\xa1\xb0\x68\x24\xad\x10\xce\x47\xa7\x94\xc2\x87\xed\xd6\x0f\x57\x35\x40\x20\xb9\x00\x96\x52\xcb\x00\x68\x08\x7e\x40\xa5\x0c\x6e\xa5\x8a\xef\x46\x6f\x12\x23\x31\x6c\xb7\xc3\xcd\x06\x95\x0c\x6d\xb7\x9b\x0d\xc2\x79\x74\x4c\xb2\xd9\x34\x73\x6d\xb7\x49\x90\xb4\xf0\xf0\x2f\x3e\x2b\xc4\x7c\x62\x03\x63\x64\xd2\xac\x4a\x0d\x20\x49\xfa\xd9\xb2\xd9\x80\x3b\x61\xe5\x02\x43\xb7\x5e\x56\x14\x26\x2a\x99\x54\x75\xa7\xe0\x86\x8b\x3b\x0e\xbb\xb8\x56\xfe\x9e\x9f\x73\x11\xab\xd0\x33\x88\xfb\xe4\xb9\xb8\x63\x25\xff\x16\xe0\x74\x3a\x6d\x34\x51\x98\xca\xa8\xd2\x8a\x5d\x78\x3a\xf9\x9b\x86\x45\xf8\x4e\xff\x8e\xc0\x9e\xfe\x36\xff\xc7\xec\xfc\xd7\x8b\xf7\xef\xcc\x11\xc6\xd3\xf0\x38\x23\x36\x41\x0f\x43\xf0\x83\x12\x9a\x52\x53\x63\x29\x20\x20\x6d\xa9\x9f\x42\x39\xd4\x98\x24\x09\x01\x69\xbb\x2d\xb0\xeb\x88\xa6\x55\x0c\xf5\x97\xaf\x0d\x71\x25\xed\x3c\xd6\xde\xcb\x18\x5d\x16\xf8\xf6\x23\xa4\x2c\x4c\x9c\x47\x5b\x2f\x55\xb1\xd9\x93\xcb\xf7\xbf\xfe\xe3\xd7\xd9\xfb\x0f\xd3\x98\x53\x0f\xd5\x13\x66\xef\x27\xe7\xf3\xb9\x6f\xbd\xdc\x2c\xd6\x53\xb1\x8f\xa4\xac\xd7\x81\x74\xde\x66\x04\x1a\x5d\x91\x1a\x73\x11\x57\xea\x01\x61\x16\x28\x2f\x8d\x7e\x07\xa3\xb7\x84\x71\x90\x1c\xdd\x41\x7a\x44\x6b\x7c\x94\x93\xec\x16\xd1\x11\x23\xd9\x6d\x4c\xb4\x82\x74\x39\x6c\xbb\x4d\x37\x9b\xd1\x84\x60\x0e\x0b\x8c\x68\x50\xd5\x14\x07\x85\x51\x89\x20\x8b\xa4\xa9\x47\x77\x8a\xfc\x23\x3f\xfd\x75\xdc\xda\x91\xb0\x7e\x92\x8f\xc2\x4e\x46\x08\x0b\x65\xca\x1d\x79\x51\xf5\x8a\xbd\x01\xed\xb1\xb2\xa4\xe8\x1d\x51\xc1\x1d\x70\x41\x3d\x03\x9b\x9c\xdf\x73\x0a\x05\x8d\xbb\x24\x19\xd8\x99\xed\xd0\x2b\x58\x45\xc4\x1a\x96\x97\x18\x64\x3a\x4d\xad\xfb\x21\x76\x08\xbf\x59\x9d\xe6\x39\x45\x8c\x35\xe0\xcd\xee\x08\xb9\x96\x47\x6d\x99\x67\xf0\xad\x89\x0c\xc3\x5c\x7b\x3a\xde\x29\xa1\xdc\xa8\x71\xf7\x48\x64\x24\x40\x63\xdb\xc9\x55\xe2\x54\x68\x71\x4c\xdf\xe3\x8e\x46\x4c\xb1\xd9\x80\xd1\xeb\xe6\x28\x6a\xbb\x15\xb2\x0b\xda\x12\xa0\x2d\x59\xa7\xe7\x11\x11\x45\x54\xff\xbb\x88\x69\x4a\x8b\xbb\xa2\x44\x4b\x94\x77\x26\xae\x7b\xe6\x11\xb8\x6f\x79\x4e\x4b\x3f\xc0\x31\x3b\xf4\x6f\x7b\x6a\x54\x2c\xea\xa4\xd7\xa1\x58\xd1\xce\x16\x5e\x58\xec\x51\x61\xe1\x5b\xc8\x0c\x71\xbc\x70\xd9\xdf\x25\x2f\x0d\x54\x53\xa2\x94\x93\x45\x02\xd4\x10\xf3\xed\x04\x20\x90\x3b\xc8\xa4\xe5\x45\x88\xfb\x76\xe2\x77\x3e\x11\x56\x52\x97\xaa\xf7\x2b\x51\x76\x1d\x28\xad\x7a\x36\xcf\x9c\x18\xbd\xeb\xc7\x98\x10\xbc\x28\x96\x35\x75\xd3\x7a\x0d\xa8\xfb\x2a\xde\x22\x58\xf2\xd5\xc3\x54\x75\x57\x74\x5a\xe1\xf5\x75\xf8\x16\xa9\x69\x26\xe9\x1b\xab\xdb\x4d\x6c\xc5\x72\x29\x66\x05\x45\xf9\x44\x38\xc6\x60\xf8\x17\xa9\x9e\xec\x15\xfe\xb5\x6a\x12\xb4\x0e\xc9\x25\x81\x79\xa3\x17\x21\xfb\x12\x08\x15\xdb\xed\xbc\x5f\x9a\x63\x8e\x10\x34\xe8\x11\x07\x32\x85\xe8\x08\x1b\xbf\xb4\xed\x44\x00\x8d\x49\x6b\x97\x67\x76\x6c\xd9\x5f\xd3\x3d\x43\xe1\x1c\x69\x38\x62\x8e\x57\x7d\x4d\xc5\x8f\xa4\xc4\xc1\x9d\xe4\x97\x07\xfa\xe4\xeb\xe7\xfa\x06\xc1\x8e\x31\x32\xa7\xdb\x55\x1a\x0a\xf6\xef\xd9\xe5\xb3\x96\x95\x66\x6d\xe4\x07\x5d\x8e\x91\xe4\xa5\xaf\x34\xbd\xa3\xa9\xf1\xd4\x00\x6e\x66\x99\x52\xb4\x28\xee\x05\x7c\x45\x0b\xcc\x17\x20\x69\x70\xff\x3b\x4b\x6c\x9c\x6e\x19\x66\x64\x7a\x41\xa3\xf6\x22\x9b\xec\x02\x73\x04\x1d\xd5\x44\x98\x96\x45\x91\x79\xfd\x06\xd1\x0e\x3f\x77\xa9\x3b\xd1\xca\x78\xcf\x6b\x87\x79\x92\x48\xc2\xd5\xcc\xb0\x38\xda\xc6\x10\x91\x5a\xec\xcd\xbc\x4e\xd1\x9a\xf1\x8e\x04\x1f\xc3\xc3\xef\xd2\xda\xf3\x14\x0a\x65\x38\xf2\x14\xd2\x84\xa1\x54\x26\xa9\x9d\x6c\x06\x71\x4e\xd6\x0c\x1c\x14\x9c\xc0\x6e\x96\x97\x9e\x87\xee\x5d\xc8\x93\xc4\x6f\x57\x6b\x63\x85\x4c\x2d\xe0\x2b\xd7\xee\xed\xd6\x8e\x76\xef\xb5\x3c\x76\x58\xeb\xf0\xb1\x3f\x72\x71\xc6\x76\x05\x70\xa3\xa6\xec\x9a\x4e\x21\x37\xcb\x3e\x8b\x71\x20\x39\x7b\x37\x57\xa9\xd3\x17\xfb\xe0\xff\xbb\xa8\x73\xf3\xcf\xc7\x04\x69\x11\xec\x56\xf9\x55\xaf\x3a\x71\xa6\xfb\x36\x1a\xee\xba\xc0\xef\x40\xb8\xa9\x36\x23\xd7\xed\x02\x4e\x6b\x24\xf5\x71\x64\x1a\xeb\xe7\xe9\xbb\x7b\x76\xf0\x1d\x34\x3e\xa0\x70\xb1\xc6\xbd\x67\x72\xd2\x8d\x76\x4f\x44\x34\x67\xce\x64\xf4\x7d\x06\x23\xde\x44\x82\xd9\xa7\x47\x5e\x0a\x07\xf6\x28\xa9\x1f\x36\xa4\x7a\x05\x06\xbb\x69\xf1\x02\x2f\x75\x42\xed\xa4\x18\xbd\x7b\x4e\x43\xb9\x21\xa3\x8c\x38\x47\xe7\xfa\x7c\xdd\x4f\xe0\x92\x49\x91\xd3\x0b\xc1\xef\x64\x3c\x92\xff\x3b\x1a\x07\x8a\xde\x91\xaa\x4c\x37\xda\x68\x0f\xd0\x7d\x68\x7e\x1a\x19\x4b\x22\x93\x8b\xca\x6c\x39\xe2\x59\xe5\xd7\xe7\xdf\x50\xb2\x36\x22\x56\x6b\x27\x7b\xc0\xd7\x24\x06\x6a\x27\x94\xbb\x42\x43\x47\x9e\x81\xd4\xd6\x4c\xab\x3e\x56\xd9\x45\xee\xb2\xc2\x3b\x1e\x1e\x46\x37\x40\xe8\xb0\x53\x29\x6d\x09\x19\x2f\xb2\x6e\xef\x17\x78\x99\xa6\xa6\x29\xe8\x94\xf8\x69\xae\xc1\xca\x6b\xf7\xd8\x9d\xdd\xba\x63\xbb\xa6\xab\x19\xce\xb3\x15\x5a\x23\x90\x14\xdd\x3d\x0f\x2b\xfc\x56\xef\x55\x2f\x48\xa8\x0b\xc4\xe8\x99\x55\xbb\xee\x62\xa1\xa8\x6c\xfa\x55\x6d\xf1\x1b\x27\xf4\x76\x5b\xab\xab\x8f\x1e\xa0\x9d\x89\x58\x1b\x34\xb8\x01\x3a\xca\x1d\xc2\xda\x46\xfb\xa1\xb9\xa6\xb8\x36\x79\x67\x6b\xd1\x25\x5f\x84\xb0\xf9\xeb\x0c\xae\xcd\x5f\x91\xad\xee\x42\x75\x30\x92\xad\x4a\x67\x14\x16\xb8\xc0\x4b\xd5\xbf\xa5\xc8\xd0\xba\x94\xa4\xd2\xe5\x0c\xcd\xee\x98\x3f\x8f\x2d\x63\xd6\xe1\x31\x7b\x29\x40\x72\x91\x97\xc8\x68\xa9\x11\x4a\x66\x3c\x52\xa9\xa0\x89\x86\x12\xc6\xfe\x4e\x30\x6a\xa6\xec\x5e\xa9\x32\xc1\x64\x85\xb2\x5b\xb7\x38\xa1\x2b\x08\xd7\x2b\x8a\xd8\x8a\x94\xb2\xb2\x74\x62\x2b\x94\x64\xe2\x9d\xec\xd2\x93\x44\xa8\x21\xcd\x53\xd7\xa0\x24\xd7\x90\x2e\xc3\x9d\x57\x5e\xd9\xce\x40\xd7\x18\x34\xb0\xdd\xa6\x51\x0d\x8d\x6d\xcc\x26\xd0\xd0\xa8\x08\xe5\xb1\xda\x9e\x39\x23\xe4\x2b\xc7\xc4\xf9\xa7\xb6\x0e\xff\xd5\x48\x43\x02\x16\xf0\x07\xbc\x0a\x72\xb3\x4b\x77\x0d\x99\x34\x8d\xa7\xdf\xd2\x6f\x59\xce\x5d\xb1\x73\x14\x3c\x5d\x31\xdd\x87\x1d\x2f\x39\xed\xb0\x72\xfc\xfe\xfe\xcd\x46\xed\x6c\x46\x99\xf0\x7a\xa1\xfb\x13\x13\xb8\x61\xd7\x8b\x3b\xbf\x0c\x36\x86\x46\xbd\xa7\xe9\x08\xf6\x76\x91\xa1\x5e\x5f\x8b\x73\x2e\x40\x98\x73\x1d\x1e\x35\x71\xa8\x74\xf2\xc8\x7c\x31\x70\x9c\x35\x9f\x5f\x1a\xbc\x6a\x9c\xec\xf7\x93\x85\xa7\x05\x51\xd3\xdd\x07\xfa\x5c\x32\xfc\x0a\xba\xdb\xaf\xfa\x6d\xe3\x97\x48\x13\xf0\x9e\x1b\xd8\xdf\xb0\xf7\x0f\x7d\xbb\x36\x50\xcc\xb4\x7b\x8b\x95\xc3\xb1\xf0\x04\x9b\xae\xe5\xa0\x26\x5e\xb2\xc0\x8d\x57\xa1\xe3\x70\xce\x69\x71\x53\x73\xb5\xe0\xc8\x61\x58\x43\xcc\x2e\x32\x80\x95\x6a\x0a\x77\xe5\x1f\xae\x6c\xbd\x13\x10\x67\xff\x30\xdd\xc1\xf7\xfc\x1d\xe4\xf5\x39\x0f\x5d\x61\xf9\xba\xf2\x6c\xfd\xb9\x7c\x3d\x21\xe4\xb6\x40\x73\x5e\x64\xb7\x05\x46\x8c\xb5\xf1\x83\x58\x95\x2d\x5d\xb8\x90\xf5\xd3\x87\xc4\x62\x4b\xb0\xac\xbc\x01\x7b\xa4\xbd\xb1\x64\x4a\xdf\xec\x6d\xad\x05\xe8\x94\x3b\x74\x2d\xb8\xed\xe8\x6d\x0f\xb5\x76\xc6\xc2\x5b\x7f\x8c\x03\xd0\x71\xab\x15\x8c\x91\x0c\xec\x4a\xcb\x03\x3d\xc2\x46\xef\x9c\x6c\x10\x99\x50\x82\xff\x4a\x6e\x98\xdf\x03\x2b\xa2\x28\xec\x5c\xc3\xd8\x75\x09\x23\x9a\x08\xef\x79\x01\x63\x8f\x96\xfe\x9e\xcb\x17\x5e\x03\xd7\xae\x8b\x17\xdf\xe6\xda\xc5\x23\x2e\x5d\x44\xce\x21\x4d\x4b\x1a\xbf\x6c\x11\xb5\xb2\x76\x58\x67\x6f\x16\x2d\x5f\xf7\xc4\x6b\xe7\xf5\x8a\x3d\x2f\x57\xf4\x5e\x85\x09\xf7\x09\xec\x71\x1d\xc6\xe4\x69\x82\x32\x96\xce\x6a\x7c\x0d\xd9\x6d\x18\xd4\xbe\xaa\x11\x04\x31\x53\xdb\x88\xb9\x3e\xa5\xb8\x3d\x3c\x08\x83\x00\x45\x4b\x66\x9e\x61\xee\x88\xea\xad\xc1\x90\xe2\x14\x7e\x65\xa9\x40\x12\xf1\x03\xc0\xb7\x9c\xed\x25\x8c\xf8\x88\xe4\x11\xe8\x4e\xb3\x8c\xd4\x98\x5f\xe4\x3b\x30\xea\x55\x1e\xf5\x60\x6e\xfb\xc0\x26\x97\x1f\xe6\xd7\xe7\xb3\x24\xd2\x17\x00\x9a\x74\x22\xf8\x2e\xf4\xd4\x7f\x16\x8a\x96\x9e\xaf\x5b\x61\x61\x25\x25\x59\xb2\x74\x42\x11\xe4\xa8\xed\xb2\x8a\xf8\x6d\x1b\x74\xce\x29\x82\xeb\x5e\xd8\x69\xcd\x2f\xc9\xf2\xfc\x0e\x61\xce\x82\x4d\x14\xbb\x54\x3c\xd2\xc7\xd4\x28\x97\x9c\xa4\xe7\x2a\xcf\x50\xf5\x8c\xf4\x69\x05\x48\x04\x96\x43\x79\x29\x39\x3d\x82\x5f\x59\x73\x51\xe7\x47\xff\x72\x8e\xfa\xf3\x2f\x94\xce\xbf\x8e\xe5\x81\xb3\x90\x4e\x5b\x8c\x33\x64\x90\xa4\x71\xc6\xb9\x61\x7a\xd4\x5b\x18\x91\x80\x1f\x07\x68\x67\xdd\x5e\x17\x8b\x39\xec\xe8\xbd\x32\xb7\x8a\xd7\xba\xfe\xdd\xd5\xba\xa4\x41\x66\xb4\x11\x58\xfd\xa4\x87\x22\x0c\x32\x7a\x51\x0f\x45\x54\x62\xba\x35\xef\x4a\xd7\x4a\x3f\x30\x60\x7a\x2e\x6c\x35\xa4\x06\xcf\xed\x7b\xef\x69\x19\x25\x8d\x3f\x8d\xad\x2a\x94\x77\x91\x2e\xf9\x7b\x51\xbd\x29\xca\x80\x36\x24\x9f\xb1\x5f\xcc\x19\xd4\x0c\x01\xc6\x69\x91\xf1\xc1\x2f\xae\xef\xbd\x83\x14\xc0\xaf\x0c\xbc\x02\x14\xfd\x5e\x17\x14\x1d\x0c\xe0\x57\x76\xc8\xf2\xdb\xc1\xcb\x20\x30\xca\x04\x30\x46\x5f\xc5\xb0\xd1\xf9\x64\x7e\xb0\x59\xc3\xfb\x19\xe2\xb4\x40\x2c\x3d\x1e\x6f\xc3\xc3\x84\xf2\x1b\xe3\x26\x25\xa9\xf3\xdf\x20\xcf\x56\x97\x64\xc9\x0e\xc2\x63\xb4\xd9\x07\xaf\xc0\x20\x60\xdd\xbd\xb5\x44\x8c\x91\x9e\x5d\xee\x05\x81\xca\x32\x38\x66\xe3\x2a\x48\x06\xbf\x04\x7b\x26\x7b\x10\xeb\x8b\x85\x1e\x5e\xe3\x06\x41\x14\xad\x44\xc0\xad\x1e\x0c\xc1\xa2\x8d\xbb\x2c\xff\x80\xca\xbf\x31\xb2\x83\x54\xf1\x4a\xf0\xb0\x51\xfb\x41\xea\xd0\xdb\x55\xf0\x7a\xda\x43\xc4\x52\x86\x61\x0e\x05\x6b\x3a\x6a\xda\x41\x3a\x18\xb8\xd2\xf5\x9a\x9e\xd0\x7d\x25\x12\xc7\x66\xb7\x81\x57\x60\xa1\x77\xf2\x01\x12\xb6\x72\x08\x32\x82\x39\xba\xe7\x2f\x3d\xfe\xc8\x59\xa4\xba\xa8\xe6\x7b\xf0\x0a\xc8\x21\x23\xfd\x7b\x44\x51\x55\xc2\x0c\x1d\x1c\xfd\xc7\xbf\x1d\x7c\xfe\x9c\xff\xf4\xf2\x97\xa3\xe5\xb0\xc3\xbf\x16\x5a\x38\x04\x39\xca\x22\xb8\x01\xa0\x88\xd7\x14\x03\x75\xd6\x3f\x5a\x50\xb2\x9e\xac\x20\x15\x3b\xf3\x40\x0c\xf3\x94\x57\xfc\x27\xb0\x0f\x1a\x42\x55\x1b\x46\x40\xd4\x49\xf3\x0f\xc6\x21\xe5\x28\x7f\xfd\x90\x82\x81\xb0\x50\x83\x61\x0c\xd2\xd6\x9f\xd4\xd5\xa7\x4f\x8a\x15\xba\xe1\xe4\x4b\x14\x8d\xde\x6a\x69\xf3\x8f\x38\xa0\x70\xcd\x29\x38\x8e\x02\x90\x3b\x44\x69\x91\x23\x96\xc6\x97\xa7\x10\xe9\xc6\xac\xf7\xdd\x80\x4f\x7d\x03\x80\x54\x6f\x0c\xd7\x28\xb5\x16\x35\x6c\x04\x9f\x7e\x02\x03\xb6\x1a\x0c\xc1\xe0\x30\x1b\xb4\x4f\x85\xb2\xf6\xa1\xfd\x12\x7b\x19\x1c\xb5\x8d\x0a\x95\xdd\xa2\xaf\xe0\x15\xb8\x82\x7c\x35\x5a\x94\x84\xd0\x03\xf9\x4f\x2a\xdb\x3d\x0e\x5e\xfe\x78\x3c\x1e\x8f\xc7\x61\x9d\x28\xc9\xf2\xc0\x5a\x12\xf8\x09\x0c\xd2\x01\xf8\xa9\x35\x2f\x3f\x81\xc1\x91\xd0\x03\x39\xcb\x2b\xf1\x46\x4e\xf7\x13\x18\xac\x59\xb3\x50\xf9\xd8\xd2\x7c\x43\xc9\x11\xa5\x51\xed\x96\xb2\x60\xa4\x44\x23\x41\xc8\x00\x51\x7a\x32\x18\x02\x31\x22\x48\xad\xf8\xc3\x10\xd7\xee\xea\xa0\x9d\xe2\x25\xd8\x08\xe7\x30\xa2\x2a\x3d\x3a\x50\x5a\xde\x6e\xdc\x51\x4e\x30\x7a\x29\x8c\x88\x20\x7d\xef\x3d\xe3\x33\xbc\x99\x50\xb2\x6d\x8d\x18\x83\x4b\x34\x04\xd9\x4d\x8f\x65\x60\x32\x2e\x13\x46\x5a\x30\xf1\x50\x30\xea\x40\x78\xa2\x33\xc8\xd1\xc1\xcb\x97\xa3\xa5\x5a\x4e\xc0\x0d\x81\xbd\xb7\x6c\xe3\x62\x84\xfd\x4c\xdb\x5f\xd1\x6d\x52\x36\xd1\xa2\x82\x67\xa1\xc8\x51\xf1\x24\xa2\x31\x6c\x94\xd9\x61\x67\xcb\xf0\x27\x0a\x7d\x97\xcc\xf7\x63\x83\xa6\x4e\x05\xb8\x7b\xed\x68\x2d\xc2\x14\xb4\xb2\x14\x31\x12\xe3\x70\x5d\xa5\x11\x31\xed\xd8\xd1\x51\xa6\x83\xc7\xcb\x09\x3c\x46\x56\x20\x26\x2f\xe0\xf0\x5b\x2f\x35\xce\x6c\x29\xe0\xca\xc8\x15\xba\xed\x74\x13\xdb\x3b\xbe\x93\x35\x0b\x3c\x56\xc8\x1f\x38\xcb\x77\x3a\x6c\x74\xc8\xb1\xa3\x2a\x27\x42\x8a\xf9\x8a\x50\xae\xa3\x86\x59\xdd\x53\xa1\xd3\x3a\x91\x4a\xa0\x9d\x91\xbc\x11\xc1\x8f\x2e\x09\x5e\x36\x01\x3b\xcb\x56\x28\xaf\xed\x6f\xad\xcc\xf5\xb3\xf3\xfb\x8a\x22\xd6\x54\x8a\x24\x71\xfa\x8d\xd3\x93\xa4\xce\x42\xbd\x82\xb9\x8c\xd9\xa3\x81\x7d\x97\xa8\x44\xee\xa9\x5e\xe4\x01\x82\xf5\xb1\xab\x73\x72\x5b\xe9\xb3\xcb\xcf\xcd\x2d\xe4\xcf\x49\x0a\x3e\xcb\xb1\xba\x36\x0e\xb6\xdb\xcf\xc9\x10\x7c\x4e\xb4\x31\xef\x00\xf4\x25\x43\x09\x60\xc8\x38\x54\x93\x0d\x88\x48\xa5\x5d\x53\x44\xd7\x05\x63\xa1\xfc\x0c\xb8\x09\x9a\x01\x1b\x92\x1a\xb0\x6b\xab\x59\xdb\xb2\xa8\x12\xf5\xf4\x02\xdf\x91\x5b\x14\xfa\x7a\x88\x95\xac\x81\x27\xf2\xdd\x28\x9b\x8a\x49\xa5\x03\x64\x4e\xa1\xd4\x54\x15\x99\x47\x4b\x34\xd1\x0e\x42\x4f\xa3\x8d\x89\xfb\x36\x4e\xb8\xee\x1d\xfc\xce\xa8\xba\xcb\xae\x0a\x21\x6f\x21\x3b\x9f\x98\xdf\xbb\x92\x44\xbd\xa7\x56\xd5\xa1\xef\xa3\xa1\x5e\x51\xa5\x66\x87\x08\x32\x2e\x3f\x79\x60\xf6\x4a\x3c\x05\xc7\xc9\xf3\x70\x7c\x45\xcf\xa7\x43\xe2\x78\x0e\x1d\xa8\x3e\xcc\x10\xe6\x14\x96\xcf\x22\x05\xd5\xcf\x5f\x0e\xac\x0e\x31\xa1\x7c\xf5\x6c\xf9\xc0\xea\x90\x91\xfa\x5b\x23\x92\x5c\xd6\x78\xbe\xf4\x7d\x3c\x21\xf4\xa5\x95\x4e\xa9\xc5\x9b\xc0\x37\x14\x03\x1f\x1c\x98\x19\x60\x4d\xf5\xc8\x6c\xfd\xb2\xb6\x88\x06\x08\x7e\x89\x20\xec\x48\x9e\xff\x05\x02\xe3\x5b\x90\xde\xfd\x10\xaf\x3b\xf2\x45\x63\x1b\x76\xf3\xcd\xf9\x74\x46\xc3\x35\xd5\x14\xb0\x2f\x23\xbc\xaf\x6b\x78\x05\xd4\x17\xda\x4a\xf5\x8a\xe5\x31\x13\xb9\xec\x0b\xe0\x1d\x7a\x4c\xd3\x96\x33\xca\x15\xe7\x13\x3c\xd6\x15\x98\xf0\x77\x3e\xdc\xe3\xbe\x88\xf8\xf7\x3a\xea\x8b\x9e\x1b\x39\x87\x59\xd1\x62\xb0\x7b\xd0\x66\xbd\x76\x2f\xfe\xf4\xd7\x9d\xed\x53\x40\x77\x1e\xe3\x4c\xd0\x79\xa5\xce\x83\x1c\xbf\xe7\xc0\xec\x55\xd0\x35\x7c\x65\xf8\xd4\xad\xf1\x80\x5d\x2c\x10\x3b\x25\x0c\x9f\x11\x5a\x01\x97\x7d\x3e\x68\xdd\x7c\xf2\xc1\xe2\x1f\xca\xfb\xf6\xdf\xc0\xeb\x2d\xfc\x27\x48\x75\xb2\x96\x04\xe6\x37\x6d\x27\xab\x6a\xad\xbe\x41\x91\x63\xbf\xc8\x18\x65\x10\x10\x6d\x1a\x28\xd8\x1b\x4a\xd6\xc1\x9e\xd8\xdd\xd8\x66\x2e\xae\xdf\x0a\xbe\xda\x03\x57\x76\xb2\x93\xf8\xec\x24\x3d\xad\xf9\x8a\xd0\xe2\x0f\x14\xec\xf2\xf6\x46\x85\xba\x44\x8c\x73\x8c\x20\x5f\x7f\x0c\xa0\x71\x9e\x38\xb7\xea\x82\x4a\x6c\x7a\xb0\x1d\xf6\xd8\xfc\xb8\x97\xff\xcd\x2c\xdb\xe6\xcc\x7f\x4e\x53\xfd\xfd\x3a\x6d\x74\xce\x50\x89\x84\x9e\xb4\x0d\x22\xc9\x0c\x71\x58\xe0\x1d\x46\x49\x7e\x76\x7a\x42\x30\xa7\xaa\x61\xcd\xed\x00\x4e\xae\xa1\x73\x31\x7b\xd3\x7c\x4a\x26\x61\x0f\x8c\xa3\xb5\xb0\xb1\x6d\x9b\x8e\xfe\x64\x1e\xb0\x23\x00\x0d\x0f\xab\xca\x04\xee\x71\x5e\x21\xb6\x19\x5c\xfb\xff\x00\x00\x00\xff\xff\x96\xb8\x21\x52\x3a\x60\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

