// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xb8\xdc\xc9\x9e\x91\x65\xd9\x73\xb3\x77\xcb\xb9\x5c\x95\x23\x3b\x33\xda\xb5\x13\x9d\xe4\x24\x75\x9b\xa4\xb6\x68\x12\x92\xb8\xa6\x00\x0e\x00\x39\xf6\xa8\xf4\xdf\xaf\xf0\x20\x89\x27\xa5\xd8\x4e\xed\x79\x6b\x27\x36\xd9\x68\x34\xfa\x85\xee\x46\x83\x9b\x0d\xc8\xd1\xbc\xc0\x08\xc0\xb4\xaa\x20\xd8\x6e\x5f\x00\xb0\xd9\x80\x97\x69\x55\x81\xe4\x15\x18\x9c\x55\x55\xfb\x70\x95\xe2\x62\x8e\x18\x97\x6f\xae\xea\x3f\xd4\xeb\x17\x00\x00\x00\xcf\x3e\xce\xae\xd1\xaa\x2a\x53\x8e\xde\x10\xba\x4a\xf9\x07\x44\x59\x41\x30\x04\x09\x80\xa7\xc3\x93\xe1\xd1\xf0\xcf\x47\xc3\x3f\xc3\xbe\x02\x1f\x11\x9c\x17\xbc\x20\x98\xc1\x44\xa3\x90\x33\x71\x8d\x03\xc0\x9b\xb4\x4c\x71\x86\xe8\x51\xd6\x82\xba\x73\x7b\x83\x2a\x4a\x32\xc4\xd8\xae\x31\x70\x8c\x39\xa2\x38\x2d\xc5\xe4\x00\xbe\xc1\x49\x72\xf1\xfb\x3a\x2d\x05\x31\x9f\xc4\x93\x29\x9a\xc3\xc4\x00\x03\xdb\x3e\x80\xff\x8b\x18\x04\x5f\xc0\xb6\x5f\x63\x99\xd0\xe2\x2e\xe5\x68\x07\x92\x1a\x2a\x8c\xe3\x75\x99\xe2\xdb\x19\xca\xd6\xb4\xe0\x0f\xbf\x52\xb2\xae\x04\xc7\x36\x26\x3a\x90\x80\x4f\x1b\x89\x4d\xf0\xd2\x86\x15\x38\xe1\x17\xb5\x2e\x8d\x14\x4e\x52\x9a\xae\x10\x47\x54\x0e\xed\x66\x6e\x25\x60\xbf\x81\xb1\x41\xf8\x7a\x2d\xa3\x72\xcd\x38\xa2\x86\x44\x01\x80\xd7\x0f\x15\x52\x84\x73\x5a\xe0\x05\xec\xb7\xaf\xce\xd1\x3c\x5d\x97\x5c\xbe\xb5\x9f\xb3\x8c\x16\x15\xaf\xd5\x07\xea\x57\x2d\xd7\x46\x6b\xc6\xc9\xea\x9a\x54\x45\x36\x5d\x63\x5e\xac\x50\x60\xd2\xce\x39\x13\x00\x31\xc9\xd1\x3f\x58\x6c\xe2\xe0\xbc\xe7\xa8\x2a\xc9\xc3\x0a\x61\x7e\x95\xde\x17\xab\xf5\x2a\x3c\xed\xdb\xf5\xea\x06\xd1\xc8\xb4\xa7\xc3\x61\xc7\x9c\x1a\x2f\xa8\x10\xcd\x10\xe6\xe9\x02\x01\x32\x07\x9a\xfd\x88\x01\x4e\xc0\x2d\x42\x15\xa0\x6b\x8c\x0b\xbc\x00\x5f\x97\x45\x89\x40\x2e\xe9\x12\x4b\xed\x22\xb9\xc0\x8f\x24\xf9\xe7\x4e\x8a\x15\xda\xe7\xa3\xf8\x02\xdf\x15\x94\x60\x41\xf2\x23\xa4\xfa\x4d\xf2\x34\xfd\xc0\x7e\xf3\x58\x08\xdf\xe1\xf2\x01\xa4\x65\x49\xbe\x82\x34\x13\xcb\x15\x8b\xe5\xcb\x82\x01\xe1\x45\xe7\x94\xac\x40\x81\x59\x91\x23\xc0\x97\x08\x7c\x98\x8c\x22\x34\xbf\x25\xe6\x8b\x33\x81\x10\xe5\x1f\xd2\x72\x8d\x94\x33\x91\x6e\xa3\x2f\xe1\xc0\x17\x6f\x11\x7f\x45\x0f\xdf\x9b\x4f\x86\xa7\x7b\x04\x9b\xde\x33\x04\x66\xeb\x1b\x8c\x38\xd3\x88\x04\x9f\x58\x85\xb2\x62\xfe\x20\xd8\x72\x24\x79\x54\x92\x34\x07\xb5\x67\x02\x08\xe7\x15\x29\x30\x67\xdf\x85\x67\x53\x54\xa2\x94\x85\x16\xf4\xdc\xae\x6a\x8a\x2a\xc2\x0a\x4e\x68\x48\x48\x4f\x9b\x6c\x46\xd6\x34\x43\x20\x23\x39\x02\xb4\x9d\xc6\x23\xc1\xde\x32\x9e\x9b\x8a\xeb\x25\x02\x97\x96\xe8\x98\x9e\x0f\x2c\xc4\x84\x60\x4e\x68\x63\x14\x01\xe2\x94\x62\x44\xc8\xba\x2c\x18\xff\xaf\xb3\x8f\xb3\x24\xb9\x18\x9d\x26\x89\x02\x4e\x92\x71\xfe\xdf\x8f\x21\xf5\xc3\x64\x04\x98\x9a\x6f\x3f\xaa\xe2\x7a\xff\x7d\x88\xab\xb4\x79\xec\x47\xe4\x75\xca\x6e\xa7\xa4\x7c\x7e\x2d\x1e\x9f\x5d\x01\x81\x58\x98\x69\x5a\x55\xe5\x83\xf8\xe5\x62\x34\x03\x62\x46\x26\xdc\x7b\x9c\xa8\x3a\xee\xb3\x68\x72\x1c\xc2\xc1\xf4\xe2\x7f\xde\x8f\xa7\x17\xe7\x87\xe0\x32\x5d\xdd\xe4\x29\x30\x36\x74\xf0\x5b\x8a\xf3\x12\x51\xa0\x6d\x14\xd4\x18\x0d\x82\xaf\x0a\x7c\x89\xf0\x82\x2f\x25\xb9\x27\xe6\x2b\xc7\x2b\xf9\xf4\x4d\x46\x11\x7e\xb5\x92\xfc\x30\x19\x09\x31\x3e\x56\x8a\xdd\x52\xfb\x30\x19\x8d\xc6\xe7\xd3\x67\x17\x9a\x98\x59\x20\x0e\x4f\x6f\x45\x88\x57\x69\x55\x15\x78\x61\x1a\x1d\x9c\x10\xca\x27\x94\x70\x92\x11\x67\x3b\x5c\x72\x5e\xa9\x18\x57\x28\x3c\xc2\x88\x1a\x70\xf0\xb7\xeb\xeb\x89\xf0\xb3\x63\xcc\xb8\x30\xff\xd0\x3b\xe9\x80\x50\x0c\x62\x06\x5b\xee\xe8\xe9\x58\xf7\x7c\xb3\x27\x4f\x68\xcd\xc8\xb3\x8e\xf5\x5d\x8f\xa2\xcb\xd3\xaf\xe2\x93\xcd\x66\x97\xee\x54\x65\xc7\xd2\x04\xf8\xd3\xa6\x02\xdb\xa0\xbc\xa7\x88\xc9\xad\xc2\x12\xb8\x19\x43\x87\x9d\x48\x6d\x13\xe3\xb3\xab\x24\x91\x30\xc6\x4a\x26\x94\x54\x88\xf2\x02\xd9\xae\x5b\xec\xc5\x8c\xad\x57\x48\xc0\x4f\x48\x59\x64\x0f\xe7\x24\x5b\x7b\xc1\x9c\xe3\x2b\x44\x8a\x78\x7a\x74\x32\x3c\x3a\xf9\x0f\x63\x12\x09\x34\xe3\x29\x47\x7a\xfc\x27\xeb\x15\x70\xf0\x49\xf0\x8b\xf9\x1c\x65\x32\x42\x90\x31\x81\x83\x4d\x93\x5e\xe0\xac\xa8\xea\xf4\x6f\x86\xe8\x5d\x91\x21\x15\x35\x94\xd2\x1f\x0d\xd2\x55\xfa\x07\xc1\xe9\x57\x36\xc8\xc8\xca\xca\xd8\xcc\x85\x66\xda\xa1\x7d\x02\x90\x71\x96\xb4\x0b\x6f\x43\x8e\xfa\x67\x6b\xfd\x6d\xbe\xb5\x30\xc3\x49\xca\x97\x82\xf8\xe3\x8c\xe0\x3b\x72\x7f\x0c\xed\xb7\x82\xa1\x8a\xe5\x36\x2b\x5c\x46\x28\xc8\x87\xb7\xe9\x4a\x89\x31\x5f\x15\xb8\x60\x9c\xa6\x9c\x50\x8f\x25\x70\x87\x9c\xc0\xbe\xb2\x02\x9e\xbc\x04\x7f\x3d\x89\x18\x9c\x83\x3f\x88\x3f\x6b\xfd\x54\x0f\xc0\x76\x07\xf7\xcc\xbf\x5a\xc8\x6d\x57\x96\xd8\xa1\xdd\x6a\x07\x4a\x92\x37\x6b\xac\xa8\xda\x4b\xc9\x47\x24\x47\xbe\x42\xcf\x7e\x7a\xbd\xce\x6e\x11\x6f\x4b\x02\x7f\x21\x85\xd6\x90\x23\xd8\x17\xff\x28\xb9\xc2\xbe\x51\x21\x90\x64\x4c\xd1\x42\x7a\xf2\x2d\xf8\xe2\xab\x1b\x9c\xfd\xa4\xa3\x7c\x17\xab\x42\x4a\xd5\x56\x79\x6c\xa1\x6d\x2a\x30\xdb\x3e\x80\xc7\x4a\xb1\x8f\xe7\xb2\x38\x53\x10\x3c\xf8\xa3\xa8\xa0\x9a\x2b\xaa\x8c\x7a\x27\x16\xc8\x0a\x9c\xa3\xfb\x01\xba\xd7\xf9\x92\x05\x76\x85\x56\x84\x3e\xcc\x8a\x3f\x24\x53\x4f\x4e\xff\xd3\x7e\x5d\x7b\x17\x45\xfa\xaf\x88\x9f\x71\xa5\x1b\x9e\x0b\x12\x9a\x41\xb1\x67\x6e\xd0\xc8\xf1\x9b\xd5\x05\x4a\x00\xce\xa8\xeb\x62\x85\xc8\x5a\x2a\xde\x4f\xc3\x21\x8c\x2b\x4a\xb8\x34\x42\x1b\xa7\x09\x06\x91\xaa\x48\x46\x09\xfe\x07\xb9\xd9\x07\xb4\x2e\xa0\x98\xa0\x7b\xd6\x5c\x98\xf2\x4f\x1d\xc8\x29\x5a\x08\xe3\x7e\x88\x62\x0f\x0d\xaa\xa3\x74\x18\x41\xca\xb8\xaa\x5a\xd9\x5b\xc9\xbb\x35\xaf\xd6\x7c\x77\xd5\x8e\x68\x38\x30\xe8\x5e\x5c\x0b\xb7\x83\x1b\xcd\x1a\xc3\x23\xda\x5c\x87\x73\x27\xb4\x11\xce\x4b\xe4\x85\x96\xfa\x34\x70\xee\x96\xf9\x42\xfc\x7f\xb3\x11\xf9\xa7\xc4\x6b\x14\x4a\x43\xd5\xc5\xba\x44\x4a\x53\xbc\x40\xe0\xe5\xad\xac\x90\x5e\x60\x4e\xa5\xef\x65\xf5\x62\xe0\x05\x4e\x6f\x4a\x94\x6f\x36\x60\x5d\x55\x88\x0a\xc8\xed\xb6\xb5\x8a\xb7\x44\x9a\x44\xb0\x8e\x28\x9e\xcc\x50\xa9\x7c\xe8\x27\x30\x34\x6d\xdc\xc6\xf7\xa6\x36\x6e\xe5\x46\x84\xdd\x1f\x9d\x48\x73\xd2\x16\xd5\xae\xab\x7b\x85\x75\x99\xcf\x59\x1d\x8a\xad\xae\x25\x03\x59\x64\x18\xe1\x46\xed\x73\x47\x64\xb5\x4a\xcf\x51\x59\xac\x0a\x8e\x72\x11\x06\x41\xa3\x56\xd5\xa4\xf7\x27\xfd\x61\xff\xf4\xe7\x3f\x99\xef\xac\x14\x42\xd5\xab\xbc\x4a\x13\x5d\xe3\x3e\x18\x4d\xde\x83\x35\x2e\xb8\x7a\x82\x84\xfd\xa0\x3e\x48\x71\x0e\xae\x5e\x8b\x11\xd3\xb3\x2b\xe3\x0d\x6c\xf5\x7b\x5f\xf6\x34\x2a\x28\xd7\x0f\x2f\xc9\xc2\x4e\xad\x03\xfa\xd6\xc0\x28\x0d\xeb\xef\x98\xc1\x30\xe4\xd8\x1c\xf6\x26\x46\x16\x4c\xfe\x57\x01\xed\x33\x45\xeb\x56\xf6\x2a\xf3\x47\x8e\x06\x8a\x79\x3b\x6c\xf0\x5b\xca\x26\x8d\x34\xb4\x6e\x38\xda\xd3\x02\xeb\xb0\x8b\x19\x65\x79\x43\x8d\x06\x42\xc1\xc0\x76\x7b\x31\x9a\x89\xa4\xf3\x5c\x10\x5f\xf0\x40\x62\x59\x21\x9c\xb3\x77\x72\x37\xb4\x36\xfc\x7e\x13\xd8\xc9\xad\xe5\x4b\x20\x45\x54\xe0\x22\xe7\x73\xe7\x30\x80\x8d\xb8\xe7\x64\x30\xdc\x2f\x38\x30\x13\xf3\x46\x03\x9a\x87\xce\x36\xa5\xa9\xbc\x26\xb7\x08\xef\xdc\x26\xa3\x5b\xa4\x8e\xf4\x22\x51\x87\x13\x6b\xcc\x78\x9a\xdd\xca\x11\xd2\x47\x08\xd9\x36\x0c\x87\x7e\xfc\x61\x56\xcb\x1a\x44\xf5\x33\x07\xd4\x29\xde\x36\xe0\xe6\x73\x67\x48\x13\xd9\x68\x50\xf1\xb7\xbb\x95\xa7\xec\x76\x8f\xa0\xb7\x0e\x77\xed\x05\x79\xe1\xee\x78\x95\x2e\x0c\x38\xf9\x67\x08\x70\xb3\x11\xda\x8d\x06\xd2\x65\xe1\x7c\x70\x46\x69\xfa\xb0\xdd\xfa\x21\xaf\x06\x08\x24\x28\xc0\xb2\x00\x19\x44\xf5\xc1\x4b\x54\xca\x00\x59\xda\xc3\x6e\xf4\x26\x31\x12\xc3\x76\xdb\xdf\x6c\x50\xc9\xd0\x76\xbb\xd9\x20\x9c\x47\xc7\xc0\xcd\xa6\x9e\x6b\xbb\x85\x41\xd2\xc2\xc3\xbf\xf8\xac\x10\xf3\x09\x6b\xc7\xc8\xa4\x59\x95\x2b\x00\x84\xdd\x6c\xd9\x6c\xc0\x9d\x70\x89\x81\xa1\x5b\x2f\xb3\x0a\x13\x05\x47\xd5\xba\x55\x70\x63\x3f\x3c\x09\xef\x87\x8d\xfc\xbd\x4d\xd1\x45\xac\xc2\xd7\x20\xee\xd3\xa7\xe2\x8e\x9d\x65\x34\x00\x67\x93\x49\xad\x89\xc2\xaf\x46\x95\x56\x58\xe1\xd9\xe8\xaf\x1a\x16\xe1\x3b\xfd\x77\x04\xf6\xec\xe3\xec\xef\xd3\x8b\x5f\xc7\xef\xde\x9a\x23\x8c\xa7\xe1\x71\x46\x20\x83\x1e\xfa\xe0\xa5\x12\x9a\x52\x53\x63\x29\x20\x20\x6d\xa9\x9f\x42\x39\xd4\x18\x08\x43\x40\xda\xc9\x0b\xec\x3a\xfc\x69\x14\x43\xfd\xe3\x6b\x43\x5c\x49\xdb\xed\x6d\xef\x65\x0c\x2e\x0b\x7c\xfb\x21\xa5\x2c\x4c\x9c\x47\x5b\x27\x55\xb1\xd9\xe1\xe5\xbb\x5f\xff\xfe\xeb\xf4\xdd\xfb\x49\x2c\x02\x08\xd5\x24\xa6\xef\x46\x17\xb3\x99\xef\xbd\xdc\x4c\xd8\x53\xb1\x0f\xa4\x5c\xaf\x02\x25\x01\x9b\x11\x68\x70\x45\xd6\x98\x8b\x20\x54\x0f\x08\xb3\x40\x6d\xe9\x83\x31\x9b\x3d\x30\x8e\x56\x11\x21\x0a\x22\x07\xbf\x11\xc6\xb7\xdb\x64\xb3\x19\x8c\x08\xe6\x69\x81\x11\x0d\x2a\x95\xe2\x95\x70\x1f\x11\x64\x91\xa4\xf6\xf8\x4e\x11\x7a\xec\x27\xcb\xce\x06\x76\x2c\xfc\x9c\xe4\x98\xf0\x88\x11\xc2\x42\x79\x75\x4b\x5e\x54\x91\x62\x6f\x40\x73\x22\x2f\x29\x7a\x4b\x54\xcc\x07\x5c\x50\xcf\x95\xc2\x8b\x7b\x4e\x53\x41\xe3\x2e\x99\x05\x6c\xb0\x19\x7a\x95\x56\x11\x01\x86\xe5\x25\x06\x99\xdb\xa3\xd6\xf2\x10\x3b\xc4\x0e\x59\x9d\xe5\x39\x45\x8c\xd5\xe0\xb5\x1d\x84\x36\x91\x6f\x32\x8e\x27\xf0\xad\x0e\x18\xc3\x5c\x7b\x3c\xde\x09\xa1\xdc\xa8\x88\x77\x48\x64\x20\x40\x3b\x0d\x47\x24\x19\x07\xe8\x77\x30\xa8\x6b\xb3\xaa\xba\x7c\x08\x0e\x5e\x22\x11\x1e\xbf\xd6\xf9\xf1\xe1\xde\xb6\x90\x08\x63\x88\xc5\x04\x5d\x7b\x93\xa0\x75\xb3\x01\x83\x7a\x4a\xb0\xdd\x0a\x25\x08\xba\x1f\xcd\x09\x01\xde\x98\x0c\xd8\x6e\x8f\xc5\x83\x66\x25\x61\xe9\x83\x6e\xbb\xea\x30\x7b\xe8\x50\x97\xec\x9c\xfe\xff\x81\xf1\x4e\x68\x71\x57\x94\x68\x81\xf2\xd6\x55\xb7\xcf\x3c\x1e\xed\x5b\xaa\xd4\xba\x1d\x10\xa3\x9d\xef\x34\x7d\x53\x2a\xa6\x76\x6a\x0a\xa1\x98\xd7\x4e\x91\x5e\x58\xec\x51\xe1\xad\xa1\x96\x2e\xb3\xa0\x99\x15\x36\xb2\xaa\xcb\xb5\x72\xb2\x48\xa0\x1d\x62\xbe\x9d\xc8\x04\x72\x20\x99\x1e\xbd\x08\x71\xdf\xce\x76\x2f\x46\x62\x0f\xd0\x65\xfb\xfd\xca\xb5\x6d\x6b\x52\x5b\x41\xd4\xcf\x9c\x5c\xa3\x6d\x98\x19\x11\x3c\x2f\x16\x6b\xea\xd6\x32\x34\xa0\x6e\x7c\xf9\x0d\xa5\x25\x5f\x3e\x4c\x54\xfb\x4b\xab\x15\x5e\xe3\x8d\xaf\xc1\x75\xb7\x4f\xd7\x58\xdd\x0f\x64\x2b\x96\x4b\x31\x2b\x28\xca\x47\x62\x83\x0f\x86\xb1\x91\x92\xd1\x5e\x61\xec\x5e\x6a\x72\x49\xd2\xbc\x7e\x19\xf2\xa1\x81\xc0\xb7\x31\xf4\xfd\x92\x36\x73\x84\xf0\x6c\x7a\xc4\x81\x4c\x88\xa4\x11\x4a\xd7\x3c\x3c\xb4\x3c\x48\x08\x8d\x49\x6b\x9b\x35\xb7\xcc\xd9\x5f\xdf\x3d\x77\xe1\x1c\xf2\x38\xc2\x8e\xd7\xc1\x4d\xf5\x8f\x24\xf8\x41\x7b\xf2\x2b\x23\x5d\x52\xf6\xcb\x1c\x06\xc1\x8e\x4b\x32\xa7\xdb\x55\x15\x0b\x76\x6a\xda\x95\xc3\x86\x95\x66\x59\xe8\xa5\xae\x44\x49\xf2\x92\x57\x9a\xde\xc1\xc4\x78\x6a\x00\xd7\xb3\x4c\x28\x9a\x17\xf7\x02\xbe\xa2\x05\xe6\x73\x00\x6b\xdc\xff\xca\xa0\x8d\xd3\xad\x40\x0d\xcc\x9d\xde\x28\x3b\xc9\x1e\xcc\xc0\x1c\xc1\x3d\x74\x24\x1c\xcc\xbc\xc8\xbc\xb6\x90\x68\x03\xa8\xbb\xd4\x9d\x68\x65\x4c\xeb\x75\x2d\x3d\x4a\x24\xe1\x42\x6e\x58\x1c\x4d\xff\x8e\x48\x94\xf6\x66\x5e\xab\x68\xf5\x78\x47\x82\xdf\xc2\xc3\xef\xd2\x81\xf5\x18\x0a\x65\xa4\xf4\x18\xd2\x84\xbb\x54\x2e\xa9\x99\x6c\x9a\xe2\x9c\xac\x18\x38\x28\x38\x49\xdb\x59\x0e\xbd\x7d\xba\x73\x21\x8f\x12\xbf\x5d\xa8\x8e\xd5\x70\xb5\x80\xaf\x5c\xbf\xb7\x5b\x3b\x1a\xdb\x6b\x78\xec\xb0\xd6\xe1\x63\x77\xfc\xe2\x8c\x6d\x6b\xff\x46\x39\xdd\x75\x9d\x42\x6e\x96\x7f\x16\xe3\x00\x3c\x7f\x3b\x53\xe9\xe1\x17\xbb\x15\xe2\xbb\xa8\x73\xfd\xeb\xb7\x84\x6a\x11\xec\x56\xe5\x59\xaf\xda\x8d\x93\x9f\x47\xc3\xdd\x2d\xf0\x3b\x10\x6e\xaa\xcd\xc0\xdd\x76\x01\xa7\x6b\x24\xf5\x71\x60\x3a\xeb\xa7\xe9\xbb\x7b\x6c\xf2\x1d\x34\x3e\xa0\x70\xb1\xfe\xca\x27\x72\xd2\x8d\x79\x4f\x45\x4c\x67\xce\x64\xb4\xe7\x06\xe3\x5e\x28\xc1\xec\x83\x33\x2f\xbf\x04\x7b\x1c\x10\x1c\xd5\xa4\x7a\x45\x14\xbb\xb7\x74\x8c\x17\xba\x68\xe0\x24\x1a\x9d\x36\xa7\xa1\xdc\x90\x51\x15\xa2\x26\xeb\x9b\xb2\xc8\xfc\x24\x0e\x8e\x8a\x9c\x8e\x05\xb7\xe1\x70\x20\xff\x77\x3c\x0c\x14\xf0\x23\x09\x68\x3b\xda\x68\x97\xd0\x7d\x79\x7e\x2e\x1b\x4b\x24\xe1\xb8\x32\x5b\xb0\x76\x65\xab\xf0\x0d\x25\x2b\x23\x76\xb5\x6c\xda\x03\xbe\x26\x31\x50\x3b\xc1\xdc\x15\x24\x3a\x92\x0d\xa4\xba\x66\x9a\xf5\xa1\xca\xc6\xb9\xcb\x16\xef\x8c\xbc\x1f\x35\x85\xd0\x89\xaf\x52\xdf\x32\x65\xbc\xc8\x5a\x2f\x50\xe0\x45\x92\x98\x4e\xa1\x55\xe7\xc7\x6d\x12\x56\x9e\xbb\x87\x9d\xb6\xeb\x8e\xd9\x8f\x52\x41\xf4\x3b\x18\xcc\xb2\x25\x5a\x21\x00\x8b\xf6\x42\x90\x15\x88\xab\xf7\xaa\x4f\x26\xd4\x21\x63\x34\x39\x2b\xfb\x1b\xcf\x15\x95\x75\x83\xb1\x2d\x7e\xa3\x4d\xc1\xee\x43\x76\x75\xd3\x03\xb4\x73\x12\xcb\x54\x83\xc6\xd0\x52\xee\x10\xd6\xdc\x8c\xe8\x9b\x6b\x8a\x6b\x93\x77\x66\x18\x5d\xf2\x38\x84\xcd\x5f\x67\x70\x6d\xfe\x8a\x6c\x75\x17\xaa\x83\x91\x6c\xe3\x3a\xa7\x69\x81\x0b\xbc\x50\xbd\x6d\x8a\x0c\xad\x4b\x30\x91\x9b\x4f\xdf\x6c\x11\xfa\xd3\xd0\x72\x6b\x2d\x1e\xb3\xa1\x04\xc0\x71\x5e\x22\xa3\xaf\x48\x28\x99\xf1\x48\x25\x85\x26\x1a\x4a\x18\xfb\x1b\xc1\xa8\x9e\xb2\x7d\xa5\xca\x06\xa3\x25\xca\x6e\xdd\x62\x85\xae\x28\x5c\x2f\x29\x62\x4b\x52\xca\x4a\xd3\xa9\xad\x50\x92\x89\x77\x69\xe3\x77\xd4\x90\xfa\xa9\xeb\x50\xe0\x75\x4a\x17\xe1\xae\x34\xaf\xba\x68\xa0\x33\x9c\x59\x12\xd5\xd0\x98\x61\xd6\x21\x87\x46\x45\x28\x8f\x15\x20\xcd\x19\x53\xbe\x74\x5c\x9c\x7f\x1a\xed\xf0\x5f\x8d\x34\x24\x60\x01\xbf\xc7\xcb\x20\x37\xdb\xc4\xd7\x90\x49\xdd\x94\xfb\x9c\x3b\x98\xb5\xcd\x2b\x76\x0e\x82\xa7\x46\xce\x56\x62\x44\x4e\x4e\xab\xb0\x1c\xbf\xff\x5e\x67\xa3\x76\x8c\x51\xa6\xbe\x5e\x10\xff\xc8\x54\xae\xdf\xf6\x29\xcf\x2e\x83\x4d\xb3\xd1\x9d\xd4\xdc\x08\xf6\xde\x22\x43\x7d\xd0\x16\xe7\x5c\x80\x30\xe7\x5a\x3c\x6a\xe2\x50\x11\xe5\x1b\x33\xc7\xc0\x31\xdd\x6c\x76\x69\xf0\xaa\xde\x64\xbf\x9f\x2c\x3c\x2d\x88\xba\xee\x2e\xd0\xa7\x92\xe1\x57\xd4\xdd\x5e\xde\xe7\x8d\x5f\x22\x0d\xd2\x7b\x1a\xb0\x6f\xb0\xf7\x0f\x5d\x56\x1b\x28\x6b\xda\x7d\xd7\x6a\xc3\xb1\xf0\x04\x1b\xd2\xe5\xa0\x3a\x5e\xb2\xc0\x8d\x57\xa1\x63\x7e\xce\x69\x71\xb3\xe6\x6a\xc1\x91\xa3\xbf\x9a\x98\x5d\x64\x00\x2b\xe9\x14\xdb\x95\x7f\xde\xb3\xf5\x4e\x44\x1c\xfb\x61\xba\x8d\xf1\xe9\x16\xe4\xf5\x80\xf7\x5d\x61\xf9\xba\xf2\x64\xfd\xb9\x7c\x3d\x22\xe4\xb6\x40\x33\x5e\x64\xb7\x05\x46\x8c\x35\xf1\x83\x58\x95\x2d\xdd\x74\x2e\x2b\xa9\x0f\xd0\x62\x4b\xb0\xc0\xbc\x01\x7b\x24\xc0\xb1\xb4\x4a\x5f\x01\x6f\xbc\x05\x68\x95\x3b\x74\x7f\xbc\x69\x6b\x6e\x0e\xb9\x76\xc6\xc2\x5b\x7f\x8c\x03\xd0\x72\xab\x11\x8c\x91\x0c\xec\x4a\xd0\x03\x8d\xd2\x46\x03\xa1\x6c\x7c\x19\x51\x82\xff\x42\x6e\x98\xdf\x08\x2c\xa2\x28\xec\x5c\x51\xd9\x75\x41\x25\x9a\x12\xef\x79\x39\x65\x8f\xeb\x0e\x1d\x17\x53\xbc\xc6\xb4\x5d\x97\x52\x9e\xe7\x4a\xca\x37\x5c\x48\x89\x9c\x4b\x9a\x9e\x34\x7e\x11\x25\xea\x65\xed\xb0\xce\x36\x16\x2d\x5f\xf7\x04\x6c\xe7\xd5\x93\x3d\x2f\x9e\x74\x5e\x13\x0a\x77\x45\xec\x71\x55\xc8\xe4\x29\x44\x19\x4b\xa6\x6b\x7c\x9d\xb2\xdb\x30\xa8\x7d\x8d\x25\x08\x62\xa6\xb6\x11\x77\x7d\x46\x71\x73\x8c\x10\x06\x01\x8a\x96\xcc\x3c\xd3\xdc\x11\xd5\x5b\x83\x53\x8a\x93\xf4\x2b\x4b\x04\x92\xc8\x3e\x00\x7c\xcf\xd9\x5c\x50\x89\x8f\x80\xdf\x80\xee\x2c\xcb\xc8\x1a\xf3\x71\xbe\x03\xa3\x5e\xe5\x71\x07\xe6\xa6\xbf\x6d\x74\xf9\x7e\x76\x7d\x31\x85\xd1\x56\x05\xe0\x5d\x78\x69\x7f\x42\x4f\xfd\x67\xa1\x68\xe9\xe9\xba\x15\x16\x16\x2c\xc9\x82\x25\x23\x8a\x52\x8e\x9a\xee\xb1\xc8\xbe\x6d\x83\xce\x38\x45\xe9\xaa\x13\x76\xb2\xe6\x97\x64\x71\x71\x87\x30\x67\x21\x66\x05\x36\x7a\x5b\xc5\x23\x5d\x5b\xb5\x72\xc9\x49\x3a\xae\x39\xf5\x55\x6b\x4b\x97\x56\x00\x28\xb0\x1c\xc9\x5b\xe4\xc9\x71\xfa\x95\xd5\x97\x98\x7e\xf0\x2f\x2e\xa9\x9f\x7f\xa2\x74\xfe\x79\x2c\x0f\x9c\x8a\xb4\xda\x62\x9c\x26\x03\x98\xc4\x19\xe7\x86\xe9\xd1\xdd\xc2\x88\x04\xfc\x38\x40\x6f\xd6\xcd\x55\xba\xd8\x86\x1d\xbd\x73\xe7\x56\xf1\x9a\xad\x7f\x77\xb5\xce\xbf\xad\xb6\xd4\x0f\x8c\x9d\xab\xe3\x2e\x5a\x3d\x53\xf0\x00\xde\xb8\x82\xa6\xbf\x1b\xf3\xef\x83\x9f\xac\x6b\xe7\x4d\x51\xe2\xe7\xa1\x55\x47\xf2\xae\x09\xc2\xbf\x15\xd5\x9b\xa2\x0c\xc8\x13\x7e\xc6\x7e\x39\xa6\xb7\x66\x08\x30\x4e\x8b\x8c\xf7\x7e\x71\x77\xcf\xbb\x94\x82\xf4\x2b\x03\xaf\x00\x45\xbf\xaf\x0b\x8a\x0e\x7a\xe9\x57\x76\xc4\xf2\xdb\xde\x61\x10\x18\x65\x02\x18\xa3\xaf\x62\xd8\xe0\x62\x34\x3b\xd8\xac\xd2\xfb\x29\xe2\xb4\x40\x2c\x39\x19\x6e\xc3\xc3\x84\xfa\x1a\xe3\x46\x25\x59\xe7\x1f\x53\x9e\x2d\x2f\xc9\x82\x1d\x84\xc7\x68\xc7\x0d\x5e\x81\x5e\xc0\x3f\x7b\x6b\x89\xb8\x13\x3d\xbb\xd4\x66\x81\xca\x72\x19\x66\x4b\x2d\x80\xbd\x5f\x82\x3d\x9e\x1d\x88\xf5\xb5\x49\x0f\xaf\x71\xb7\x21\x8a\x56\x22\xe0\x56\x3f\x85\x60\xd1\xc6\x5d\x96\x7f\xd8\xe4\x5f\x7c\xd9\x41\xaa\x78\x25\x78\x58\xe7\x09\xbd\xc4\xa1\xb7\xad\xc1\x75\xb4\x7a\x88\xa5\xf4\xc3\x1c\x0a\x56\x65\xd4\xb4\xbd\xa4\xd7\x73\xa5\xeb\xb5\x31\xa1\xfb\x4a\xa4\x7e\xb5\xc1\x81\x57\x60\xae\x0d\xfb\x00\x09\x6f\xd7\x07\x19\xc1\x1c\xdd\xf3\x43\x8f\x3f\x72\x16\xa9\x2e\xea\x5a\x00\x78\x05\xe4\x90\x81\xfe\x7b\x40\x51\x55\xa6\x19\x3a\x38\xfe\xb7\x7f\x39\xf8\xfc\x39\xff\xf1\xf0\x97\xe3\x45\xbf\xc5\xbf\x12\x5a\xd8\x07\x39\xca\x22\xb8\x01\xa0\x88\xaf\x29\x06\xea\xdc\x7e\x30\xa7\x64\x35\x5a\xa6\x54\x58\xe6\x81\x18\xe6\x29\xaf\xf8\x4f\xc0\x0e\x6a\x42\x55\x4b\x45\x40\xd4\xb0\xfe\x85\xf1\x94\x72\x94\xbf\x7e\x48\x40\x4f\x64\x3e\xbd\x7e\x0c\xd2\xd6\x9f\xc4\xd5\xa7\x4f\x8a\x15\xba\x79\xe4\x4b\x14\x8d\x36\xb5\xa4\xfe\x25\x0e\x28\x36\xd7\x04\x9c\x44\x01\xc8\x1d\xa2\xb4\xc8\x11\x4b\xe2\xcb\x53\x88\x74\x93\xd5\xbb\x76\xc0\xa7\xae\x01\x40\xaa\x37\x4e\x57\x28\xb1\x16\xd5\xaf\x05\x9f\x7c\x02\x3d\xb6\xec\xf5\x41\xef\x28\xeb\x35\x4f\x85\xb2\x76\xa1\xfd\x12\x7b\x19\x1c\xb5\x8d\x0a\x95\xdd\xa2\xaf\xe0\x15\xb8\x4a\xf9\x72\x30\x2f\x09\xa1\x07\xf2\x57\x2a\x5b\x37\x0e\x0e\x7f\x38\x19\x0e\x87\xc3\xb0\x4e\x94\x64\x71\x60\x2d\x09\xfc\x08\x7a\x49\x0f\xfc\xd8\xb8\x97\x1f\x41\xef\x58\xe8\x81\x9c\xe5\x95\x78\x23\xa7\xfb\x11\xf4\x56\xac\x5e\xa8\x7c\x6c\x69\xbe\xa1\xe4\x88\xd2\xa8\x76\x4b\x59\x30\x52\xa2\x81\x20\xa4\x87\x28\x3d\xed\xf5\x81\x18\x11\xa4\x56\xfc\x30\xc4\xf5\x76\x75\xd0\x4c\x71\x08\x36\x62\x73\x18\x50\x95\xe0\x1c\x28\x2d\x6f\x0c\x77\x90\x13\x8c\x0e\x85\x13\x11\xa4\xef\x6d\x33\x3e\xc3\xeb\x09\x25\xdb\x56\x88\xb1\x74\x81\xfa\x20\xbb\xe9\xf0\x0c\x4c\x46\x56\xc2\x49\x0b\x26\x1e\x09\x46\x1d\x88\x9d\xe8\x3c\xe5\xe8\xe0\xf0\x70\xb0\x50\xcb\x09\x6c\x43\x60\x6f\x93\xad\xb7\x18\xe1\x3f\x93\xe6\xaf\xa8\x99\x94\x75\xbc\xa7\xe0\x59\x28\xf6\x53\x3c\x89\x68\x0c\x1b\x64\x76\xe0\xd8\x30\xfc\x91\x42\xdf\x25\xf3\xfd\xd8\xa0\xa9\x53\x21\xea\x5e\x16\xad\x45\x98\x80\x46\x96\x22\x4c\x62\x3c\x5d\x55\x49\x44\x4c\x3b\x2c\x3a\xca\x74\xf0\xed\x72\x02\xdf\x22\x2b\x10\x93\x17\x70\xf8\xad\x97\x1a\x67\xb6\x14\x70\x65\x44\xfb\xad\x39\xdd\xc4\x6c\xc7\xdf\x64\xcd\x12\x8d\x15\xb4\x07\x4e\xe3\x9d\x6e\x19\x1d\x72\xec\xa8\xab\x89\x90\x62\xb6\x24\x94\xeb\xa8\x61\xba\xee\xa8\xb1\x69\x9d\x48\x24\xd0\xce\x58\xdc\x68\xea\x1d\x5c\x12\xbc\xd0\x33\x1c\xb1\x6c\x89\xf2\xb5\xfd\x25\x99\x99\x7e\x76\x71\x5f\x51\xc4\xea\x5a\x8f\x24\x4e\xbf\x71\xfa\x8b\xd4\x69\xa6\x57\xf2\x96\x61\x7b\x34\xb6\x6f\x53\x8d\xc8\x0d\xda\x71\x1e\x20\x58\x1f\x9c\x3a\x67\xaf\x95\x3e\x7d\xfc\x5c\x5f\xa6\xfe\x0c\x13\xf0\xb9\x6e\x00\x91\x7b\xc0\x76\xfb\x19\xf6\xc1\x67\xa8\x9d\x79\x0b\xa0\xaf\x3f\x4a\x00\x43\xc6\xa1\xaa\x6a\x40\x44\x2a\x71\x9a\x20\xba\x2a\x18\x0b\x65\x58\xc0\x4d\xb1\x0c\xd8\x90\xd4\x80\x5d\x1d\xcd\x9a\xf6\x43\x95\x6a\x27\x63\x7c\x47\x6e\x51\xe8\xdb\x28\xf5\x33\xd5\x26\xf4\x48\xbe\x1b\x85\x4f\x31\xa9\xdc\x00\x99\x53\xea\x34\x55\x45\x66\xc2\x12\x4d\xb4\x1b\xd0\xd3\x68\x63\xe2\x2e\xc3\x09\x57\xae\x43\x9f\xd6\x50\x37\xf2\xa7\xfa\x4d\xe0\x03\x7f\x81\x1b\xe6\x53\x03\x4c\xcb\x36\x78\xb3\x3c\x6c\x51\x4f\xbf\x24\x6e\x7c\x87\xd0\x6b\x7a\xf7\x5a\xbe\x5e\xd4\x4c\x8a\x7e\x44\xc0\xff\x1a\x87\xcd\x14\x75\xbe\xa9\xd7\xe9\x7d\x0c\xc1\x2b\xf5\xbc\xd0\xd2\xe8\x64\x6a\x47\x17\x68\x60\x58\xdf\x5b\xb2\x56\x80\xe8\x9a\x9c\x0f\xa2\x58\x5d\xf9\xe1\xaf\x2e\xb8\xe7\x0e\x11\xe1\xed\x75\xe6\x10\x2d\x60\x3b\x55\xf5\x68\x55\xca\xad\xf8\x5b\xaf\xdd\xbb\x08\xdd\x05\x30\xfb\x38\xc2\x9d\xc7\x38\x9c\xf0\xea\x48\x50\xc4\x90\xb6\xf9\x3e\xa6\xb2\x64\x98\x7c\xb8\xfc\x5f\x1b\x72\xeb\xd2\x62\xc7\x15\xe1\xc3\x0a\x6b\xdf\xb0\x0f\x2a\xac\xcb\x18\x3e\x58\xfc\x6b\x66\xcf\xff\xa1\xb2\xce\x0a\x24\x44\xaa\xa5\xae\x24\x69\x7e\xd3\xb4\xd4\xa9\x6e\xcf\x1b\x14\x39\x7f\x88\x8c\x51\xe6\x8c\x68\x7d\x92\xcb\xde\x50\xb2\x0a\x36\xe7\xed\xc6\x36\x75\x71\x7d\x2c\xf8\x72\x0f\x5c\xd9\xe9\x4e\xe2\xb3\xd3\xe4\x6c\xcd\x97\x84\x16\x7f\xa0\x60\xe3\xa9\x37\x2a\x74\x5c\x6d\x14\x54\x83\x7c\xfd\x21\x80\xc6\x79\xe2\x5c\xf4\x09\x2a\x71\xfd\xdb\x97\xdd\xde\xd4\xfc\xd4\x92\xff\x05\x23\xdb\xe7\xcc\x7e\x4a\x12\xfd\x91\x31\xed\x74\xce\x51\x89\x84\x9e\x34\x27\xd5\x70\x8a\x44\x72\xbe\xc3\x29\xc9\x0f\x16\x8f\x08\xe6\x54\x75\xce\xb8\xad\x88\xf0\x3a\x75\xee\xc3\x6e\xea\x6f\x75\x40\x26\x2f\x87\x0b\x1f\xdb\xf4\x0b\xe8\xef\x9a\x59\xfd\x79\x0d\x7c\x5a\x55\x26\x70\xc7\xd6\x13\x62\x9b\xc1\xb5\xff\x0b\x00\x00\xff\xff\x15\xf6\x0a\x40\xb7\x5e\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

