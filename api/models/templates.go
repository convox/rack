// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x3c\xfd\x73\xdb\x38\x76\xbf\xe7\xaf\xc0\xa0\x69\x65\xef\xca\xb2\xec\xed\xb6\x3d\x6e\xd3\x19\x47\x76\x76\x75\x67\x27\xaa\xe4\x24\xd3\x4b\x32\x37\x34\x09\x49\x3c\x53\x00\x17\x80\x1c\x7b\x35\xfa\xdf\x3b\xf8\x20\x89\x4f\x4a\xb6\x93\xb9\x4b\xa7\x7b\x16\xf9\xf0\xf0\xf0\xbe\xf0\xde\xc3\x03\x37\x1b\x90\xa3\x79\x81\x11\x80\x69\x55\x41\xb0\xdd\xbe\x00\x60\xb3\x01\x2f\xd3\xaa\x02\xc9\x2b\x30\x38\xab\xaa\xf6\xe1\x2a\xc5\xc5\x1c\x31\x2e\xdf\x5c\xd5\x3f\xd4\xeb\x17\x00\x00\x00\xcf\x3e\xce\xae\xd1\xaa\x2a\x53\x8e\xde\x10\xba\x4a\xf9\x07\x44\x59\x41\x30\x04\x09\x80\xa7\xc3\x93\xe1\xd1\xf0\x4f\x47\xc3\x3f\xc1\xbe\x02\x1f\x11\x9c\x17\xbc\x20\x98\xc1\x44\xa3\x90\x33\x71\x8d\x03\xc0\x9b\xb4\x4c\x71\x86\xe8\x51\xd6\x82\xba\x73\x7b\x83\x2a\x4a\x32\xc4\xd8\xae\x31\x70\x8c\x39\xa2\x38\x2d\xc5\xe4\x00\xbe\xc1\x49\x72\xf1\xfb\x3a\x2d\x05\x31\x9f\xc4\x93\x29\x9a\xc3\xc4\x00\x03\xdb\x3e\x80\xff\x87\x18\x04\x5f\xc0\xb6\x5f\x63\x99\xd0\xe2\x2e\xe5\x68\x07\x92\x1a\x2a\x8c\xe3\x75\x99\xe2\xdb\x19\xca\xd6\xb4\xe0\x0f\xbf\x52\xb2\xae\x04\xc7\x36\x26\x3a\x90\x80\x4f\x1b\x89\x4d\xf0\xd2\x86\x15\x38\xe1\x17\xb5\x2e\x8d\x14\x4e\x52\x9a\xae\x10\x47\x54\x0e\xed\x66\x6e\x25\x60\x1f\xc1\xd8\x20\x7c\xbd\x96\x51\xb9\x66\x1c\x51\x43\xa2\x00\xc0\xeb\x87\x0a\x29\xc2\x39\x2d\xf0\x02\xf6\xdb\x57\xe7\x68\x9e\xae\x4b\x2e\xdf\xda\xcf\x59\x46\x8b\x8a\xd7\xea\x03\xf5\xab\x96\x6b\xa3\x35\xe3\x64\x75\x4d\xaa\x22\x9b\xae\x31\x2f\x56\x28\x30\x69\xe7\x9c\x09\x80\x98\xe4\xe8\xef\x2c\x36\x71\x70\xde\x73\x54\x95\xe4\x61\x85\x30\xbf\x4a\xef\x8b\xd5\x7a\x15\x9e\xf6\xed\x7a\x75\x83\x68\x64\xda\xd3\xe1\xb0\x63\x4e\x8d\x17\x54\x88\x66\x08\xf3\x74\x81\x00\x99\x03\xcd\x7e\xc4\x00\x27\xe0\x16\xa1\x0a\xd0\x35\xc6\x05\x5e\x80\xaf\xcb\xa2\x44\x20\x97\x74\x89\xa5\x76\x91\x5c\xe0\x27\x92\xfc\x73\x27\xc5\x0a\xed\xb7\xa3\xf8\x02\xdf\x15\x94\x60\x41\xf2\x13\xa4\xfa\x28\x79\x9a\x7e\x60\xbf\x79\x2c\x84\xef\x70\xf9\x00\xd2\xb2\x24\x5f\x41\x9a\x89\xe5\x8a\xc5\xf2\x65\xc1\x80\xf0\xa2\x73\x4a\x56\xa0\xc0\xac\xc8\x11\xe0\x4b\x04\x3e\x4c\x46\x11\x9a\xdf\x12\xf3\xc5\x99\x40\x88\xf2\x0f\x69\xb9\x46\xca\x99\x48\xb7\xd1\x97\x70\xe0\x8b\xb7\x88\xbf\xa0\x87\xef\xcd\x27\xc3\xd3\x3d\x81\x4d\xef\x19\x02\xb3\xf5\x0d\x46\x9c\x69\x44\x82\x4f\xac\x42\x59\x31\x7f\x10\x6c\x39\x92\x3c\x2a\x49\x9a\x83\xda\x33\x01\x84\xf3\x8a\x14\x98\xb3\xef\xc2\xb3\x29\x2a\x51\xca\x42\x0b\xfa\xd6\xae\x6a\x8a\x2a\xc2\x0a\x4e\x68\x48\x48\xcf\x9b\x6c\x46\xd6\x34\x43\x20\x23\x39\x02\xb4\x9d\xc6\x23\xc1\xde\x32\xbe\x35\x15\xd7\x4b\x04\x2e\x2d\xd1\x31\x3d\x1f\x58\x88\x09\xc1\x9c\xd0\xc6\x28\x02\xc4\x29\xc5\x88\x90\x75\x59\x30\xfe\xdf\x67\x1f\x67\x49\x72\x31\x3a\x4d\x12\x05\x9c\x24\xe3\xfc\x7f\x9e\x42\xea\x87\xc9\x08\x30\x35\xdf\x7e\x54\xc5\xf5\xfe\xfb\x10\x57\x69\xf3\xd8\x8f\xc8\xeb\x94\xdd\x4e\x49\xf9\xed\xb5\x78\x7c\x76\x05\x04\x62\x61\xa6\x69\x55\x95\x0f\xe2\x8f\x8b\xd1\x0c\x88\x19\x99\x70\xef\x71\xa2\xea\xb8\xcf\xa2\xc9\x71\x08\x07\xd3\x8b\xff\x7d\x3f\x9e\x5e\x9c\x1f\x82\xcb\x74\x75\x93\xa7\xc0\xd8\xd0\xc1\x6f\x29\xce\x4b\x44\x81\xb6\x51\x50\x63\x34\x08\xbe\x2a\xf0\x25\xc2\x0b\xbe\x94\xe4\x9e\x98\xaf\x1c\xaf\xe4\xd3\x37\x19\x45\xf8\xd5\x4a\xf2\xc3\x64\x24\xc4\xf8\x54\x29\x76\x4b\xed\xc3\x64\x34\x1a\x9f\x4f\xbf\xb9\xd0\xc4\xcc\x02\x71\x78\x7a\x2b\x42\xbc\x4a\xab\xaa\xc0\x0b\xd3\xe8\xe0\x84\x50\x3e\xa1\x84\x93\x8c\x38\xdb\xe1\x92\xf3\x4a\xc5\xb8\x42\xe1\x11\x46\xd4\x80\x83\xbf\x5d\x5f\x4f\x84\x9f\x1d\x63\xc6\x85\xf9\x87\xde\x49\x07\x84\x62\x10\x33\xd8\x72\x47\x4f\xc7\xba\xe7\x9b\x3d\x7b\x42\x6b\x46\x9e\x75\xac\xef\x7a\x14\x5d\x9e\x7e\x15\x9f\x6c\x36\xbb\x74\xa7\x2a\x3b\x96\x26\xc0\x9f\x37\x15\xd8\x06\xe5\x3d\x45\x4c\x6e\x15\x96\xc0\xcd\x18\x3a\xec\x44\x6a\x9b\x18\x9f\x5d\x25\x89\x84\x31\x56\x32\xa1\xa4\x42\x94\x17\xc8\x76\xdd\x62\x2f\x66\x6c\xbd\x42\x02\x7e\x42\xca\x22\x7b\x38\x27\xd9\xda\x0b\xe6\x1c\x5f\x21\x52\xc4\xd3\xa3\x93\xe1\xd1\xc9\x7f\x1a\x93\x48\xa0\x19\x4f\x39\xd2\xe3\x3f\x59\xaf\x80\x83\x4f\x82\x5f\xcc\xe7\x28\x93\x11\x82\x8c\x09\x1c\x6c\x9a\xf4\x02\x67\x45\x55\xa7\x7f\x33\x44\xef\x8a\x0c\xa9\xa8\xa1\x94\xfe\x68\x90\xae\xd2\x3f\x08\x4e\xbf\xb2\x41\x46\x56\x56\xc6\x66\x2e\x34\xd3\x0e\xed\x13\x80\x8c\xb3\xa4\x5d\x78\x1b\x72\xd4\xff\xb6\xd6\x6f\xf3\xad\x85\x19\x4e\x52\xbe\x14\xc4\x1f\x67\x04\xdf\x91\xfb\x63\x68\xbf\x15\x0c\x55\x2c\xb7\x59\xe1\x32\x42\x41\x3e\xbc\x4d\x57\x4a\x8c\xf9\xaa\xc0\x05\xe3\x34\xe5\x84\x7a\x2c\x81\x3b\xe4\x04\xf6\x95\x15\xf0\xe4\x25\xf8\xeb\x49\xc4\xe0\x1c\xfc\x41\xfc\xac\xf5\x53\x3d\x00\xdb\x1d\xdc\x33\x7f\xb5\x90\xdb\xae\x2c\xb1\x43\xbb\xd5\x0e\x94\x24\x6f\xd6\x58\x51\xb5\x97\x92\x8f\x48\x8e\x7c\x85\x9e\xfd\xf4\x7a\x9d\xdd\x22\xde\x96\x04\xfe\x4c\x0a\xad\x21\x47\xb0\x2f\xfe\x47\xc9\x15\xf6\x8d\x0a\x81\x24\x63\x8a\x16\xd2\x93\x6f\xc1\x17\x5f\xdd\xe0\xec\x27\x1d\xe5\xbb\x58\x15\x52\xaa\xb6\xca\x63\x0b\x6d\x53\x81\xd9\xf6\x01\x3c\x56\x8a\x7d\x3c\x97\xc5\x99\x82\xe0\xc1\x1f\x45\x05\xd5\x5c\x51\x65\xd4\x3b\xb1\x40\x56\xe0\x1c\xdd\x0f\xd0\xbd\xce\x97\x2c\xb0\x2b\xb4\x22\xf4\x61\x56\xfc\x21\x99\x7a\x72\xfa\x5f\xf6\xeb\xda\xbb\x28\xd2\x7f\x45\xfc\x8c\x2b\xdd\xf0\x5c\x90\xd0\x0c\x8a\x3d\x73\x83\x46\x8e\xdf\xac\x2e\x50\x02\x70\x46\x5d\x17\x2b\x44\xd6\x52\xf1\x7e\x1a\x0e\x61\x5c\x51\xc2\xa5\x11\xda\x38\x4d\x30\x88\x54\x45\x32\x4a\xf0\xdf\xc9\xcd\x3e\xa0\x75\x01\xc5\x04\xdd\xb3\xe6\xc2\x94\x7f\xea\x40\x4e\xd1\x42\x18\xf7\x43\x14\x7b\x68\x50\x1d\xa5\xc3\x08\x52\xc6\x55\xd5\xca\xde\x4a\xde\xad\x79\xb5\xe6\xbb\xab\x76\x44\xc3\x81\x41\xf7\xe2\x5a\xb8\x1d\xdc\x68\xd6\x18\x1e\xd1\xe6\x3a\x9c\x3b\xa1\x8d\x70\x5e\x22\x2f\xb4\xd4\xa7\x81\x73\xb7\xcc\x17\xe2\xff\x37\x1b\x91\x7f\x4a\xbc\x46\xa1\x34\x54\x5d\xac\x4b\xa4\x34\xc5\x0b\x04\x5e\xde\xca\x0a\xe9\x05\xe6\x54\xfa\x5e\x56\x2f\x06\x5e\xe0\xf4\xa6\x44\xf9\x66\x03\xd6\x55\x85\xa8\x80\xdc\x6e\x5b\xab\x78\x4b\xa4\x49\x04\xeb\x88\xe2\xc9\x0c\x95\xca\x87\x7e\x02\x43\xd3\xc6\x6d\x7c\x6f\x6a\xe3\x56\x6e\x44\xd8\xfd\xd1\x89\x34\x27\x6d\x51\xed\xba\xba\x57\x58\x97\xf9\x9c\xd5\xa1\xd8\xea\x5a\x32\x90\x45\x86\x11\x6e\xd4\x3e\x77\x44\x56\xab\xf4\x1c\x95\xc5\xaa\xe0\x28\x17\x61\x10\x34\x6a\x55\x4d\x7a\x7f\xd2\x1f\xf6\x4f\x7f\xfe\x0f\xf3\x9d\x95\x42\xa8\x7a\x95\x57\x69\xa2\x6b\xdc\x07\xa3\xc9\x7b\xb0\xc6\x05\x57\x4f\x90\xb0\x1f\xd4\x07\x29\xce\xc1\xd5\x6b\x31\x62\x7a\x76\x65\xbc\x81\xad\x7e\xef\xcb\x9e\x46\x05\xe5\xfa\xe1\x25\x59\xd8\xa9\x75\x40\xdf\x1a\x18\xa5\x61\xfd\x1d\x33\x18\x86\x1c\x9b\xc3\xde\xc4\xc8\x82\xc9\xff\x2a\xa0\x7d\xa6\x68\xdd\xca\x5e\x65\xfe\xc8\xd1\x40\x31\x6f\x87\x0d\x7e\x4b\xd9\xa4\x91\x86\xd6\x0d\x47\x7b\x5a\x60\x1d\x76\x31\xa3\x2c\x6f\xa8\xd1\x40\x28\x18\xd8\x6e\x2f\x46\x33\x91\x74\x9e\x0b\xe2\x0b\x1e\x48\x2c\x2b\x84\x73\xf6\x4e\xee\x86\xd6\x86\xdf\x6f\x02\x3b\xb9\xb5\x7c\x09\xa4\x88\x0a\x5c\xe4\x7c\xee\x1c\x06\xb0\x11\xf7\x9c\x0c\x86\xfb\x05\x07\x66\x62\xde\x68\x40\xf3\xd0\xd9\xa6\x34\x95\xd7\xe4\x16\xe1\x9d\xdb\x64\x74\x8b\xd4\x91\x5e\x24\xea\x70\x62\x8d\x19\x4f\xb3\x5b\x39\x42\xfa\x08\x21\xdb\x86\xe1\xd0\x8f\x3f\xcc\x6a\x59\x83\xa8\x7e\xe6\x80\x3a\xc5\xdb\x06\xdc\x7c\xee\x0c\x69\x22\x1b\x0d\x2a\x7e\xbb\x5b\x79\xca\x6e\xf7\x08\x7a\xeb\x70\xd7\x5e\x90\x17\xee\x8e\x57\xe9\xc2\x80\x93\x3f\x43\x80\x9b\x8d\xd0\x6e\x34\x90\x2e\x0b\xe7\x83\x33\x4a\xd3\x87\xed\xd6\x0f\x79\x35\x40\x20\x41\x01\x96\x05\xc8\x20\xaa\x0f\x5e\xa2\x52\x06\xc8\xd2\x1e\x76\xa3\x37\x89\x91\x18\xb6\xdb\xfe\x66\x83\x4a\x86\xb6\xdb\xcd\x06\xe1\x3c\x3a\x06\x6e\x36\xf5\x5c\xdb\x2d\x0c\x92\x16\x1e\xfe\xc5\x67\x85\x98\x4f\x58\x3b\x46\x26\xcd\xaa\x5c\x01\x20\xec\x66\xcb\x66\x03\xee\x84\x4b\x0c\x0c\xdd\x7a\x99\x55\x98\x28\x38\xaa\xd6\xad\x82\x1b\xfb\xe1\x49\x78\x3f\x6c\xe4\xef\x6d\x8a\x2e\x62\x15\xbe\x06\x71\x9f\x3e\x17\x77\xec\x2c\xa3\x01\x38\x9b\x4c\x6a\x4d\x14\x7e\x35\xaa\xb4\xc2\x0a\xcf\x46\x7f\xd1\xb0\x08\xdf\xe9\xdf\x11\xd8\xb3\x8f\xb3\xbf\x4d\x2f\x7e\x1d\xbf\x7b\x6b\x8e\x30\x9e\x86\xc7\x19\xce\x7a\x60\x90\x0e\x82\x1a\xa6\xbc\x3f\x46\x60\x20\xb7\x3b\x00\x61\x18\x4e\x39\xf6\x66\x65\x86\x36\xe8\x81\xbe\x0a\x68\xf4\x7a\xf7\x7a\xd4\x9b\x3a\x10\x43\x0f\x7d\xf0\x52\x4d\x23\xf6\xac\xcb\x02\xdf\x7e\x48\x29\x0b\x93\x28\xf9\x7f\x8b\x1e\x1a\xfa\xf4\xc8\x10\x65\xf1\xd9\xe1\xe5\xbb\x5f\xff\xf6\xeb\xf4\xdd\xfb\x49\x6c\xeb\x0f\x15\x23\xa6\xef\x46\x17\xb3\x99\xef\xb6\xdc\x14\xd8\xd3\xad\x0f\xa4\x5c\xaf\x02\xb5\x00\xe0\x08\xf2\x8a\xac\x31\x17\xd1\xa7\x1e\xd0\x25\xcd\xc1\x98\xcd\x1e\x18\x47\xab\x0e\x51\x0e\x7e\x23\x8c\x6f\xb7\xc9\x66\x33\x18\x11\xcc\xd3\x02\x23\x1a\xd4\x26\xc5\x2b\xe1\x37\x22\xc8\x22\xd9\xec\xf1\x9d\x22\xf4\xd8\xcf\x92\x9d\x9d\xeb\x58\x38\x38\xc9\x31\xe1\x0a\x23\x84\x85\x12\xea\x96\xbc\x47\xab\x18\x68\x8e\xe2\x25\x45\x6f\x89\x0a\xf6\x80\x0b\xea\xf9\x50\x78\x71\xcf\x69\x2a\x68\xdc\x25\x33\x47\x79\x85\x31\x36\x43\xaf\xd2\x2a\x22\xc0\xb0\xbc\xc4\x20\x73\x5f\xd4\x5a\x1e\x62\x87\xd8\x1a\xab\xb3\x3c\xa7\x88\xb1\x1a\xbc\xb6\x83\xd0\xee\xf1\x28\xe3\x78\x06\xdf\xea\x48\x31\xcc\xb5\xa7\xe3\x9d\x10\xca\x8d\x52\x78\x87\x44\x06\x02\xb4\xd3\x70\x44\x76\x71\x80\x7e\x07\x83\xba\x28\xab\xca\xca\x87\xe0\xe0\x25\x12\x71\xf1\x6b\x9d\x18\x1f\xee\x6d\x0b\x89\x30\x86\x58\x30\xd0\xb5\x29\x09\x5a\x85\xc3\xad\xa7\x04\xdb\xad\x50\x82\xa0\xfb\xd1\x9c\x10\xe0\x8d\xc9\x80\xed\xf6\x58\x3c\x68\x56\x12\x96\x3e\xe8\xb6\xab\x0e\xb3\x87\x0e\x75\xc9\xce\xe9\xff\x09\x8c\x77\x42\x8b\xbb\xa2\x44\x0b\x94\xb7\xae\xba\x7d\xe6\xf1\x68\xdf\x1a\xa5\xd6\xed\x80\x18\xed\x44\xa7\x69\x98\x52\xc1\xb4\x53\x4c\x08\x05\xbb\x76\x6e\xf4\xc2\x62\x8f\x8a\x6b\x0d\xb5\x74\x99\x05\xcd\x74\xb0\x91\x55\x5d\xa7\x95\x93\x45\x22\xec\x10\xf3\xed\x0c\x26\x90\xfc\xc8\xbc\xe8\x45\x88\xfb\x76\x9a\x7b\x31\x12\x7b\x80\xae\xd7\xef\x57\xa7\x6d\x7b\x92\xda\xd2\xa1\x7e\xe6\x24\x19\x6d\xa7\xcc\x88\xe0\x79\xb1\x58\x53\xb7\x88\xa1\x01\x75\xc7\xcb\x6f\x28\x2d\xf9\xf2\x61\xa2\xfa\x5e\x5a\xad\xf0\x3a\x6e\x7c\x0d\xae\xdb\x7c\xba\xc6\xea\x46\x20\x5b\xb1\x5c\x8a\x59\x41\x51\x3e\x12\x1b\x7c\x30\x7e\x8d\xd4\x8a\xf6\x8a\x5f\xf7\x52\x93\x4b\x92\xe6\xf5\xcb\x90\x0f\x0d\x44\xbc\x8d\xa1\xef\x97\xad\x99\x23\x84\x67\xd3\x23\x0e\x64\x26\x24\x8d\x50\xba\xe6\xe1\xa1\xe5\x41\x42\x68\x4c\x5a\xdb\x74\xb9\x65\xce\xfe\xfa\xee\xb9\x0b\xe7\x74\xc7\x11\x76\xbc\x00\x6e\xaa\x7f\x24\xb3\x0f\xda\x93\x5f\x12\xe9\x92\xb2\x5f\xdf\x30\x08\x76\x5c\x92\x39\xdd\xae\x72\x58\xb0\x45\xd3\x2e\x19\x36\xac\x34\xeb\x41\x2f\x75\x09\x4a\x92\x97\xbc\xd2\xf4\x0e\x26\xc6\x53\x03\xb8\x9e\x65\x42\xd1\xbc\xb8\x17\xf0\x15\x2d\x30\x9f\x03\x58\xe3\xfe\x57\x06\x6d\x9c\x6e\xe9\x69\x60\xee\xf4\x46\xbd\x49\x36\x5f\x06\xe6\x08\xee\xa1\x23\xe1\x60\xe6\x45\xe6\xf5\x83\x44\x3b\x3f\xdd\xa5\xee\x44\x2b\x63\x5a\xaf\x5d\xe9\x49\x22\x09\x57\x70\xc3\xe2\x68\x1a\x77\x44\xa2\xb4\x37\xf3\x5a\x45\xab\xc7\x3b\x12\x7c\x0c\x0f\xbf\x4b\xeb\xd5\x53\x28\x94\x91\xd2\x53\x48\x13\xee\x52\xb9\xa4\x66\xb2\x69\x8a\x73\xb2\x62\xe0\xa0\xe0\x24\x6d\x67\x39\xf4\xf6\xe9\xce\x85\x3c\x49\xfc\x76\x85\x3a\x56\xbc\xd5\x02\xbe\x72\xfd\xde\x6e\xed\x68\x6c\xaf\xe1\xb1\xc3\x5a\x87\x8f\xdd\xf1\x8b\x33\xb6\x2d\xfa\x1b\x75\x74\xd7\x75\x0a\xb9\x59\xfe\x59\x8c\x03\xf0\xfc\xed\x4c\xa5\x87\x5f\xec\x1e\x88\xef\xa2\xce\xf5\x9f\x8f\x09\xd5\x22\xd8\xad\x92\xb3\x5e\xb5\x1b\x27\x7f\x1b\x0d\x77\xb7\xc0\xef\x40\xb8\xa9\x36\x03\x77\xdb\x05\x9c\xae\x91\xd4\xc7\x81\xe9\xac\x9f\xa7\xef\xee\x79\xc9\x77\xd0\xf8\x80\xc2\xc5\x1a\x2b\x9f\xc9\x49\x37\xe6\x3d\x15\x31\x9d\x39\x93\xd1\x97\x1b\x8c\x7b\xa1\x04\xb3\x4f\xcc\xbc\xfc\x12\xec\x71\x32\x70\x54\x93\xea\x15\x51\xec\xa6\xd2\x31\x5e\xe8\xa2\x81\x93\x68\x74\xda\x9c\x86\x72\x43\x46\x55\x88\x9a\xac\x6f\xca\x22\xf3\x93\x38\x38\x2a\x72\x3a\x16\xdc\x86\xc3\x81\xfc\xbf\xe3\x61\xa0\x72\x1f\x49\x40\xdb\xd1\x46\x9f\x84\x6e\xc8\xf3\x73\xd9\x58\x22\x09\xc7\x95\xd9\x7b\xb5\x2b\x5b\x85\x6f\x28\x59\x19\xb1\xab\x65\xd3\x1e\xf0\x35\x89\x81\xda\x09\xe6\xae\x20\xd1\x91\x6c\x20\xd5\x35\xd3\xac\x0f\x55\x36\xce\x5d\xb6\x78\x87\xe3\xfd\xa8\x29\x84\x8e\x7a\x95\xfa\x96\x29\xe3\x45\xd6\x7a\x81\x02\x2f\x92\xc4\x74\x0a\xad\x3a\x3f\x6d\x93\xb0\xf2\xdc\x3d\xec\xb4\x5d\x77\xcc\x7e\x94\x0a\xa2\xdf\xc1\x60\x96\x2d\xd1\x0a\x01\x58\xb4\x37\x81\xac\x40\x5c\xbd\x57\x0d\x32\xa1\xd6\x18\xa3\xbb\x59\xd9\xdf\x78\xae\xa8\xac\x3b\x8b\x6d\xf1\x1b\xfd\x09\x76\x03\xb2\xab\x9b\x1e\xa0\x9d\x93\x58\xa6\x1a\x34\x86\x96\x72\x87\xb0\xe6\x4a\x44\xdf\x5c\x53\x5c\x9b\xbc\xc3\xc2\xe8\x92\xc7\x21\x6c\xfe\x3a\x83\x6b\xf3\x57\x64\xab\xbb\x50\x1d\x8c\x64\xff\xd6\x39\x4d\x0b\x5c\xe0\x85\x6a\x6a\x53\x64\x68\x5d\x82\x89\xdc\x7c\xfa\x56\x6f\x90\xd0\x97\x7a\x8c\x7e\xac\x72\xbc\x7e\x08\xbb\xd9\x5f\x02\xe0\x38\x2f\x91\x83\xca\x78\xe4\xa3\xa1\x84\xb1\xbf\x12\x8c\x6a\x42\xda\x57\xaa\x98\x30\x5a\xa2\xec\xd6\x2d\x61\xe8\x3a\xc3\xf5\x92\x22\xb6\x24\xa5\xac\x3f\x9d\xda\x6a\x26\x59\x7b\x97\x36\xde\x48\x0d\xa9\x9f\xba\x6e\x06\x5e\xa7\x74\x11\x6e\x52\xf3\x6a\x8e\x06\x3a\xc3\xc5\x25\x51\xbd\x8d\x99\x6b\x1d\x88\x68\x54\x84\xf2\x58\x59\xd2\x9c\x31\xe5\x4b\xc7\xf1\xf9\x87\xd3\x0e\xff\xd5\x48\x43\x02\x16\xf0\x7b\xbc\x0c\x72\xb3\x4d\x87\x0d\x99\xd4\x3d\xba\xdf\x72\x5f\xb3\x36\x7f\xc5\xce\x41\xf0\x2c\xc9\xd9\x60\x8c\x78\xca\xe9\x1c\x96\xe3\xf7\xdf\x01\x6d\xd4\x8e\x89\xca\x84\xd8\x0b\xed\x9f\x98\xe0\xf5\xdb\xb6\xe5\xd9\x65\xb0\x87\x36\xba\xbf\x9a\xdb\xc3\xde\x1b\x67\xa8\x2d\xda\xe2\x9c\x0b\x10\xe6\x5c\x8b\x47\x4d\x1c\x2a\xad\x3c\x32\x9f\x0c\x1c\xde\xcd\x66\x97\x06\xaf\xea\xad\xf7\xfb\xc9\xc2\xd3\x82\xa8\x43\xef\x02\x7d\x2e\x19\x7e\x9d\xdd\x6d\xed\xfd\xb6\x51\x4d\xa4\x5f\x7a\x4f\x03\xf6\x0d\xf6\xfe\xa1\xcb\x6a\x03\xc5\x4e\xbb\x0d\x5b\x6d\x43\x16\x9e\x60\x7f\xba\x1c\x54\x47\x51\x16\xb8\xf1\x2a\x74\xea\xcf\x39\x2d\x6e\xd6\x5c\x2d\x38\x72\x20\x58\x13\xb3\x8b\x0c\x60\xa5\xa2\x62\xbb\xf2\x4f\x81\xb6\xde\x39\x89\x63\x3f\x4c\x77\x35\x3e\xdf\x82\xbc\x96\xf0\xbe\x2b\x2c\x5f\x57\x9e\xad\x3f\x97\xaf\x47\x84\xdc\x16\x68\xc6\x8b\xec\xb6\xc0\x88\xb1\x26\xaa\x10\xab\xb2\xa5\x9b\xce\x65\x7d\xf5\x01\x5a\x6c\x09\x96\x9d\x37\x60\x8f\xb4\x38\x96\x6c\xe9\x1b\xe1\x8d\xb7\x00\xad\x72\x87\xae\x93\x37\x5d\xce\xcd\xd1\xd7\xce\x08\x79\xeb\x8f\x71\x00\x5a\x6e\x35\x82\x31\x52\x84\x5d\x69\x7b\xa0\x6f\xda\xe8\x27\x94\x7d\x30\x23\x4a\xf0\x9f\xc9\x0d\xf3\xfb\x82\x45\x14\x85\x9d\x1b\x2b\xbb\xee\xab\x44\x13\xe5\x3d\xef\xaa\xec\x71\xfb\xa1\xe3\x9e\x8a\xd7\xa7\xb6\xeb\x8e\xca\xb7\xb9\xa1\xf2\x88\xfb\x29\x91\xd3\x4a\xd3\x93\xc6\xef\xa5\x44\xbd\xac\x1d\xd6\xd9\xc6\xa2\xe5\xeb\x9e\x8b\xed\xbc\x89\xb2\xe7\x3d\x94\xce\x5b\x43\xe1\x5e\x89\x3d\x6e\x0e\x99\x3c\x85\x28\x63\xc9\x74\x8d\xaf\x53\x76\x1b\x06\xb5\x6f\xb5\x04\x41\xcc\x84\x37\xe2\xae\xcf\x28\x6e\x0e\x17\xc2\x20\x40\xd1\x92\x99\x27\x9d\x3b\xa2\x7a\x6b\x70\x4a\x71\x92\x7e\x65\x89\x40\x12\xd9\x07\x80\xef\x39\x9b\xfb\x2a\xf1\x11\xf0\x11\xe8\xce\xb2\x8c\xac\x31\x1f\xe7\x3b\x30\xea\x55\x1e\x77\x60\x6e\xda\xdd\x46\x97\xef\x67\xd7\x17\x53\x18\x6d\x60\x00\xde\xfd\x97\xf6\x5f\xe8\xa9\xff\x2c\x14\x2d\x3d\x5f\xb7\xc2\xc2\x82\x25\x59\xb0\x64\x44\x51\xca\x51\xd3\x53\x16\xd9\xb7\x6d\xd0\x19\xa7\x28\x5d\x75\xc2\x4e\xd6\xfc\x92\x2c\x2e\xee\x10\xe6\x2c\xc4\xac\xc0\x46\x6f\xab\x78\xa4\x97\xab\x56\x2e\x39\x49\xc7\xad\xa7\xbe\x6a\x78\xe9\xd2\x0a\x00\x05\x96\x23\x79\xa9\x3c\x39\x4e\xbf\xb2\xfa\x4e\xd3\x0f\xfe\x3d\x26\xf5\xef\x1f\x28\x9d\x7f\x1c\xcb\x03\x67\x25\xad\xb6\x18\x67\xcc\x00\x26\x71\xc6\xb9\x61\x7a\x74\xb7\x30\x22\x01\x3f\x0e\xd0\x9b\x75\x73\xb3\x2e\xb6\x61\x47\xaf\xe0\xb9\xb5\xbd\x66\xeb\xdf\x5d\xc3\xf3\x2f\xaf\x2d\xf5\x03\x63\xe7\xea\xb8\x9a\x56\xcf\x14\x3c\x96\x37\x6e\xa4\xe9\xcf\xc8\xfc\xfb\xe0\x27\xeb\x16\x7a\x53\x94\xf8\x79\x68\xd5\x91\xbc\x5b\x83\xf0\xaf\x45\xf5\xa6\x28\x03\xf2\x84\x9f\xb1\x5f\x8e\xe9\xad\x19\x02\x8c\xd3\x22\xe3\xbd\x5f\xdc\xdd\xf3\x2e\xa5\x20\xfd\xca\xc0\x2b\x40\xd1\xef\xeb\x82\xa2\x83\x5e\xfa\x95\x1d\xb1\xfc\xb6\x77\x18\x04\x46\x99\x00\xc6\xe8\xab\x18\x36\xb8\x18\xcd\x0e\x36\xab\xf4\x7e\x8a\x38\x2d\x10\x4b\x4e\x86\xdb\xf0\x30\xa1\xbe\xc6\xb8\x51\x49\xd6\xf9\xc7\x94\x67\xcb\x4b\xb2\x60\x07\xe1\x31\xda\x71\x83\x57\xa0\x17\xf0\xcf\xde\x5a\x22\xee\x44\xcf\x2e\xb5\x59\xa0\xb2\x5c\x86\xd9\x68\x0b\x60\xef\x97\x60\xe7\x67\x07\x62\x7d\x8b\xd2\xc3\x6b\x5c\x75\x88\xa2\x95\x08\xb8\xd5\x65\x21\x58\xb4\x71\x97\xe5\x1f\x41\xf9\xf7\x60\x76\x90\x2a\x5e\xf5\x8c\x8e\xea\x5e\xe2\xd0\xdb\xd6\xe0\x3a\x1a\x40\xc4\x52\xfa\x61\x0e\x05\xab\x32\x6a\xda\x5e\xd2\xeb\xb9\xd2\xf5\x9a\x9b\xd0\x7d\x25\x52\xbf\xda\xe0\xc0\x2b\x30\xd7\x86\x7d\x80\x84\xb7\xeb\x83\x8c\x60\x8e\xee\xf9\xa1\xc7\x1f\x39\x8b\x54\x17\x75\x4b\x00\xbc\x02\x72\xc8\x40\xff\x1e\x50\x54\x95\x69\x86\x0e\x8e\xff\xed\x5f\x0e\x3e\x7f\xce\x7f\x3c\xfc\xe5\x78\xd1\x6f\xf1\xaf\x84\x16\xf6\x41\x8e\xb2\x08\x6e\x00\x28\xe2\x6b\x8a\x81\x3a\xcd\x1f\xcc\x29\x59\x8d\x96\x29\x15\x96\x79\x20\x86\x79\xca\x2b\xfe\x13\xb0\x83\x9a\x50\xd5\x68\x11\x10\x35\xac\xff\x60\x3c\xa5\x1c\xe5\xaf\x1f\x12\xd0\x13\x99\x4f\xaf\x1f\x83\xb4\xf5\x27\x71\xf5\xe9\x93\x62\x85\x6e\x29\xf9\x12\x45\xa3\x4d\x2d\xa9\xff\x88\x03\x8a\xcd\x35\x01\x27\x51\x00\x72\x87\x28\x2d\x72\xc4\x92\xf8\xf2\x14\x22\xdd\x7a\xf5\xae\x1d\xf0\xa9\x6b\x00\x90\xea\x8d\xd3\x15\x4a\xac\x45\xf5\x6b\xc1\x27\x9f\x40\x8f\x2d\x7b\x7d\xd0\x3b\xca\x7a\xcd\x53\xa1\xac\x5d\x68\xbf\xc4\x5e\x06\x47\x6d\xa3\x42\x65\xb7\xe8\x2b\x78\x05\xae\x52\xbe\x1c\xcc\x4b\x42\xe8\x81\xfc\x93\xca\x86\x8e\x83\xc3\x1f\x4e\x86\xc3\xe1\x30\xac\x13\x25\x59\x1c\x58\x4b\x02\x3f\x82\x5e\xd2\x03\x3f\x36\xee\xe5\x47\xd0\x3b\x16\x7a\x20\x67\x79\x25\xde\xc8\xe9\x7e\x04\xbd\x15\xab\x17\x2a\x1f\x5b\x9a\x6f\x28\x39\xa2\x34\xaa\xdd\x52\x16\x8c\x94\x68\x20\x08\xe9\x21\x4a\x4f\x7b\x7d\x20\x46\x04\xa9\x15\xff\x18\xe2\x7a\xbb\x3a\x68\xa6\x38\x04\x1b\xb1\x39\x0c\xa8\x4a\x70\x0e\x94\x96\x37\x86\x3b\xc8\x09\x46\x87\xc2\x89\x08\xd2\xf7\xb6\x19\x9f\xe1\xf5\x84\x92\x6d\x2b\xc4\x58\xba\x40\x7d\x90\xdd\x74\x78\x06\x26\x23\x2b\xe1\xa4\x05\x13\x8f\x04\xa3\x0e\xc4\x4e\x74\x9e\x72\x74\x70\x78\x38\x58\xa8\xe5\x04\xb6\x21\xb0\xb7\xc9\xd6\x5b\x8c\xf0\x9f\x49\xf3\x2b\x6a\x26\x65\x1d\xef\x29\x78\x16\x8a\xfd\x14\x4f\x22\x1a\xc3\x06\x99\x1d\x38\x36\x0c\x7f\xa2\xd0\x77\xc9\x7c\x3f\x36\x68\xea\x54\x88\xba\x97\x45\x6b\x11\x26\xa0\x91\xa5\x08\x93\x18\x4f\x57\x55\x12\x11\xd3\x0e\x8b\x8e\x32\x1d\x3c\x5e\x4e\xe0\x31\xb2\x02\x31\x79\x01\x87\xdf\x7a\xa9\x71\x66\x4b\x01\x57\x46\xb4\xdf\x9a\xd3\x4d\xcc\x76\xfc\x4d\xd6\x2c\xd1\x58\x41\x7b\xe0\x8c\xde\xe9\xa1\xd1\x21\xc7\x8e\xba\x9a\x08\x29\x66\x4b\x42\xb9\x8e\x1a\xa6\xeb\x8e\x1a\x9b\xd6\x89\x44\x02\xed\x8c\xc5\x8d\x56\xdf\xc1\x25\xc1\x0b\x3d\xc3\x11\xcb\x96\x28\x5f\xdb\x1f\x96\x99\xe9\x67\x17\xf7\x15\x45\xac\xae\xf5\x48\xe2\xf4\x1b\xa7\xeb\x48\x9d\x66\x7a\x25\x6f\x19\xb6\x47\x63\xfb\x36\xd5\x88\x5c\xa8\x1d\xe7\x01\x82\xf5\xc1\xa9\x73\xf6\x5a\xe9\xd3\xc7\xcf\xf5\xdd\xea\xcf\x30\x01\x9f\xeb\xb6\x10\xb9\x07\x6c\xb7\x9f\x61\x1f\x7c\x86\xda\x99\xb7\x00\xfa\x36\xa4\x04\x30\x64\x1c\xaa\xaa\x06\x44\xa4\x12\xa7\x09\xa2\xab\x82\xb1\x50\x86\x05\xdc\x14\xcb\x80\x0d\x49\x0d\xd8\xd5\xd1\xac\x69\x4a\x54\xa9\x76\x32\xc6\x77\xe4\x16\x85\x3e\x95\x52\x3f\x53\xcd\x43\x4f\xe4\xbb\x51\xf8\x14\x93\xca\x0d\x90\x39\xa5\x4e\x53\x55\x64\x26\x2c\xd1\x44\x7b\x04\x3d\x8d\x36\x26\xee\x32\x9c\x70\xe5\x3a\xf4\xa5\x0d\x75\x41\x7f\xaa\xdf\x04\xbe\xf7\x17\xb8\x70\x3e\x35\xc0\xb4\x6c\x83\x17\xcd\xc3\x16\xf5\xfc\x3b\xe3\xc6\x67\x09\xbd\x56\x78\xaf\x11\xec\x45\xcd\xa4\xe8\x37\x05\xfc\x8f\x73\xd8\x4c\x51\xe7\x9b\x7a\x9d\xde\xb7\x11\xbc\x52\xcf\x0b\x2d\x8d\x4e\xa6\x76\xf4\x86\x06\x86\xf5\xbd\x25\x6b\x05\x88\xae\xc9\xf9\x3e\x8a\xd5\xab\x1f\xfe\x08\x83\x7b\xee\x10\x11\xde\x5e\x67\x0e\xd1\x02\xb6\x53\x55\x8f\x56\xa5\xdc\x8a\xbf\xf5\xda\xbd\xa1\xd0\x5d\x00\xb3\x8f\x23\xdc\x79\x8c\xc3\x09\xaf\x8e\x04\x45\x0c\x69\x9b\xef\x53\x2a\x4b\x86\xc9\x87\xcb\xff\xb5\x21\xb7\x2e\x2d\x76\x5c\x11\x3e\xac\xb0\xf6\x0d\xfb\xa0\xc2\xba\xa2\xe1\x83\xc5\x3f\x6e\xf6\xed\xbf\x5b\xd6\x59\x81\x84\x48\x35\xda\x95\x24\xcd\x6f\x9a\x46\x3b\xd5\x03\x7a\x83\x22\xe7\x0f\x91\x31\xca\x9c\x11\xad\x4f\x72\xd9\x1b\x4a\x56\xc1\x96\xbd\xdd\xd8\xa6\x2e\xae\x8f\x05\x5f\xee\x81\x2b\x3b\xdd\x49\x7c\x76\x9a\x9c\xad\xf9\x92\xd0\xe2\x0f\x14\x6c\x47\xf5\x46\x85\x8e\xab\x8d\x82\x6a\x90\xaf\x3f\x04\xd0\x38\x4f\x9c\xeb\x3f\x41\x25\xae\xff\xfa\xb2\xdb\x9b\x9a\x5f\x5e\xf2\x3f\x68\x64\xfb\x9c\xd9\x4f\x49\xa2\xbf\x39\xa6\x9d\xce\x39\x2a\x91\xd0\x93\xe6\xa4\x1a\x4e\x91\x48\xce\x77\x38\x25\xf9\xfd\xe2\x11\xc1\x9c\xaa\xce\x19\xb7\x41\x11\x5e\xa7\xce\x2d\xd9\x4d\xfd\xe9\x0e\xc8\xe4\x95\x71\xe1\x63\x9b\x7e\x01\xfd\x99\x33\xab\x6b\xaf\x81\x4f\xab\xca\x04\xee\xd8\x7a\x42\x6c\x33\xb8\xf6\xff\x01\x00\x00\xff\xff\x69\x3a\x75\x01\xc6\x5e\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

