// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3c\xfd\x73\xdb\x38\x76\xbf\xe7\xaf\xc0\xa0\x69\x65\xef\xca\xb2\xec\xed\x5e\x7b\xdc\xa6\x33\x8e\xec\x24\xbe\xb3\x13\x55\x72\x92\xe9\x25\x9e\x1b\x9a\x84\x24\x9e\x29\x80\x0b\x40\x8e\xbd\x1a\xfd\xef\x1d\x7c\x90\xc4\x27\x25\xdb\xc9\x5c\xd3\xe9\x9e\x45\x3e\x3c\x3c\x3c\xbc\x6f\x3c\x70\xbd\x06\x39\x9a\x15\x18\x01\x98\x56\x15\x04\x9b\xcd\x0b\x00\xd6\x6b\xf0\x32\xad\x2a\x90\xbc\x02\x83\x93\xaa\x6a\x1f\x2e\x53\x5c\xcc\x10\xe3\xf2\xcd\x65\xfd\x43\xbd\x7e\x01\x00\x00\xf0\xe4\xf3\xf4\x0a\x2d\xab\x32\xe5\xe8\x0d\xa1\xcb\x94\x7f\x42\x94\x15\x04\x43\x90\x00\x78\x3c\x3c\x1a\x1e\x0c\xff\x7c\x30\xfc\x33\xec\x2b\xf0\x11\xc1\x79\xc1\x0b\x82\x19\x4c\x34\x0a\x39\x13\xd7\x38\x00\xbc\x49\xcb\x14\x67\x88\x1e\x64\x2d\xa8\x3b\xb7\x37\xa8\xa2\x24\x43\x8c\x6d\x1b\x03\xcf\x31\x47\x14\xa7\xa5\x98\x1c\xc0\x37\x38\x49\xce\x7e\x5f\xa5\xa5\x20\xe6\x8b\x78\x32\x41\x33\x98\x18\x60\x60\xd3\x07\xf0\x7f\x11\x83\xe0\x1a\x6c\xfa\x35\x96\x31\x2d\xee\x52\x8e\xb6\x20\xa9\xa1\xc2\x38\x5e\x97\x29\xbe\x9d\xa2\x6c\x45\x0b\xfe\xf0\x96\x92\x55\x25\x38\xb6\x36\xd1\x81\x04\x7c\x59\x4b\x6c\x82\x97\x36\xac\xc0\x09\xaf\xd5\xba\x34\x52\x38\x4e\x69\xba\x44\x1c\x51\x39\xb4\x9b\xb9\x95\x80\x7d\x04\x63\x83\xf0\xf5\x5a\x46\xe5\x8a\x71\x44\x8d\x1d\x05\x00\x5e\x3d\x54\x48\x11\xce\x69\x81\xe7\xb0\xdf\xbe\x3a\x45\xb3\x74\x55\x72\xf9\xd6\x7e\xce\x32\x5a\x54\xbc\x16\x1f\xa8\x5f\xb5\x5c\x1b\xad\x18\x27\xcb\x2b\x52\x15\xd9\x64\x85\x79\xb1\x44\x81\x49\x3b\xe7\x4c\x00\xc4\x24\x47\xff\x60\xb1\x89\x83\xf3\x9e\xa2\xaa\x24\x0f\x4b\x84\xf9\x65\x7a\x5f\x2c\x57\xcb\xf0\xb4\xef\x57\xcb\x1b\x44\x23\xd3\x1e\x0f\x87\x1d\x73\x6a\xbc\xa0\x42\x34\x43\x98\xa7\x73\x04\xc8\x0c\x68\xf6\x23\x06\x38\x01\xb7\x08\x55\x80\xae\x30\x2e\xf0\x1c\x7c\x5b\x14\x25\x02\xb9\xa4\x4b\x2c\xb5\x8b\xe4\x02\x3f\x91\xe4\x5f\x3b\x29\x56\x68\xbf\x1f\xc5\x67\xf8\xae\xa0\x04\x0b\x92\x9f\xb0\xab\x8f\xda\x4f\xd3\x0e\xec\x36\x8f\x85\xf0\x03\x2e\x1f\x40\x5a\x96\xe4\x1b\x48\x33\xb1\x5c\xb1\x58\xbe\x28\x18\x10\x56\x74\x46\xc9\x12\x14\x98\x15\x39\x02\x7c\x81\xc0\xa7\xf1\x28\x42\xf3\x7b\x62\xbe\x38\x11\x08\x51\xfe\x29\x2d\x57\x48\x19\x13\x69\x36\xfa\x12\x0e\x5c\x7b\x8b\xf8\x2b\x7a\xf8\xd1\x7c\x32\x2c\xdd\x13\xd8\xf4\x91\x21\x30\x5d\xdd\x60\xc4\x99\x46\x24\xf8\xc4\x2a\x94\x15\xb3\x07\xc1\x96\x03\xc9\xa3\x92\xa4\x39\xa8\x2d\x13\x40\x38\xaf\x48\x81\x39\xfb\x21\x3c\x9b\xa0\x12\xa5\x2c\xb4\xa0\xef\x6d\xaa\x26\xa8\x22\xac\xe0\x84\x86\x36\xe9\x79\x93\x4d\xc9\x8a\x66\x08\x64\x24\x47\x80\xb6\xd3\x78\x24\xd8\x2e\xe3\x7b\x53\x71\xb5\x40\xe0\xc2\xda\x3a\xa6\xe7\x03\x73\x31\x21\x98\x11\xda\x28\x45\x80\x38\x25\x18\x11\xb2\x2e\x0a\xc6\xff\xeb\xe4\xf3\x34\x49\xce\x46\xc7\x49\xa2\x80\x93\xe4\x3c\xff\xef\xa7\x90\xfa\x69\x3c\x02\x4c\xcd\xb7\x1b\x55\x71\xb9\xff\x31\xc4\x55\x5a\x3d\x76\x23\xb2\x0e\xb1\x2c\xea\x1c\xdd\xdb\x9b\x9c\xfd\xcf\xc7\xf3\xc9\xd9\xe9\x3e\xb8\x48\x97\x37\x79\x0a\x0c\xdf\x09\xde\xa5\x38\x2f\x11\x05\x5a\x1d\x40\x8d\xd1\x20\xf3\xb2\xc0\x17\x08\xcf\xf9\x42\x12\x79\x64\xbe\x72\x0c\x80\x4f\xdf\x78\x14\xe1\x5c\xcb\xb4\x4f\xe3\x91\xe0\xd8\x53\x19\xb6\x85\x41\xe3\xd1\xe8\xfc\x74\xf2\xdd\x45\x5e\xcc\x2c\x10\x87\xa7\xb7\x82\xb1\xcb\xb4\xaa\x0a\x3c\x37\xe5\x1b\x8e\x09\xe5\x63\x4a\x38\xc9\x88\xe3\x79\x16\x9c\x57\x2a\x9c\x14\xb2\x85\x30\xa2\x06\x1c\x7c\x77\x75\x35\x16\x26\xed\x1c\x33\x2e\x34\x2d\xf4\x4e\xea\x3a\x8a\x41\x4c\x61\xcb\x1d\x3d\x1d\xeb\x9e\x6f\xfa\xec\x09\xad\x19\x79\xd6\xb1\xbe\xab\x51\x74\x79\xfa\x55\x7c\xb2\xe9\xf4\xc2\x9d\xaa\xec\x58\x9a\x00\x7f\xde\x54\x60\x13\xdc\xef\x09\x62\xd2\x2a\x5b\x1b\x6e\x86\xab\xa4\x8c\xb8\x51\xa9\x13\xe7\x27\x97\x49\x22\x61\x8c\x95\x8c\x29\xa9\x10\xe5\x05\xb2\xad\xa4\x70\x7b\x8c\xad\x96\x48\xc0\x8f\x49\x59\x64\x0f\xa7\x24\x5b\x79\x71\x93\x63\x2b\x44\x36\x76\x7c\x70\x34\x3c\x38\xfa\x0f\x63\x12\x09\x34\xe5\x29\x47\x7a\xfc\x17\xeb\x15\x70\xf0\x49\xf0\xb3\xd9\x0c\x65\xd2\x19\x4b\xf7\xeb\x60\xd3\xa4\x17\x38\x2b\xaa\x3a\xd3\x9a\x22\x7a\x57\x64\x48\x39\xe8\x52\xda\xa3\x41\xba\x4c\xff\x20\x38\xfd\xc6\x06\x19\x59\x5a\xc9\x91\xb9\xd0\x4c\x1b\xb4\x2f\x00\x32\xce\x92\x76\xe1\xad\x77\xaf\xff\x6d\xac\xdf\xe6\x5b\x0b\x33\x1c\xa7\x7c\x21\x88\x3f\xcc\x08\xbe\x23\xf7\x87\xd0\x7e\x2b\x18\xaa\x58\x6e\xb3\xc2\x65\x84\x82\x7c\x78\x9f\x2e\xd5\x36\xe6\xcb\x02\x17\x8c\xd3\x94\x13\xea\xb1\x04\x6e\xd9\x27\xb0\xeb\x5e\x01\x6f\xbf\x04\x7f\xbd\x1d\x31\x38\x07\x7f\x12\x3f\x6b\xf9\x54\x0f\xc0\x66\x0b\xf7\xcc\x5f\x2d\xe4\xa6\x2b\x21\xeb\x90\x6e\xe5\x81\x92\xe4\xcd\x0a\x2b\xaa\x76\x12\xf2\x11\xc9\x91\x2f\xd0\xd3\x5f\x5e\xaf\xb2\x5b\xc4\xdb\xec\xfb\x2f\xa4\xd0\x12\x72\x00\xfb\xe2\x7f\xd4\xbe\xc2\xbe\x91\x8c\x4b\x32\x26\x68\x2e\x2d\xf9\x06\x5c\xfb\xe2\x06\xa7\xbf\xe8\x80\xda\xc5\xaa\x90\x52\xe5\x2a\x0f\x2d\xb4\x4d\xb1\x43\xe4\xe3\x87\x4a\xb0\x0f\x67\xb2\x0e\x52\x10\x3c\xf8\xa3\xa8\xa0\x9a\x2b\x2a\x8c\xda\x13\x0b\x64\x05\xce\xd1\xfd\x00\xdd\xeb\xd4\xc4\x02\xbb\x44\x4b\x42\x1f\xa6\xc5\x1f\x92\xa9\x47\xc7\xff\x69\xbf\xae\xad\x8b\x22\xfd\x2d\xe2\x27\x5c\xc9\x86\x67\x82\x84\x64\x50\xec\xa9\x1b\x34\xd2\xe9\x66\x75\x81\x6c\xdb\x19\x75\x55\x2c\x11\x59\x49\xc1\xfb\x65\x38\x84\x71\x41\x09\x57\x21\x68\x63\x34\xc1\x20\x52\x80\xc8\x28\xc1\xff\x20\x37\xbb\x80\xd6\xb5\x0a\x13\x74\xc7\xf2\x06\x53\xf6\xa9\x03\x39\x45\x73\xa1\xdc\x0f\x51\xec\xa1\x41\x75\x40\x0c\x23\x48\x19\x57\x05\x22\xdb\x95\x7c\x58\xf1\x6a\xc5\xb7\x17\xc8\x88\x86\x03\x83\xee\xc5\xb5\x70\x5b\xb8\xd1\xac\x31\x3c\xa2\x4d\x2b\x38\x77\x42\x1b\x61\xbc\x44\x0a\x66\x89\x4f\x03\xe7\xba\xcc\x17\xe2\xff\xd7\x6b\x91\xea\x49\xbc\x46\x4d\x32\x54\xc8\xab\xab\x91\x34\xc5\x73\x04\x5e\xde\xca\x62\xe4\x19\xe6\x54\xda\x5e\x56\x2f\x06\x9e\xe1\xf4\xa6\x44\xf9\x7a\x0d\x56\x55\x85\xa8\x80\xdc\x6c\x5a\xad\x78\x4f\xa4\x4a\x04\x4b\x76\xe2\xc9\x14\x95\xca\x86\x7e\x01\x43\x53\xc7\x6d\x7c\x6f\x6a\xe5\x56\x66\x44\xe8\xfd\xc1\x91\x54\x27\xad\x51\xed\xba\xba\x57\x58\x57\xd4\x9c\xd5\xa1\xd8\xea\x5a\x32\x90\x45\x86\x11\x6e\xd4\x36\x77\x44\x96\xcb\xf4\x14\x95\xc5\xb2\xe0\x28\x17\x61\x10\x34\xca\x42\x4d\x26\x7d\xd4\x1f\xf6\x8f\x7f\xfd\x93\xf9\xce\x4a\x21\x54\x69\xc8\x2b\xea\xd0\x15\xee\x83\xd1\xf8\x23\x58\xe1\x82\xab\x27\x48\xe8\x0f\xea\x83\x14\xe7\xe0\xf2\xb5\x18\x31\x39\xb9\x34\xde\xc0\x56\xbe\x77\x65\x4f\x23\x82\x72\xfd\xf0\x82\xcc\xed\x2c\x36\x20\x6f\x0d\x8c\x92\xb0\xfe\x96\x19\x0c\x45\x8e\xcd\x61\x3b\x31\x32\x67\xf2\xbf\x0a\x68\x97\x29\x5a\xb3\xb2\x53\x45\x3d\x52\x85\x2f\x66\xed\xb0\xc1\xbb\x94\x8d\x9b\xdd\xd0\xb2\xe1\x48\x4f\x0b\xac\xc3\x2e\x66\x54\xc0\x0d\x31\x1a\x08\x01\x03\x9b\xcd\xd9\x68\x7a\x95\xb2\xdb\x53\x41\x7c\xc1\x03\x89\x65\x85\x70\xce\x3e\x48\x6f\x68\x39\xfc\x7e\x13\xd8\x49\xd7\x72\x1d\x48\x11\x15\xb8\xc8\xf9\xdc\x39\x0c\x60\x23\xee\x39\x1a\x0c\x77\x0b\x0e\xf4\xc4\x57\xe4\x16\xe1\xad\x9e\x2f\xea\xf5\x74\xf0\x16\x09\x24\x9c\xf0\x61\xca\xd3\xec\x56\x8e\x90\x6a\x2f\xb6\xab\xe1\x21\xf4\x43\x0a\xb3\xd6\xd4\x20\xaa\x9f\x39\xa0\x4e\xe9\xb3\x01\x37\x9f\x3b\x43\x9a\x60\x45\x83\x8a\xdf\xae\x77\x4e\xd9\xed\x0e\x71\x6c\x1d\xc1\xda\x0b\xf2\x22\xd8\xf3\x65\x3a\x37\xe0\xe4\xcf\x10\xe0\x7a\x2d\x04\x16\x0d\xa4\x15\xc2\xf9\xe0\x84\xd2\xf4\x61\xb3\xf1\xa3\x58\x0d\x10\xc8\x39\x80\x25\xd4\x32\x2e\xea\x83\x97\xa8\x94\x31\xaf\x14\xf1\xed\xe8\x4d\x62\x24\x86\xcd\xa6\xbf\x5e\xa3\x92\xa1\xcd\x66\xbd\x46\x38\x8f\x8e\x81\xeb\x75\x3d\xd7\x66\x03\x83\xa4\x85\x87\x5f\xfb\xac\x10\xf3\x09\x05\xc6\xc8\xa4\x59\x55\x20\x00\x84\xdd\x6c\x59\xaf\xc1\x9d\xb0\x72\x81\xa1\x1b\x2f\x59\x0a\x13\x05\x47\xd5\xaa\x15\x70\xc3\xc5\x1d\x85\x5d\x5c\xb3\xff\x9e\x9f\x73\x11\xab\x88\x34\x88\xfb\xf8\xb9\xb8\x63\x27\x01\x0d\xc0\xc9\x78\x5c\x4b\xa2\x30\x95\x51\xa1\x15\x5a\x78\x32\xfa\xab\x86\x45\xf8\x4e\xff\x8e\xc0\x9e\x7c\x9e\xfe\x7d\x72\xf6\xf6\xfc\xc3\x7b\x73\x84\xf1\x34\x3c\xce\xb0\xbf\x03\x83\x74\x10\x94\x30\x65\xd0\x31\x02\x03\xe9\xc1\x00\x84\x61\x38\x65\xab\x9b\x95\x19\xd2\xa0\x07\xfa\x22\xa0\xd1\x6b\x87\xf4\xa8\x37\x75\x6c\x85\x1e\xfa\xe0\xa5\x9a\x46\xb8\xa1\x8b\x02\xdf\x7e\x4a\x29\x0b\x93\x28\xf9\x7f\x8b\x1e\x1a\xfa\xf4\xc8\x10\x65\xf1\xd9\xe1\xc5\x87\xb7\x7f\x7f\x3b\xf9\xf0\x71\x1c\xf3\xe6\xa1\xfa\xc2\xe4\xc3\xe8\x6c\x3a\xf5\xcd\x96\x9b\xd5\x7a\xb2\xf5\x89\x94\xab\x65\x20\xbd\x07\xce\x46\x5e\x92\x15\xe6\x22\xa0\xd4\x03\xba\x76\x73\x70\xce\xa6\x0f\x8c\xa3\x65\xc7\x56\x0e\xde\x11\xc6\x37\x9b\x64\xbd\x1e\x8c\x08\xe6\x69\x81\x11\x0d\x4a\x93\xe2\x95\xb0\x1b\x11\x64\x91\x04\xf5\xf0\x4e\x11\x7a\xe8\x27\xbe\x8e\xe7\x3a\x14\x06\x4e\x72\x4c\x98\xc2\x08\x61\xa1\x1c\xb9\x25\xef\xd1\x22\x06\x9a\x83\x6c\x49\xd1\x7b\xa2\xe2\x37\xe0\x82\x7a\x36\x14\x9e\xdd\x73\x9a\x0a\x1a\xb7\xed\x99\x23\xbc\x42\x19\x9b\xa1\x97\x69\x15\xd9\xc0\xf0\x7e\x89\x41\xa6\x5f\xd4\x52\x1e\x62\x87\x70\x8d\xd5\x49\x9e\x53\xc4\x58\x0d\x5e\xeb\x41\xc8\x7b\x3c\x4a\x39\x9e\xc1\xb7\x3a\xf8\x0b\x73\xed\xe9\x78\xc7\x84\x72\xa3\xba\xdd\xb1\x23\x03\x01\xda\xa9\x38\x22\x61\xd8\x43\xbf\x83\x41\x5d\x67\x55\x95\xe2\x7d\xb0\xf7\x12\x89\x50\xf7\xb5\xce\x75\xf7\x77\xd6\x85\x44\x28\x43\x2c\x18\xe8\x72\x4a\x82\x56\x61\x70\xeb\x29\xc1\x66\x23\x84\x20\x68\x7e\x34\x27\x04\x78\xa3\x32\x60\xb3\x39\x14\x0f\x9a\x95\x84\x77\x1f\x74\xeb\x55\x87\xda\x43\x87\xba\x64\xeb\xf4\xff\x0f\x94\x77\x4c\x8b\xbb\xa2\x44\x73\x94\xb7\xa6\xba\x7d\xe6\xf1\x68\xd7\xb2\xa3\x96\xed\xc0\x36\xda\xb9\x4b\xd3\x6e\xa4\x82\x69\xa7\x3e\x10\x0a\x76\xed\x74\xe7\x85\xc5\x1e\x15\xd7\x1a\x62\xe9\x32\x0b\x9a\x19\x5e\xb3\x57\x75\xe9\x55\x4e\x16\x89\xb0\x43\xcc\xb7\x33\x98\x40\xf2\x23\xb3\xae\x17\x21\xee\xdb\x99\xeb\xd9\x48\xf8\x00\x5d\x82\xdf\xad\xf4\xda\x76\xf4\xb4\xd5\x40\xfd\xcc\x49\x32\xda\x3e\x93\x11\xc1\xb3\x62\xbe\xa2\x6e\x5d\x42\x03\xea\x7e\x91\x77\x28\x2d\xf9\xe2\x61\xac\xba\x46\x5a\xa9\xf0\xfa\x55\x7c\x09\xae\x9b\x64\xba\xc6\xea\x36\x1a\x5b\xb0\x5c\x8a\x59\x41\x51\x3e\x12\x0e\x3e\x18\xbf\x46\xca\x3f\x3b\xc5\xaf\x3b\x89\xc9\x05\x49\xf3\xfa\x65\xc8\x86\x06\x22\xde\x46\xd1\x77\xcb\xd6\xcc\x11\xc2\xb2\xe9\x11\x7b\x32\x13\x92\x4a\x28\x4d\xf3\x70\xdf\xb2\x20\x21\x34\x26\xad\x6d\xba\xdc\x32\x67\x77\x79\xf7\xcc\x85\x73\x60\xe3\x6c\x76\xbc\xa6\x6d\x8a\x7f\x24\xb3\x0f\xea\x93\x5f\xe5\xe8\xda\x65\xbf\x64\x61\x10\xec\x98\x24\x73\xba\x6d\x15\xae\x60\x83\xa3\x5d\x05\x6c\x58\x69\x96\x78\x5e\xea\xaa\x92\x24\x2f\x79\xa5\xe9\x1d\x8c\x8d\xa7\x06\x70\x3d\xcb\x98\xa2\x59\x71\x2f\xe0\x2b\x5a\x60\x3e\x03\xb0\xc6\xfd\xaf\x0c\xda\x38\xdd\x6a\xd2\xc0\xf4\xf4\x46\x09\x49\xb6\x2e\x06\xe6\x08\xfa\xd0\x91\x30\x30\xb3\x22\xf3\xba\x29\xa2\x7d\x93\xee\x52\xb7\xa2\x95\x31\xad\xd7\xec\xf3\xa4\x2d\x09\x17\x65\xc3\xdb\xd1\xb4\xbd\x88\x44\x69\x67\xe6\xb5\x82\x56\x8f\x77\x76\xf0\x31\x3c\xfc\x21\x8d\x4b\x4f\xa1\x50\x46\x4a\x4f\x21\x4d\x98\x4b\x65\x92\x9a\xc9\x26\x29\xce\xc9\x92\x81\xbd\x82\x93\xb4\x9d\x65\xdf\xf3\xd3\x9d\x0b\x79\xd2\xf6\xdb\x45\xe7\x58\x3d\x56\x6f\xf0\xa5\x6b\xf7\xb6\x4b\x47\xa3\x7b\x0d\x8f\x1d\xd6\x3a\x7c\xec\x8e\x5f\x9c\xb1\x6d\x1d\xdf\x28\x8d\xbb\xa6\x53\xec\x9b\x65\x9f\xc5\x38\x00\x4f\xdf\x4f\x55\x7a\x78\x6d\xb7\x35\xfc\x10\x71\xae\xff\x7c\x4c\xa8\x16\xc1\x6e\x55\x91\xf5\xaa\xdd\x38\xf9\xfb\x48\xb8\xeb\x02\x7f\x00\xe1\xa6\xd8\x0c\x5c\xb7\x0b\x38\x5d\x21\x29\x8f\x03\xd3\x58\x3f\x4f\xde\xdd\x23\x90\x1f\x20\xf1\x01\x81\x8b\xb5\x25\x3e\x93\x93\x6e\xcc\x7b\x2c\x62\x3a\x73\x26\xa3\xab\x35\x18\xf7\x42\x09\x66\x1f\x82\x79\xf9\x25\xd8\xe1\x64\xe0\xa0\x26\xd5\x2b\xa2\xd8\x2d\x99\xe7\x78\xae\x8b\x06\x4e\xa2\xd1\xa9\x73\x1a\xca\x0d\x19\x55\x21\x6a\xbc\xba\x29\x8b\xcc\x4f\xe2\xe0\xa8\xc8\xe9\xb9\xe0\x36\x1c\x0e\xe4\xff\x1d\x0e\x03\x95\xfb\x48\x02\xda\x8e\x36\x5a\x1f\x74\x8f\x9d\x9f\xcb\xc6\x12\x49\x78\x5e\x99\xed\x54\xdb\xb2\x55\xf8\x86\x92\xa5\x11\xbb\x5a\x3a\xed\x01\x5f\x91\x18\xa8\x9d\x60\x6e\x0b\x12\x9d\x9d\x0d\xa4\xba\x66\x9a\xf5\xa9\xca\xce\x73\x97\x2d\xde\x79\x77\x3f\xaa\x0a\xa1\xd3\x5b\x25\xbe\x65\xca\x78\x91\xb5\x56\xa0\xc0\xf3\x24\x31\x8d\x42\x2b\xce\x4f\x73\x12\x56\x9e\xbb\x83\x9e\xb6\xeb\x8e\xe9\x8f\x12\x41\xf4\x3b\x18\x4c\xb3\x05\x5a\x22\x00\x8b\xf6\x1e\x8d\x15\x88\xab\xf7\xaa\xe7\x25\xd4\xed\x62\xf4\x06\x2b\xfd\x3b\x9f\x29\x2a\xeb\xbe\x5c\x7b\xfb\x8d\x96\x03\xbb\x7d\xd7\x95\x4d\x0f\xd0\xce\x49\x2c\x55\x0d\x2a\x43\x4b\xb9\x43\x58\x73\xa1\xa0\x6f\xae\x29\x2e\x4d\xde\x61\x61\x74\xc9\xe7\x21\x6c\xfe\x3a\x83\x6b\xf3\x57\x64\x8b\xbb\x10\x1d\x8c\x64\x4b\xd6\x29\x4d\x0b\x5c\xe0\xb9\xea\x53\x53\x64\x68\x59\x82\x89\x74\x3e\x7d\xb3\xdd\xe7\x4f\x43\xcb\xac\xb5\x78\xcc\xe6\x10\x00\xcf\xf3\x12\x19\x3d\x42\x42\xc8\x8c\x47\x2a\x29\x34\xd1\x50\xc2\xd8\xdf\x08\x46\xf5\x94\xed\x2b\x55\x36\x18\x2d\x50\x76\xeb\x16\x2b\x74\x45\xe1\x6a\x41\x11\x5b\x90\x52\x56\x9a\x8e\x6d\x81\x92\x4c\xbc\x4b\x1b\xbb\xa3\x86\xd4\x4f\x5d\x83\x02\xaf\x52\x3a\x0f\x77\x98\x79\xd5\x45\x03\x9d\x61\xcc\x92\xa8\x84\xc6\x14\xb3\x0e\x39\x34\x2a\x42\x79\xac\x00\x69\xce\x98\xf2\x85\x63\xe2\xfc\x63\x68\x87\xff\x6a\xa4\xb1\x03\x16\xf0\x47\xbc\x08\x72\xb3\x4d\x7c\x8d\x3d\xa9\x1b\x6c\xbf\xa7\x07\xb3\xdc\xbc\x62\xe7\x20\x78\x6a\xe4\xb8\x12\x23\x72\x72\xda\x7e\xe5\xf8\xdd\x7d\x9d\x8d\xda\x51\x46\x99\xfa\x7a\x41\xfc\x13\x53\xb9\x7e\xdb\x73\x3c\xbd\x08\x36\xc0\x46\x3d\xa9\xe9\x08\x76\x76\x91\xa1\x9e\x66\x8b\x73\x2e\x40\x98\x73\x2d\x1e\x35\x71\xa8\x88\xf2\xc8\xcc\x31\x70\x4c\x37\x9d\x5e\x18\xbc\xaa\x9d\xec\x8f\xdb\x0b\x4f\x0a\xa2\xa6\xbb\x0b\xf4\xb9\x64\xf8\x15\x75\xb7\x2f\xf7\xfb\xc6\x2f\x91\x66\xe7\x1d\x15\xd8\x57\xd8\xfb\x87\x2e\xad\x0d\x94\x35\xed\x1e\x6a\xe5\x70\x2c\x3c\xc1\xe6\x72\x39\xa8\x8e\x97\x2c\x70\xe3\x55\xe8\x7c\x9f\x73\x5a\xdc\xac\xb8\x5a\x70\xe4\xe8\xaf\x26\x66\x1b\x19\xc0\x4a\x3a\x85\xbb\xf2\xcf\x7b\x36\xde\x89\x88\xa3\x3f\x4c\xb7\x24\x3e\x5f\x83\xbc\x7e\xee\xbe\xbb\x59\xbe\xac\x3c\x5b\x7e\x2e\x5e\x8f\x08\xb9\x2d\xd0\x94\x17\xd9\x6d\x81\x11\x63\x4d\xfc\x20\x56\x65\xef\x6e\x3a\x93\x95\xd4\x07\x68\xb1\x25\x58\x60\x5e\x83\x1d\x12\xe0\x58\x5a\xa5\x6f\x4e\x37\xd6\x02\xb4\xc2\x1d\xba\x76\xdd\xb4\x28\x37\x87\x5c\x5b\x63\xe1\x8d\x3f\xc6\x01\x68\xb9\xd5\x6c\x8c\x91\x0c\x6c\x4b\xd0\x03\x4d\xcf\x46\x33\xa0\xec\x78\x19\x51\x82\xff\x42\x6e\x98\xdf\xd4\x2b\xa2\x28\xec\x5c\x37\xd9\x76\xd9\x24\x9a\x12\xef\x78\xd1\x64\x87\xab\x0b\x1d\x97\x4c\xbc\x8e\xb4\x6d\x17\x4c\xbe\xcf\xf5\x92\x47\x5c\x2e\x89\x9c\x4b\x9a\x96\x34\x7e\xa9\x24\x6a\x65\xed\xb0\xce\x56\x16\xbd\xbf\xee\x09\xd8\xd6\x6b\x24\x3b\x5e\x22\xe9\xbc\xf2\x13\xee\x8a\xd8\xe1\xda\x8f\xc9\x53\x88\x32\x96\x4c\x56\xf8\x2a\x65\xb7\x61\x50\xfb\x4a\x4a\x10\xc4\x4c\x6d\x23\xe6\xfa\x84\xe2\xe6\x18\x21\x0c\x02\x14\x2d\x99\x79\xa6\xb9\x25\xaa\xb7\x06\xa7\x14\x27\xe9\x37\x96\x08\x24\x11\x3f\x00\x7c\xcb\xd9\x5c\x36\x89\x8f\x80\x8f\x40\x77\x92\x65\x64\x85\xf9\x79\xbe\x05\xa3\x5e\xe5\x61\x07\xe6\xa6\xb1\x6d\x74\xf1\x71\x7a\x75\x36\x81\xd1\x56\x05\xe0\x5d\x5e\x69\xff\x85\x9e\xfa\xcf\x42\xd1\xd2\xf3\x65\x2b\xbc\x59\xb0\x24\x73\x96\x8c\x28\x4a\x39\x6a\xba\xc7\x22\x7e\xdb\x06\x9d\x72\x8a\xd2\x65\x27\xec\x78\xc5\x2f\xc8\xfc\xec\x0e\x61\xce\x42\xcc\x0a\x38\x7a\x5b\xc4\x23\x5d\x5b\xb5\x70\xc9\x49\x3a\xae\x2c\xf5\x55\x6b\x4b\x97\x54\x00\x28\xb0\x1c\xc8\xcb\xd7\xc9\x61\xfa\x8d\xd5\x17\x92\x7e\xf2\x2f\x21\xa9\x7f\xff\xc4\xdd\xf9\xe7\xb1\x3c\x70\x2a\xd2\x4a\x8b\x71\x9a\x0c\x60\x12\x67\x9c\x1b\xa6\x47\xbd\x85\x11\x09\xf8\x71\x80\x76\xd6\xcd\xb5\xb8\x98\xc3\x8e\xde\x9f\x73\xab\x78\x8d\xeb\xdf\x5e\xad\xf3\x6f\x9e\x2d\xf4\x03\xc3\x73\x75\xdc\x2b\xab\x67\x0a\x1e\xc0\x1b\xd7\xc9\xf4\xe7\x56\xfe\x7d\xf0\x8b\x75\x85\xbc\x29\x4a\xfc\x3a\xb4\xea\x48\xde\x95\x3f\xf8\xb7\xa2\x7a\x53\x94\x81\xfd\x84\x5f\xb1\x5f\x8e\xe9\xad\x18\x02\x8c\xd3\x22\xe3\xbd\xdf\x5c\xef\x79\x97\x52\x90\x7e\x63\xe0\x15\xa0\xe8\xf7\x55\x41\xd1\x5e\x2f\xfd\xc6\x0e\x58\x7e\xdb\xdb\x0f\x02\xa3\x4c\x00\x63\xf4\x4d\x0c\x1b\x9c\x8d\xa6\x7b\xeb\x65\x7a\x3f\x41\x9c\x16\x88\x25\x47\xc3\x4d\x78\x98\x10\x5f\x63\xdc\xa8\x24\xab\xfc\x73\xca\xb3\xc5\x05\x99\xb3\xbd\xf0\x18\x6d\xb8\xc1\x2b\xd0\x0b\xd8\x67\x6f\x2d\x11\x73\xa2\x67\x97\xd2\x2c\x50\x59\x26\xc3\x6c\xa9\x05\xb0\xf7\x5b\xb0\xc7\xb3\x03\xb1\xbe\x02\xe9\xe1\x35\x2e\x35\x44\xd1\x4a\x04\xdc\xea\xa7\x10\x2c\x5a\xbb\xcb\xf2\x0f\x9b\xfc\x4b\x2c\x5b\x48\x15\xaf\x7a\x46\xef\x74\x2f\x71\xe8\x6d\x6b\x70\x1d\xad\x1e\x62\x29\xfd\x30\x87\x82\x55\x19\x35\x6d\x2f\xe9\xf5\xdc\xdd\xf5\xda\x98\xd0\x7d\x25\x52\xbf\x5a\xe1\xc0\x2b\x30\xd3\x8a\xbd\x87\x84\xb5\xeb\x83\x8c\x60\x8e\xee\xf9\xbe\xc7\x1f\x39\x8b\x14\x17\x75\x1f\x00\xbc\x02\x72\xc8\x40\xff\x1e\x50\x54\x95\x69\x86\xf6\x0e\xff\xed\x5f\xf6\xbe\x7e\xcd\x7f\xde\xff\xed\x70\xde\x6f\xf1\x2f\x85\x14\xf6\x41\x8e\xb2\x08\x6e\x00\x28\xe2\x2b\x8a\x81\x3a\xb7\x1f\xcc\x28\x59\x8e\x16\x29\x15\x9a\xb9\x27\x86\x79\xc2\x2b\xfe\x13\xd0\x83\x9a\x50\xd5\x52\x11\xd8\x6a\x58\xff\xc1\x78\x4a\x39\xca\x5f\x3f\x24\xa0\x27\x32\x9f\x5e\x3f\x06\x69\xcb\x4f\xe2\xca\xd3\x17\xc5\x0a\xdd\x3c\x72\x1d\x45\xa3\x55\x2d\xa9\xff\x88\x03\x0a\xe7\x9a\x80\xa3\x28\x00\xb9\x43\x94\x16\x39\x62\x49\x7c\x79\x0a\x91\x6e\xb2\xfa\xd0\x0e\xf8\xd2\x35\x00\x48\xf1\xc6\xe9\x12\x25\xd6\xa2\xfa\xf5\xc6\x27\x5f\x40\x8f\x2d\x7a\x7d\xd0\x3b\xc8\x7a\xcd\x53\x21\xac\x5d\x68\xaf\x63\x2f\x83\xa3\x36\xd1\x4d\x65\xb7\xe8\x1b\x78\x05\x2e\x53\xbe\x18\xcc\x4a\x42\xe8\x9e\xfc\x93\xca\xd6\x8d\xbd\xfd\x9f\x8e\x86\xc3\xe1\x30\x2c\x13\x25\x99\xef\x59\x4b\x02\x3f\x83\x5e\xd2\x03\x3f\x37\xe6\xe5\x67\xd0\x3b\x14\x72\x20\x67\x79\x25\xde\xc8\xe9\x7e\x06\xbd\x25\xab\x17\x2a\x1f\x5b\x92\x6f\x08\x39\xa2\x34\x2a\xdd\x72\x2f\x18\x29\xd1\x40\x10\xd2\x43\x94\x1e\xf7\xfa\x40\x8c\x08\x52\x2b\xfe\x31\xc4\xb5\xbb\xda\x6b\xa6\xd8\x07\x6b\xe1\x1c\x06\x54\x25\x38\x7b\x4a\xca\x1b\xc5\x1d\xe4\x04\xa3\x7d\x61\x44\x04\xe9\x3b\xeb\x8c\xcf\xf0\x7a\x42\xc9\xb6\x25\x62\x2c\x9d\xa3\x3e\xc8\x6e\x3a\x2c\x03\x93\x91\x95\x30\xd2\x82\x89\x07\x82\x51\x7b\xc2\x13\x9d\xa6\x1c\xed\xed\xef\x0f\xe6\x6a\x39\x01\x37\x04\x76\x56\xd9\xda\xc5\x08\xfb\x99\x34\xbf\xa2\x6a\x52\xd6\xf1\x9e\x82\x67\xa1\xd8\x4f\xf1\x24\x22\x31\x6c\x90\xd9\x81\x63\xc3\xf0\x27\x6e\xfa\xb6\x3d\xdf\x8d\x0d\x9a\x3a\x15\xa2\xee\xa4\xd1\x7a\x0b\x13\xd0\xec\xa5\x08\x93\x18\x4f\x97\x55\x12\xd9\xa6\x2d\x1a\x1d\x65\x3a\x78\xfc\x3e\x81\xc7\xec\x15\x88\xed\x17\x70\xf8\xad\x97\x1a\x67\xb6\xdc\xe0\xca\x88\xf6\x5b\x75\xba\x89\xe9\x8e\xef\x64\xcd\x12\x8d\x15\xb4\x07\x4e\xe3\x9d\x6e\x19\x1d\x72\x6c\xa9\xab\x89\x90\x62\xba\x20\x94\xeb\xa8\x61\xb2\xea\xa8\xb1\x69\x99\x48\x24\xd0\xd6\x58\xdc\x68\xea\x1d\x5c\x10\x3c\xd7\x33\x1c\xb0\x6c\x81\xf2\x95\xfd\x55\x98\xa9\x7e\x76\x76\x5f\x51\xc4\xea\x5a\x8f\x24\x4e\xbf\x71\xfa\x8b\xd4\x69\xa6\x57\xf2\x96\x61\x7b\x34\xb6\x6f\x53\x8d\xc8\xd5\xd9\xf3\x3c\x40\xb0\x3e\x38\x75\xce\x5e\x2b\x7d\xfa\xf8\xb5\xbe\x18\xfd\x15\x26\xe0\x6b\xdd\x00\x22\x7d\xc0\x66\xf3\x15\xf6\xc1\x57\xa8\x8d\x79\x0b\xa0\xef\x3d\x4a\x00\x63\x8f\x43\x55\xd5\xc0\x16\xa9\xc4\x69\x8c\xe8\xb2\x60\x2c\x94\x61\x01\x37\xc5\x32\x60\x43\xbb\x06\xec\xea\x68\xd6\xb4\x1f\xaa\x54\x3b\x39\xc7\x77\xe4\x16\x85\xbe\x73\x52\x3f\x53\x6d\x42\x4f\xe4\xbb\x51\xf8\x14\x93\x4a\x07\xc8\x9c\x52\xa7\x29\x2a\x32\x13\x96\x68\xa2\xdd\x80\x9e\x44\x1b\x13\x77\x29\x4e\xb8\x72\x1d\xfa\x4c\x86\xba\x5d\x3f\xd1\x6f\x02\xdf\xc5\x0b\xdc\x16\x9f\x18\x60\x7a\x6f\x83\xb7\xc4\xc3\x1a\xf5\xfc\xdb\xe1\xc6\xe7\xfb\xbc\xa6\x77\xaf\xe5\xeb\x45\xcd\xa4\xe8\x07\x01\xfc\x2f\x6b\xd8\x4c\x51\xe7\x9b\x7a\x9d\xde\x87\x0d\xbc\x52\xcf\x0b\xbd\x1b\x9d\x4c\xed\xe8\x02\x0d\x0c\xeb\x7b\x4b\xd6\x02\x10\x5d\x93\xf3\x71\x13\xab\x2b\x3f\xfc\x05\x05\xf7\xdc\x21\xb2\x79\x3b\x9d\x39\x44\x0b\xd8\x4e\x55\x3d\x5a\x95\x72\x2b\xfe\xd6\x6b\xf7\x2e\x42\x77\x01\xcc\x3e\x8e\x70\xe7\x31\x0e\x27\xbc\x3a\x12\x14\x31\xa4\xad\xbe\x4f\xa9\x2c\x19\x2a\x1f\x2e\xff\xd7\x8a\xdc\x9a\xb4\xd8\x71\x45\xf8\xb0\xc2\xf2\x1b\xf6\x41\x85\x75\x19\xc3\x07\x8b\x7f\x99\xec\xfb\x7f\x74\xac\xb3\x02\x09\x91\x6a\xa9\x2b\x49\x9a\xdf\x34\x2d\x75\xaa\xdb\xf3\x06\x45\xce\x1f\x22\x63\x94\x3a\x23\x5a\x9f\xe4\xb2\x37\x94\x2c\x83\xcd\x79\xdb\xb1\x4d\x5c\x5c\x9f\x0b\xbe\xd8\x01\x57\x76\xbc\x95\xf8\xec\x38\x39\x59\xf1\x05\xa1\xc5\x1f\x28\xd8\x78\xea\x8d\x0a\x1d\x57\x1b\x05\xd5\x20\x5f\x7f\x0a\xa0\x71\x9e\x38\x17\x7d\x82\x42\x5c\xff\x75\xbd\xdd\x9a\x9a\x9f\x4d\xf2\xbf\x46\x64\xdb\x9c\xe9\x2f\x49\xa2\x3f\x18\xa6\x8d\xce\x29\x2a\x91\x90\x93\xe6\xa4\x1a\x4e\x90\x48\xce\xb7\x18\x25\xf9\x9d\xdf\x11\xc1\x9c\xaa\xce\x19\xb7\x15\x11\x5e\xa5\xce\x7d\xd8\x75\xfd\x91\x0e\xc8\xe4\xe5\x70\x61\x63\x9b\x7e\x01\xfd\x8d\x32\xab\x3f\xaf\x81\x4f\xab\xca\x04\xee\x70\x3d\x21\xb6\x19\x5c\xfb\xbf\x00\x00\x00\xff\xff\x1d\xdd\xb8\xc8\xee\x5d\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

