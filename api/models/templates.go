// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x3c\x6b\x6f\x1b\xbb\x95\xdf\xf3\x2b\x08\xe2\x2e\x9c\x14\xb2\xfc\xb8\xd8\xee\x76\xba\x59\xc0\x91\x95\x44\xad\x9d\x68\x25\x27\x17\xdb\xc4\x28\xe8\x19\x4a\x9a\x5a\x22\xe7\x92\x1c\xc7\xbe\x82\xfe\x7b\xc1\xc7\xcc\xf0\x29\xc9\x8f\xb4\xb8\x49\x34\x73\x78\x78\x78\x78\xde\x3c\x9c\xf5\x1a\x14\x78\x56\x12\x0c\x20\xaa\x2a\x08\x36\x9b\x57\x00\xac\xd7\xe0\x17\x54\x55\x20\x7b\x0b\xfa\x67\x55\xd5\x3d\x5c\x21\x52\xce\x30\x17\xea\xcd\x65\xf3\x43\xbf\x7e\x05\x00\x00\xf0\xec\xb7\xe9\x15\x5e\x55\x4b\x24\xf0\x7b\xca\x56\x48\x7c\xc5\x8c\x97\x94\x40\x90\x01\x78\x7a\x7c\x72\x7c\x78\xfc\x97\xc3\xe3\xbf\xc0\x9e\x06\x1f\x50\x52\x94\xa2\xa4\x84\xc3\xcc\xa0\x50\x33\x09\x83\x03\xc0\x1b\xb4\x44\x24\xc7\xec\x30\xef\x40\xfd\xb9\x83\x41\x15\xa3\x39\xe6\xfc\x51\x63\x18\x9e\x97\x5c\xb0\x87\x5d\x83\xe0\x88\x08\xcc\x08\x5a\x4a\x8a\x01\x7c\x4f\xb2\x6c\xf8\x7b\x8d\x96\x72\x05\xdf\xe4\x93\x09\x9e\xc1\xcc\x02\x03\x9b\x1e\x80\xff\x8f\x39\x04\xd7\x60\xd3\x6b\xb0\x8c\x59\x79\x87\x04\xde\x81\xa4\x81\x8a\xe3\x78\xb7\x44\xe4\x76\x8a\xf3\x9a\x95\xe2\xe1\x03\xa3\x75\x25\xd9\xbc\xb6\xd1\x81\x0c\x7c\x5b\x2b\x6c\x72\x03\x5c\x58\x89\x13\x5e\xeb\x75\x19\xa4\x70\x8c\x18\x5a\x61\x81\x99\x1a\xba\x7d\x47\x2a\x09\xfb\x88\xdd\x88\xc2\x37\x6b\x19\x2c\x6b\x2e\x30\xb3\xc4\x00\x00\x78\xf5\x50\x61\x4d\xb8\x60\x25\x99\xc3\x5e\xf7\xea\x1c\xcf\x50\xbd\x14\xea\xad\xfb\x9c\xe7\xac\xac\x44\x23\x73\xd0\xbc\xea\xb8\x76\x8e\xab\x25\x7d\x58\x61\x22\x2e\xd1\x7d\xb9\xaa\x57\x91\x39\x33\x00\x3f\xd5\xab\x1b\xcc\x62\x53\x2a\x49\x3e\x4e\x4d\x9a\x01\x68\xf0\x82\x0a\xb3\x1c\x13\x81\xe6\x18\xd0\x19\x30\x6c\xc0\x1c\x08\x0a\x6e\x31\xae\x00\xab\x09\x29\xc9\x1c\xfc\x58\x94\x4b\x0c\x0a\x45\x97\x5c\xe6\x36\x92\x4b\xf2\x44\x92\x4f\xb6\x93\xac\xf1\xbe\x1c\xc9\x43\x72\x57\x32\x4a\x24\xcd\x71\x62\xd3\x5b\xba\x65\x47\xa3\x1b\x6a\x2b\xe4\x7e\xf3\x38\x08\x3f\x93\xe5\x03\x40\xcb\x25\xfd\x01\x50\x2e\x97\x2b\x17\x2b\x16\x25\x07\xd2\x06\xce\x18\x5d\x81\x92\xf0\xb2\xc0\x40\x2c\x30\xf8\x3a\x1e\x24\x68\xfe\x44\xed\x17\x67\x12\x21\x2e\xbe\xa2\x65\x8d\xb5\x56\x2b\xfd\xed\x29\x38\x70\x1d\x2c\xe2\xef\xf8\xe1\x67\xf3\xc9\x32\x39\x4f\x60\xd3\x17\x8e\xc1\xb4\xbe\x21\x58\x70\x83\x48\xf2\x89\x57\x38\x2f\x67\x0f\x92\x2d\x87\x8a\x47\x4b\x8a\x0a\xd0\x98\x08\x80\x49\x51\xd1\x92\x08\xfe\x53\x78\x36\xc1\x4b\x8c\x78\x6c\x41\x2f\x6d\x33\x26\xb8\xa2\xbc\x14\x94\xc5\x36\xe9\x79\x93\x4d\x69\xcd\x72\x0c\x72\x5a\x60\xc0\xba\x69\x02\x12\x5c\xdb\xfd\xd2\x54\x5c\x2d\x30\xb8\x70\xb6\x8e\x9b\xf9\xc0\x5c\x4e\x08\x66\x94\xb5\x4a\x11\x21\x4e\x0b\x46\x82\xac\x8b\x92\x8b\xff\x39\xfb\x6d\x9a\x65\xc3\xc1\x69\x96\x69\xe0\x2c\x1b\x15\xff\xfb\x14\x52\xbf\x8e\x07\x80\xeb\xf9\xf6\xa3\x2a\x2d\xf7\x3f\x87\xb8\xca\xa8\xc7\x7e\x44\x36\x01\x92\x43\x9d\xa7\x7b\xaf\x27\xc3\xff\xfb\x32\x9a\x0c\xcf\xdf\x80\x0b\xb4\xba\x29\x10\x18\xd4\x5c\xd0\xd5\x15\xad\xca\x1c\x7c\x44\xa4\x58\x62\x06\x8c\x3a\x80\x06\xa3\x45\xe6\x65\x49\x2e\x30\x99\x8b\x85\x22\xf2\xc4\x7e\xe5\x19\x80\x90\xbe\xf1\x20\xc1\xb9\x8e\x69\x5f\xc7\x03\xc9\xb1\xa7\x32\x6c\x07\x83\xc6\x83\xc1\xe8\x7c\xf2\xe2\x22\x2f\x67\x96\x88\xe3\xd3\x3b\x51\xd1\x25\xaa\xaa\x92\xcc\x6d\xf9\x86\x63\xca\xc4\x98\x51\x41\x73\xea\x79\x9e\x85\x10\x95\x8e\xeb\xa4\x6c\x61\x82\x99\x05\x07\x3f\x5e\x5d\x8d\xa5\x49\x1b\x11\x2e\xa4\xa6\xc5\xde\x29\x5d\xc7\x29\x88\x29\xec\xb8\x63\xa6\xe3\xdb\xe7\x9b\x3e\x7b\x42\x67\x46\x91\x6f\x59\xdf\xd5\x20\xb9\x3c\xf3\x2a\x3d\xd9\x74\x7a\xe1\x4f\xb5\xdc\xb2\x34\x09\xfe\xbc\xa9\xc0\x26\xba\xdf\x13\xcc\x95\x55\x76\x36\xdc\x52\xb9\x09\x5d\x26\xdc\xa8\xd2\x89\xd1\xd9\x65\x96\x29\x18\x6b\x25\x63\x46\x2b\xcc\x44\x89\x5d\x2b\x29\xdd\x1e\xe7\xf5\x0a\x4b\xf8\x31\x5d\x96\xf9\xc3\x39\xcd\xeb\x20\x6e\xf2\x6c\x85\xcc\xa5\x4e\x0f\x4f\x8e\x0f\x4f\xfe\xcb\x9a\x44\x01\x4d\x05\x12\xd8\x8c\xff\xe6\xbc\x02\x1e\x3e\x05\x3e\x9c\xcd\x70\xae\x9c\xb1\x72\xbf\x1e\x36\x43\x7a\x49\xf2\xb2\x6a\x52\x9e\x29\x66\x77\x65\x8e\xb5\x83\x5e\x2a\x7b\xd4\x47\x2b\xf4\x07\x25\xe8\x07\xef\xe7\x74\xe5\x64\x29\xf6\x42\x73\x63\xd0\xbe\x01\xc8\x05\xcf\xba\x85\x77\xde\xbd\xf9\xdf\xc6\xf9\x6d\xbf\x75\x30\xc3\x31\x12\x0b\x49\xfc\x51\x4e\xc9\x1d\xbd\x3f\x82\xee\x5b\xc9\x50\xcd\x72\x97\x15\x3e\x23\x34\xe4\xc3\x27\xb4\xd2\xdb\x58\xac\x4a\x22\xd3\x41\x24\x28\x0b\x58\x02\x77\xec\x13\xd8\x77\xaf\x40\xb0\x5f\x92\xbf\xc1\x8e\x58\x9c\x83\x7f\x92\x3f\x1b\xf9\xd4\x0f\xc0\x66\x07\xf7\xec\x5f\x1d\xe4\x26\xb0\xb4\x96\x84\x6f\x91\x6e\xed\x81\xb2\xec\x7d\x4d\x34\x55\x7b\x09\xf9\x80\x16\x38\x14\xe8\xe9\xaf\xef\xea\xfc\x16\x8b\x2e\x0d\xfe\x1b\x2d\x8d\x84\x1c\xc2\x9e\xfc\x4b\xef\x2b\xec\x59\x59\xb1\x22\x63\x82\xe7\xca\x92\x6f\xc0\x75\x28\x6e\x70\xfa\xab\x09\xa8\x7d\xac\x1a\x29\xd3\xae\xf2\xc8\x41\xdb\x96\x2a\x64\x62\x7c\xa4\x05\xfb\x68\xa6\xaa\x18\x25\x25\xfd\x3f\xca\x0a\xea\xb9\x92\xc2\x68\x3c\xb1\x44\x56\x92\x02\xdf\xf7\xf1\xbd\x49\x4d\x1c\xb0\x4b\xbc\xa2\xec\x61\x5a\xfe\xa1\x98\x7a\x72\xfa\xdf\xee\xeb\xc6\xba\x68\xd2\x3f\x60\x71\x26\xb4\x6c\x04\x26\x48\x4a\x06\x23\x81\xba\xc1\x49\x4d\x44\xa9\x25\x99\xd0\x02\xff\x8b\xbb\x13\x5c\x95\x2b\x4c\x6b\x25\x61\xbf\x1e\x1f\xc3\xb4\x44\xc4\xf3\x7e\xd6\x5a\x47\xd0\x4f\xa4\xfc\x39\xa3\xe4\x5f\xf4\x66\x1f\xd0\xa6\x3a\x60\x83\xee\x59\x50\xe0\xda\x10\x6d\x41\xde\x16\x75\x52\xd8\x63\x83\x9a\xc8\x17\x26\x90\x72\xa1\x4b\x32\xae\xcf\xf8\x5c\x8b\xaa\x16\xbb\xeb\x58\xd4\xc0\x81\xfe\xf6\xc5\x75\x70\xfb\x16\xae\xe2\x23\xba\xfc\x41\x08\x2f\x86\x91\x56\x4a\xe6\x5a\x5a\xd8\x8c\x16\xb4\x70\xbe\x6f\x7c\x25\xff\x5b\xaf\x65\x4e\xa7\xf0\x5a\xa5\xc3\x58\xbd\xad\x29\x1a\x32\x44\xe6\x18\xfc\x72\xab\x6a\x86\x43\x22\x98\x32\xb2\xbc\x59\x0c\x1c\x12\x74\xb3\xc4\xc5\x7a\x0d\xea\xaa\xc2\x4c\x42\x6e\x36\x9d\xf8\x7f\xa2\x4a\xf6\xa3\x45\x32\xf9\x64\x8a\x97\xda\x58\x7e\x03\xc7\xb6\x32\xbb\xf8\xde\x37\x5a\xac\xed\x85\x54\xf0\xc3\x13\xa5\x37\x46\x75\xba\x75\x6d\x5f\x61\x53\xc3\xf2\x56\x87\x53\xab\xeb\xc8\xc0\x0e\x19\x56\x5c\xd1\x18\xd7\x01\x5d\xad\xd0\x39\x5e\x96\xab\x52\xe0\x42\xc6\x3b\xd0\x2a\x00\x75\x75\x9c\xde\x71\xef\xf4\x3f\xff\x6c\xbf\x73\x72\x05\x5d\x04\x0a\xaa\x37\xac\x26\x3d\x30\x18\x7f\x01\x35\x29\x85\x7e\x82\xa5\xfe\xe0\x1e\x40\xa4\x00\x97\xef\xe4\x88\xc9\xd9\xa5\xf5\x06\x76\xf2\xbd\x2f\x7b\x5a\x11\x54\xeb\x87\x17\x74\xee\xa6\xab\x11\x79\x6b\x61\xb4\x84\xf5\x76\xcc\x60\x29\x72\x6a\x0e\xd7\x5b\xd1\x39\x57\x7f\x6a\xa0\x7d\xa6\xe8\xcc\xca\x5e\x85\xef\x44\xb1\xbc\x9c\x75\xc3\xfa\x1f\x11\x1f\xb7\xbb\x61\x64\xc3\x93\x9e\x0e\xd8\xc4\x57\xdc\xaa\x39\x5b\x62\xd4\x97\x02\x06\x36\x9b\xe1\x60\x7a\x85\xf8\xed\xb9\x24\xbe\x14\x91\x0c\xb2\xc2\xa4\xe0\x9f\x95\xdb\x73\x3c\x7b\xaf\x8d\xe0\x94\x0f\xb9\x8e\xe4\x82\x1a\x5c\x26\x77\xfe\x1c\x16\xb0\x15\xe0\x9c\xf4\x8f\xf7\x8b\x02\xcc\xc4\x57\xf4\x16\x93\x9d\x2e\x2e\xe9\xde\x4c\x94\x96\x88\x18\xbc\x38\x61\x2a\x50\x7e\xab\x46\x28\xb5\x97\xdb\xd5\xf2\x10\x86\xb1\x83\x5d\x54\x6a\x11\x35\xcf\x3c\x50\xaf\xc6\xd9\x82\xdb\xcf\xbd\x21\x6d\x54\x62\x40\xe5\x6f\x0f\x44\x72\x7c\x8f\x80\xb5\x09\x55\xdd\x05\x05\xa1\xea\x68\x85\xe6\x16\x9c\xfa\x19\x03\x5c\xaf\xa5\xc0\xe2\xbe\xb2\x42\xa4\xe8\x9f\x31\x86\x1e\x36\x9b\x30\x5c\x35\x00\x91\xe4\x02\x38\x42\xad\x02\xa0\x1e\xf8\x05\x2f\x55\x70\xab\x44\x7c\x37\x7a\x9b\x18\x85\x61\xb3\xe9\xad\xd7\x78\xc9\xf1\x66\xb3\x5e\x63\x52\x24\xc7\xc0\xf5\xba\x99\x6b\xb3\x81\x51\xd2\xe2\xc3\xaf\x43\x56\xc8\xf9\xa4\x02\x13\x6c\xd3\xac\x4b\x0d\x00\xc2\xed\x6c\x59\xaf\xc1\x9d\xb4\x72\x91\xa1\x9b\x20\x2b\x8a\x13\x05\x07\x55\xdd\x09\xb8\xe5\xe2\x4e\xe2\x2e\xae\xdd\xff\xc0\xcf\xf9\x88\x75\xe8\x19\xc5\x7d\xfa\x5c\xdc\xa9\x92\x7f\x0b\x70\x36\x1e\x37\x92\x28\x4d\x65\x52\x68\xa5\x16\x9e\x0d\xfe\x6e\x60\x31\xb9\x33\xbf\x13\xb0\x67\xbf\x4d\xff\x39\x19\x7e\x18\x7d\xfe\x64\x8f\xb0\x9e\xc6\xc7\x59\xb1\x09\x7e\xe8\x81\x5f\xf4\xa6\x69\x31\xb5\x96\x02\x22\xbb\xad\xe4\x53\x0a\x87\x1e\x03\x61\x0c\xc8\xd8\x6d\x89\xdd\x44\x34\xad\x60\xe8\xbf\x42\x69\x48\x0b\x69\xe7\xb1\xf6\x5e\x46\xff\xa2\x24\xb7\x5f\x11\xe3\x71\xe2\x02\xda\xb6\x52\x95\x9a\x1d\x5e\x7c\xfe\xf0\xcf\x0f\x93\xcf\x5f\xc6\x29\xa7\x1e\xab\x27\x4c\x3e\x0f\x86\xd3\x69\x68\xbd\xfc\x2c\x36\x10\xb1\xaf\x74\x59\xaf\x22\xe9\xbc\xcb\x08\xdc\xbf\xa4\x35\x11\x32\xae\x34\x03\xe2\x2c\xd0\x5e\x1a\xff\x0e\xfa\x1f\x29\x17\x00\x1e\xdd\x21\x76\xc4\x6a\x72\x54\xd0\xfc\x16\xb3\x3e\xa7\xf9\x6d\x6a\x6b\x25\xe9\x6a\xd8\x66\x93\xad\xd7\xfd\x01\x25\x02\x95\x04\xb3\xa8\xa8\x69\x0e\x4a\xa3\x92\x40\x96\x48\x53\x8f\xee\x34\xf9\x47\x61\xfa\xeb\xb9\xb5\x23\x69\xfd\x14\x1f\xa5\x9d\x4c\x10\x16\xcb\x94\x3b\xf2\x92\xe2\x95\x7a\x03\xda\x73\x65\x45\xd1\x27\xaa\x83\x3b\xe0\x83\x06\x06\x16\x0e\xef\x05\x43\x92\xc6\x5d\x3b\x19\xd1\xcc\x76\xe8\x25\xaa\x12\xdb\x1a\xdf\x2f\x39\xc8\x76\x9a\x46\xf6\x63\xec\x90\x7e\xb3\x3a\x2b\x0a\x86\x39\x6f\xc0\x1b\xed\x88\xb9\x96\x47\xa9\xcc\x33\xf8\xd6\x44\x86\x71\xae\x3d\x1d\xef\x98\x32\x61\xd5\xb8\xb7\xec\x48\x5f\x82\xa6\xd4\xc9\x17\xe2\x4c\x4a\x71\x4a\xde\xd3\x8e\x46\x4e\xb1\x5e\x83\xfe\xbb\xe6\x28\x6a\xb3\x91\x7b\x17\xb5\x25\xc0\x58\xb2\x4e\xce\x13\x5b\x94\x10\xfd\x9f\xb2\x4d\x63\x56\xde\x95\x4b\x3c\xc7\x45\x67\xe2\xba\x67\x01\x81\xfb\x96\xe7\xcc\xee\x47\x38\xe6\x86\xfe\x6d\x53\x8d\x8e\x45\xbd\xf4\x3a\x16\x2b\xba\xd9\xc2\x2b\x87\x3d\x3a\x2c\xfc\x88\xb8\xb5\x1d\xaf\x7c\xf6\x77\xc9\x4b\x03\xd5\x94\x28\xd5\x64\x89\x00\x35\xc6\x7c\x37\x01\x88\xe4\x0e\x2a\x69\x79\x15\xe3\xbe\x9b\xf8\x0d\x07\xd2\x4a\x9a\x52\xf5\x7e\x25\xca\xae\x05\xa5\x15\xcf\xe6\x99\x17\xa3\x77\x0d\x19\x03\x4a\x66\xe5\xbc\x66\x7e\x5a\x6f\x00\x4d\x5f\xc5\x47\x8c\x96\x62\xf1\x30\xd6\xdd\x15\x9d\x54\x04\x8d\x1d\xa1\x45\x6a\xba\x49\xb6\x8d\x35\xfd\x26\xae\x60\xf9\x14\xf3\x92\xe1\x62\x20\x1d\x63\x34\xfc\x4b\x54\x4f\xf6\x0a\xff\x5a\x31\x89\x5a\x07\x78\x41\x51\xd1\xc8\x45\xcc\xbe\x44\x42\xc5\x56\x9d\xf7\x4b\x73\xec\x11\x92\x06\x33\xe2\xb5\x4a\x21\x3a\xc2\x8e\xdf\xb8\x76\x22\x82\xc6\xa6\xb5\xcb\x33\x3b\xb6\xec\x2f\xe9\x81\xa1\xf0\x8e\x34\xbc\x6d\x4e\x57\x7d\x6d\xc1\x4f\xa4\xc4\x51\x4d\x0a\xcb\x03\xdb\xf6\x37\xcc\xf5\x2d\x82\x3d\x63\x64\x4f\xb7\xab\x34\x14\x6d\xe0\x73\xcb\x67\x2d\x2b\xed\xda\xc8\x2f\xa6\x1c\xa3\xc8\xcb\xde\x1a\x7a\xfb\x63\xeb\xa9\x05\xdc\xcc\x32\x66\x78\x56\xde\x4b\xf8\x8a\x95\x44\xcc\x00\x6c\x70\xff\x07\x87\x2e\x4e\xbf\x0c\xd3\xb7\xbd\xa0\x55\x7b\x51\x5d\x76\x91\x39\xa2\x8e\x6a\x20\x4d\xcb\xac\xcc\x83\x7e\x83\x64\x8b\x9f\xbf\xd4\x9d\x68\x55\xbc\x17\xb4\xc3\x3c\x69\x4b\xe2\xd5\xcc\xf8\x76\xb4\x8d\x21\x32\xb5\xd8\x9b\x79\x9d\xa0\x35\xe3\xbd\x1d\x7c\x0c\x0f\x7f\x4a\x6b\xcf\x53\x28\x54\xe1\xc8\x53\x48\x93\x86\x52\x9b\xa4\x76\xb2\x09\x22\x05\x5d\x71\xf0\xba\x14\x14\x75\xb3\xbc\x09\x3c\xf4\xd6\x85\x3c\x69\xfb\xdd\x6a\x6d\xaa\x90\x69\x36\xf8\xd2\xb7\x7b\xbb\xa5\xa3\xd5\xbd\x96\xc7\x1e\x6b\x3d\x3e\x6e\x8f\x5c\xbc\xb1\x5d\x01\xdc\xaa\x29\xfb\xa6\x53\xee\x9b\x63\x9f\xe5\x38\x00\xcf\x3f\x4d\x75\xea\x74\xed\x1e\xfc\xff\x14\x71\x6e\xfe\xf9\x98\x20\x2d\x81\xdd\x29\xbf\x9a\x55\x43\x6f\xba\x97\x91\x70\xdf\x05\xfe\x04\xc2\x6d\xb1\xe9\xfb\x6e\x17\x08\x56\x63\x25\x8f\x7d\xdb\x58\x3f\x4f\xde\xfd\xb3\x83\x9f\x20\xf1\x11\x81\x4b\x35\xee\x3d\x93\x93\x7e\xb4\x7b\x2a\xa3\x39\x7b\x26\xab\xef\x33\x1a\xf1\x42\x05\xe6\x9e\x1e\x05\x29\x1c\xd8\xa3\xa4\x7e\xd8\x90\x1a\x14\x18\xdc\xa6\xc5\x11\x99\x9b\x84\xda\x4b\x31\xb6\xea\x9c\x81\xf2\x43\x46\x15\x71\xf6\x87\xe6\x7c\x3d\x4c\xe0\xe0\xa0\x2c\xd8\x48\xf2\x1b\x1e\xf7\xd5\xff\x8f\x8e\x23\x45\xef\x44\x55\xa6\x1b\x6d\xb5\x07\x98\x3e\xb4\x30\x8d\x4c\x25\x91\x70\x54\xd9\x2d\x47\x22\xaf\xc2\xfa\xfc\x7b\x46\x57\x56\xc4\xea\x68\x72\x00\x7c\x45\x53\xa0\x6e\x42\xb9\x2b\x34\xf4\xf6\x33\x92\xda\xda\x69\xd5\xd7\x2a\x1f\x15\x3e\x2b\x82\xe3\xe1\x5e\x52\x01\x62\x87\x9d\x5a\x68\x97\x88\x8b\x32\xef\x74\xbf\x24\xf3\x2c\xb3\x4d\x41\x27\xc4\x4f\x73\x0d\x4e\x5e\xbb\x87\x76\x76\xeb\x4e\x69\x4d\x57\x33\x9c\xe6\x0b\xbc\xc2\x00\x96\xdd\x45\x0f\x27\xfc\xd6\xef\x75\x2f\x48\xac\x0b\xc4\xea\x99\xd5\x5a\x37\x9a\x69\x2a\x9b\x7e\x55\x77\xfb\xad\x13\x7a\xb7\xad\xd5\x97\xc7\x00\xd0\xcd\x44\x1c\x05\x8d\x2a\x40\x47\xb9\x47\x58\xdb\x68\xdf\xb3\xd7\x94\x96\xa6\xe0\x6c\x2d\xb9\xe4\x51\x0c\x5b\xb8\xce\xe8\xda\xc2\x15\xb9\xe2\x2e\x45\x87\x60\xd5\xaa\x74\xce\x50\x49\x4a\x32\xd7\xfd\x5b\x9a\x0c\x23\x4b\x30\x53\x2e\xa7\x67\x77\xc7\xfc\xf9\xd8\x31\x66\x1d\x1e\xbb\x97\x02\xc0\x51\xb1\xc4\x56\x4b\x8d\x14\x32\xeb\x91\x4e\x05\x6d\x34\x8c\x72\xfe\x0f\x4a\x70\x33\x65\xf7\x4a\x97\x09\x06\x0b\x9c\xdf\xfa\xc5\x09\x53\x41\xb8\x5a\x30\xcc\x17\x74\xa9\x2a\x4b\xa7\xae\x40\x29\x26\xde\xa9\x2e\x3d\x45\x84\x1e\xd2\x3c\xf5\x0d\x0a\xbc\x42\x6c\x1e\xef\xbc\x0a\xca\x76\x16\xba\xc6\xa0\x81\xcd\x26\x4b\x4a\x68\x4a\x31\x9b\x40\xc3\xa0\xa2\x4c\xa4\x6a\x7b\xf6\x8c\x48\x2c\x3c\x13\x17\x9e\xda\x7a\xfc\xd7\x23\xad\x1d\x70\x80\xbf\x90\x45\x94\x9b\x5d\xba\x6b\xed\x49\xd3\x78\xfa\x92\x7e\xcb\x71\xee\x9a\x9d\xfd\xe8\xe9\x8a\xed\x3e\xdc\x78\xc9\x6b\x87\x55\xe3\xf7\xf7\x6f\x2e\x6a\x4f\x19\x55\xc2\x1b\x84\xee\x4f\x4c\xe0\x7a\x5d\x2f\xee\xf4\x22\xda\x18\x9a\xf4\x9e\xb6\x23\xd8\xdb\x45\xc6\x7a\x7d\x1d\xce\xf9\x00\x71\xce\x75\x78\xf4\xc4\xb1\xd2\xc9\x23\xf3\xc5\xc8\x71\xd6\x74\x7a\x61\xf1\xaa\x71\xb2\x3f\x6f\x2f\x02\x29\x48\x9a\xee\x6d\xa0\xcf\x25\x23\xac\xa0\xfb\xfd\xaa\x2f\x1b\xbf\x24\x9a\x80\xf7\x54\xe0\x50\x61\xef\x1f\xb6\x69\x6d\xa4\x98\xe9\xf6\x16\x6b\x87\xe3\xe0\x89\x36\x5d\xab\x41\x4d\xbc\xe4\x80\x5b\xaf\x62\xc7\xe1\x42\xb0\xf2\xa6\x16\x7a\xc1\x89\xc3\xb0\x86\x98\x5d\x64\x00\x27\xd5\x94\xee\x2a\x3c\x5c\xd9\x04\x27\x20\x9e\xfe\x70\xd3\xc1\xf7\x7c\x0d\x0a\xfa\x9c\x7b\xfe\x66\x85\xb2\xf2\x6c\xf9\xb9\x78\x37\xa0\xf4\xb6\xc4\x53\x51\xe6\xb7\x25\xc1\x9c\xb7\xf1\x83\x5c\x95\xbb\xbb\x68\xa6\xea\xa7\x0f\xd0\x61\x4b\xb4\xac\xbc\x06\x7b\xa4\xbd\xa9\x64\xca\x5c\xed\x6d\xad\x05\xe8\x84\x3b\x76\x2f\xb8\xed\xe8\x6d\x0f\xb5\x76\xc6\xc2\x9b\x70\x8c\x07\xd0\x71\xab\xdd\x18\x2b\x19\xd8\x95\x96\x47\x7a\x84\xad\xde\x39\xd5\x20\x32\x60\x94\xfc\x8d\xde\xf0\xb0\x07\x56\x46\x51\xc4\xbb\x86\xb1\xeb\x12\x46\x32\x11\xde\xf3\x02\xc6\x1e\x2d\xfd\x5b\x2e\x5f\x04\x0d\x5c\xbb\x2e\x5e\xbc\xcc\xb5\x8b\x47\x5c\xba\x48\x9c\x43\xda\x96\x34\x7d\xd9\x22\x69\x65\xdd\xb0\x6e\xff\x6b\x16\xbb\x2f\x59\xec\x79\xc5\x62\xeb\x85\x98\x78\xb7\xc0\x1e\x97\x62\x6c\xce\x42\x9c\xf3\x6c\x52\x93\x2b\xc4\x6f\xe3\xa0\xee\x85\x8d\x28\x88\x9d\xe0\x26\x8c\xf6\x19\x23\xed\x11\x42\x1c\x04\x68\x5a\x72\xfb\x24\x73\x47\x6c\xef\x0c\x46\x8c\x64\xe8\x07\xcf\x24\x92\x84\x37\x00\xa1\xfd\x6c\xaf\x62\xa4\x47\xc0\x47\xa0\x3b\xcb\x73\x5a\x13\x31\x2a\x76\x60\x34\xab\x3c\xda\x82\xb9\xed\x06\x1b\x5c\x7c\x99\x5e\x0d\x27\x30\xd1\x1d\x00\x9a\xa4\x22\xfa\x2e\xf6\x34\x7c\x16\x44\x35\x49\xe5\xb2\x0c\x67\xb4\x86\x22\x6d\x5b\x7b\xbb\x26\x65\xdf\x92\xd7\x70\xfc\xa2\x47\x6b\x29\x77\x17\x37\x60\x83\xcc\x3a\x75\x75\xda\xef\x0e\xa5\xd7\xb0\x5a\xf7\x0e\xa5\x11\xb7\xad\x40\x70\x03\x66\x61\x1e\x58\x30\x5b\xee\xb7\x34\xa4\x46\x8f\x39\xb7\x5e\x6b\xb1\x32\xc0\x93\x63\x27\x69\x0f\xee\x1d\xc1\x7f\x94\xd5\xfb\x72\x19\x69\x21\x86\xdf\x49\x98\xfb\x1e\xd4\x1c\x03\x2e\x58\x99\x8b\x83\xbf\xfa\x46\xea\x0e\x31\x80\x7e\x70\xf0\x16\x30\xfc\x7b\x5d\x32\xfc\xfa\x00\xfd\xe0\x87\xbc\xb8\x3d\x78\x13\x05\xc6\xb9\x04\x26\xf8\x87\x1c\xd6\x1f\x0e\xa6\xaf\xe3\x70\x46\xb8\xc1\x5b\x70\x10\x91\xe1\x38\x21\xc2\x39\xbf\x95\xf3\xac\xfd\x14\x3d\x2c\x6e\x87\xdd\xe6\x2d\x70\xbc\x29\x4d\xbe\x92\x34\x35\x32\x70\x90\x81\x03\x18\x6d\x1e\xd8\x76\xb4\xdc\x03\xf0\xa0\x17\xed\x48\x8b\xe7\x83\x7a\xda\x83\xec\xe0\xc0\x5f\x79\xd0\x30\x81\xef\x2b\x19\x74\x36\xa2\x07\xde\x82\x99\x11\xeb\xd7\xf8\x0e\x13\xd1\x03\x39\x25\x02\xdf\x8b\x37\x01\x7f\xd4\x2c\x92\x95\xfa\x64\x34\xc2\x41\xd8\xfc\x83\x0b\xc4\x04\x2e\xde\x3d\x64\xe0\x40\x6a\xc1\x41\x2f\x05\xe9\x6e\x4b\xe6\x6f\xd3\x37\x45\x54\xdf\x9c\x01\x5f\x27\xd1\x18\x89\xc8\x9a\x7f\xa4\x01\xa5\xf5\xcc\xc0\x49\x12\x80\xde\x61\xc6\xca\x02\xf3\x2c\xbd\x3c\x8d\xc8\xf4\x4a\x7c\xee\x06\x7c\xdb\x36\x00\x28\xa9\x21\x68\x85\x33\x67\x51\x92\xe3\xaa\x11\x3a\xfb\x06\x0e\xf8\xe2\xa0\x07\x0e\x0e\xf3\x83\x1e\xd0\x40\xe6\x9d\x94\x84\x6d\xc8\xaf\x53\x2f\xa3\xa3\x36\x81\x86\xc8\x3f\x70\xce\xfb\x4c\x3b\xea\xd7\x7a\x8b\x5b\x61\xe8\x17\x94\xe0\x50\x17\x37\x7f\x0d\x0a\x4f\x5d\x68\xb4\x2d\xe8\xb5\x95\x6d\x47\x2c\x2b\x95\x69\xba\xa0\x4c\x18\x7d\x99\xd4\x5b\xe2\xda\xa1\xe4\x19\xcf\x32\x05\xb4\xd3\xa0\x5b\x86\xbc\x7f\x41\xc9\xbc\xb1\xdb\x3c\x5f\xe0\xa2\x76\x6f\x28\x4f\xcd\xb3\xe1\x7d\xc5\x30\x6f\x22\x2b\x45\x9c\x79\xe3\x9d\xe4\xe9\x0a\x62\x90\x66\x2a\xd3\x9d\xb4\xef\x9d\xbf\x4a\xdc\xee\x18\x15\x11\x82\x4d\xb1\xd2\xab\x77\x56\xa6\xe2\xf7\xbd\xb9\xbb\xf3\x1d\x66\xe0\xbb\x1a\x6b\x32\x4a\xb0\xd9\x7c\x87\x3d\xf0\x1d\x1a\x21\xeb\x00\x4c\x6b\xbe\x02\xb0\x62\x82\x58\x26\x13\xd9\x22\xed\x7d\xc7\x98\xad\x4a\xce\x63\x6e\x1a\xf8\x7e\xda\x82\x8d\xed\x1a\x70\x33\x92\xbc\x3d\xe8\xd7\x91\x7e\x36\x22\x77\xf4\x16\xc7\xee\xdc\x3a\x3e\x1b\x3c\x91\xef\x56\xb2\x21\x27\x55\x8a\xc9\xbd\xf4\xc2\x16\x15\x15\xcd\x2a\x34\xc9\x73\xf7\x40\xa2\xad\x89\x1f\x9f\x2d\x46\x3f\xcf\xa5\x6f\x80\xe9\xf0\xf3\x23\xe2\xc3\x81\xfd\x95\x08\x45\xd4\x67\xe6\x04\xfd\xdb\xbe\xb5\xe5\x85\xb2\x00\xd6\xfc\x10\x23\x2e\xd4\x45\x41\xfb\x84\xe1\x91\x38\x7e\xe0\x17\xc2\x71\xfa\x0c\x1c\xb8\x3e\xcc\x31\x11\x0c\x2d\x9f\x45\x0a\xae\x9f\xbf\x1c\x54\x1d\x12\xca\xc4\xe2\xd9\xbc\x45\xd5\x21\xa7\xf5\x4b\x23\x52\x5c\x36\x78\xae\xb7\x5d\x17\x8c\xdd\x2d\xee\x04\x52\xbe\x89\x7c\x35\x28\x72\xc5\x6e\x62\x81\x35\x09\x80\x7d\xd8\xe9\x88\xb7\x01\x88\xde\xbd\x8b\x3b\x81\xe7\xdf\xb9\xb3\xbe\x7e\x14\x74\x44\x06\xfd\x00\xaf\x1a\xbd\xde\xcd\x37\xef\xb2\x68\xc3\x35\x5d\x06\xdf\x97\x11\xc1\x7d\xd2\x20\x85\x7c\x65\x2c\xcc\xd6\x6d\x79\xcc\x44\x3e\xfb\x22\x78\x7b\x01\xd3\x8c\xd5\x4b\x72\xc5\xbb\x74\xee\x34\x7d\xc6\x6f\xb6\xfa\x05\xae\xc4\xf6\xef\x55\xdc\x4a\xd6\x48\xbc\xf2\x4d\x57\x4c\xf2\x8b\x2c\x5e\x69\xc9\x79\xed\xb7\xba\x6e\xaf\xae\xb8\x75\xaf\xa0\x98\xd3\x55\xc1\x82\x0c\x1c\xca\xf0\xce\xf5\x59\x4f\xc9\xc9\xed\xd6\x87\x68\x85\xa9\xf1\x5e\x9d\x1f\x4f\xd5\xc5\xe2\x55\x31\x27\x58\x72\x2b\x62\x4e\xaf\x6f\x08\x96\xfe\x34\xcc\xcb\x7f\xf5\x25\xb9\xd7\x9a\xd5\xba\x77\x63\x49\x51\x71\xd3\xf6\x6e\xe8\x66\xa2\x1b\x9c\x28\x71\x25\xc6\x68\x83\x80\x59\x73\x64\xc0\xdf\x33\xba\x8a\x76\x81\xec\xc6\x36\xf1\x71\xfd\x56\x8a\xc5\x1e\xb8\xf2\xd3\x9d\xc4\xe7\xa7\xd9\x59\x2d\x16\x94\x95\x7f\xe0\x68\x5f\x53\x30\x2a\x76\x2e\x62\x55\x02\xa3\x7c\xfd\x53\x04\x8d\xf7\xc4\xeb\x23\x8f\x0a\xb1\xed\xc1\x76\xd8\x63\xfb\x73\x16\xe1\x57\x22\x5c\x9b\x33\xfd\x35\xcb\xcc\x17\x5b\x8c\xd1\x39\xc7\x4b\x2c\xe5\xa4\x3d\x12\x81\x13\x2c\x93\xc6\x1d\x46\x49\x7d\x68\x71\x40\x89\x60\xfa\x88\xd6\xef\x79\x81\x57\xc8\xbb\x8a\xb4\x6e\x2e\x4f\x43\xfe\xc0\x05\x5e\x49\x1b\xdb\x1e\x4c\x99\x8f\xc4\x00\x37\x02\x30\xf0\xa8\xaa\x6c\xe0\x2d\xce\x2b\xc6\x36\x8b\x6b\xff\x0e\x00\x00\xff\xff\x78\xd7\xfa\x70\x2d\x57\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

