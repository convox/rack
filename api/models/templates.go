// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xbc\xb9\x93\x3d\x23\xcb\xb2\xe7\x66\xef\x96\x73\xb9\x2a\x47\x76\x26\xde\xb5\x13\x9d\xe5\x24\x75\x9b\xa4\xb6\x60\x12\x92\xb8\xa6\x00\x0e\x00\x3a\xf6\xa8\xf4\xdf\xb7\xf0\x20\x89\x27\x25\xdb\x49\x6d\xb6\x76\x12\x91\x8d\x46\xa3\xbb\xd1\x2f\x34\xb8\x5e\x83\x1c\xcd\x0b\x8c\x40\x02\xab\x2a\x01\x9b\xcd\x0b\x00\xd6\x6b\xf0\x03\xac\x2a\x90\xbe\x04\xa3\x93\xaa\xea\x1e\xae\x20\x2e\xe6\x88\x71\xf9\xe6\xb2\xf9\xa1\x5e\xbf\x00\x00\x80\xe4\xe4\xe3\xec\x1a\xad\xaa\x12\x72\xf4\x9a\xd0\x15\xe4\x1f\x10\x65\x05\xc1\x09\x48\x41\x72\x3c\x3e\x1a\x1f\x8c\xff\x7c\x30\xfe\x73\x32\x54\xe0\x13\x82\xf3\x82\x17\x04\xb3\x24\xd5\x28\xe4\x4c\x5c\xe3\x00\xc9\x0d\x2c\x21\xce\x10\x3d\xc8\x3a\x50\x77\x6e\x6f\x50\x45\x49\x86\x18\x7b\xd4\x18\x8a\x16\x05\xe3\xf4\x61\xdb\xa0\xe4\x1c\x73\x44\x31\x2c\x05\xc5\x20\x79\x8d\xd3\xf4\xec\xf7\x1a\x96\x62\x05\x9f\xc4\x93\x2b\x34\x4f\x52\x03\x0c\x6c\x86\x20\xf9\x7f\xc4\x12\xf0\x05\x6c\x86\x0d\x96\x29\x2d\xee\x20\x47\x5b\x90\x34\x50\x61\x1c\xaf\x4a\x88\x6f\x67\x28\xab\x69\xc1\x1f\x7e\xa3\xa4\xae\x04\x9b\xd7\x26\x3a\x90\x82\x4f\x6b\x89\x4d\x08\xc0\x86\x15\x38\x93\x2f\x6a\x5d\x1a\x69\x32\x85\x14\xae\x10\x47\x54\x0e\xed\x97\x48\x25\x60\x1f\x21\x8d\x20\x7c\xb3\x96\x49\x59\x33\x8e\xa8\xa1\x06\x00\x24\xd7\x0f\x15\x52\x84\x73\x5a\xe0\x45\x32\xec\x5e\x9d\xa2\x39\xac\x4b\x2e\xdf\xda\xcf\x59\x46\x8b\x8a\x37\x3a\x97\xe8\x57\x1d\xd7\x26\x35\xe3\x64\x75\x4d\xaa\x22\xbb\xaa\x31\x2f\x56\x28\x30\x69\xef\x9c\x29\x48\x30\xc9\xd1\x3f\x58\x6c\xe2\xe0\xbc\xa7\xa8\x2a\xc9\xc3\x0a\x61\x7e\x09\xef\x8b\x55\xbd\x0a\x4f\xfb\xb6\x5e\xdd\x20\x1a\x99\xf6\x78\x3c\xee\x99\x53\xe3\x05\x15\xa2\x19\xc2\x1c\x2e\x10\x20\x73\xa0\xd9\x8f\x18\xe0\x04\xdc\x22\x54\x01\x5a\x63\x5c\xe0\x05\xf8\xba\x2c\x4a\x04\x72\x49\x97\x58\x6a\x1f\xc9\x05\x7e\x22\xc9\xbf\xf4\x52\xac\xd0\x7e\x3b\x8a\xcf\xf0\x5d\x41\x09\x16\x24\x3f\x41\xaa\x8f\x92\xa7\x69\x07\x76\x9b\xc7\x42\xf8\x0e\x97\x0f\x00\x96\x25\xf9\x0a\x60\x26\x96\x2b\x16\xcb\x97\x05\x03\xc2\xf4\xce\x29\x59\x81\x02\xb3\x22\x47\x80\x2f\x11\xf8\x30\x9d\x44\x68\x7e\x4b\xcc\x17\x27\x02\x21\xca\x3f\xc0\xb2\x46\xca\x98\x48\xb3\x31\x94\x70\xe0\x8b\xb7\x88\xbf\xa2\x87\xef\xcd\x27\xc3\xd2\x3d\x81\x4d\xef\x19\x02\xb3\xfa\x06\x23\xce\x34\x22\xc1\x27\x56\xa1\xac\x98\x3f\x08\xb6\x1c\x48\x1e\x95\x04\xe6\xa0\xb1\x4c\x00\xe1\xbc\x22\x05\xe6\xec\xbb\xf0\xec\x0a\x95\x08\xb2\xd0\x82\xbe\xb5\xa9\xba\x42\x15\x61\x05\x27\x34\x24\xa4\xe7\x4d\x36\x23\x35\xcd\x10\xc8\x48\x8e\x00\xed\xa6\xf1\x48\xb0\x5d\xc6\xb7\xa6\xe2\x7a\x89\xc0\x85\x25\x3a\xa6\xe7\x03\x0b\x31\x21\x98\x13\xda\x6e\x8a\x00\x71\x4a\x31\x22\x64\x5d\x14\x8c\xff\xcf\xc9\xc7\x59\x9a\x9e\x4d\x8e\xd3\x54\x01\xa7\xe9\x79\xfe\xbf\x4f\x21\xf5\xc3\x74\x02\x98\x9a\x6f\x37\xaa\xe2\x7a\xff\x7d\x88\xab\xf4\xf6\xd8\x8d\xc8\x26\x2e\xb3\xa8\x73\xf6\xde\xde\xd5\xd9\xff\xbd\x3f\xbf\x3a\x3b\xdd\x07\x17\x70\x75\x93\x43\x60\xf8\x4e\xf0\x06\xe2\xbc\x44\x14\xe8\xed\x00\x1a\x8c\x06\x99\x97\x05\xbe\x40\x78\xc1\x97\x92\xc8\x23\xf3\x95\x63\x00\x7c\xfa\xa6\x93\x08\xe7\x3a\xa6\x7d\x98\x4e\x04\xc7\x9e\xca\xb0\x2d\x0c\x9a\x4e\x26\xe7\xa7\x57\xdf\x5c\xe5\xc5\xcc\x02\x71\x78\x7a\x2b\x18\xbb\x84\x55\x55\xe0\x85\xa9\xdf\xc9\x94\x50\x3e\xa5\x84\x93\x8c\x38\x9e\x67\xc9\x79\xa5\xc2\x49\xa1\x5b\x08\x23\x6a\xc0\x25\x6f\xae\xaf\xa7\xc2\xa4\x9d\x63\xc6\xc5\x4e\x0b\xbd\x93\x7b\x1d\xc5\x20\x66\x49\xc7\x1d\x3d\x1d\xeb\x9f\x6f\xf6\xec\x09\xad\x19\x79\xd6\xb3\xbe\xeb\x49\x74\x79\xfa\x55\x7c\xb2\xd9\xec\xc2\x9d\xaa\xec\x59\x9a\x00\x7f\xde\x54\x60\x13\x94\xf7\x15\x62\xd2\x2a\x5b\x02\x37\xc3\x55\x52\x46\xdc\xa8\xdc\x13\xe7\x27\x97\x69\x2a\x61\x8c\x95\x4c\x29\xa9\x10\xe5\x05\xb2\xad\xa4\x70\x7b\x8c\xd5\x2b\x24\xe0\xa7\xa4\x2c\xb2\x87\x53\x92\xd5\x5e\xdc\xe4\xd8\x0a\x91\xc2\x1d\x1f\x1c\x8d\x0f\x8e\xfe\xcb\x98\x44\x02\xcd\x38\xe4\x48\x8f\xff\x64\xbd\x02\x0e\x3e\x09\x7e\x36\x9f\xa3\x4c\x3a\x63\xe9\x7e\x1d\x6c\x9a\xf4\x02\x67\x45\xd5\x64\x5a\x33\x44\xef\x8a\x0c\x29\x07\x5d\x4a\x7b\x34\x82\x2b\xf8\x07\xc1\xf0\x2b\x1b\x65\x64\x65\x25\x47\xe6\x42\x33\x6d\xd0\x3e\x81\x84\x71\x96\x76\x0b\xef\xbc\x7b\xf3\x67\x63\xfd\x36\xdf\x5a\x98\x93\x29\xe4\x4b\x41\xfc\x61\x46\xf0\x1d\xb9\x3f\x4c\xec\xb7\x82\xa1\x8a\xe5\x36\x2b\x5c\x46\x28\xc8\x87\xb7\x70\xa5\xc4\x98\xaf\x0a\x2c\xb2\x50\xc8\x09\xf5\x58\x92\x6c\x91\x13\xd8\x55\x56\xc0\x93\x97\xe0\xaf\x27\x11\x83\x73\xc9\x8f\xe2\x67\xa3\x9f\xea\x01\xd8\x6c\xe1\x9e\xf9\xab\x83\xdc\xf4\x25\x64\x3d\xda\xad\x3c\x50\x9a\xbe\xae\xb1\xa2\x6a\x27\x25\x9f\x90\x1c\xf9\x0a\x3d\xfb\xf9\x55\x9d\xdd\x22\xde\x65\xdf\x7f\x21\x85\xd6\x90\x83\x64\x28\xfe\x52\x72\x4d\x86\x46\x32\x2e\xc9\xb8\x42\x0b\x69\xc9\x37\xe0\x8b\xaf\x6e\xc9\xec\x67\x1d\x50\xbb\x58\x15\x52\xaa\x5c\xe5\xa1\x85\xb6\xad\x90\x88\x7c\xfc\x50\x29\xf6\xe1\x5c\x16\x4f\x0a\x82\x47\x7f\x14\x55\xa2\xe6\x8a\x2a\xa3\xf6\xc4\x02\x59\x81\x73\x74\x3f\x42\xf7\x3a\x35\xb1\xc0\x2e\xd1\x8a\xd0\x87\x59\xf1\x87\x64\xea\xd1\xf1\x7f\xdb\xaf\x1b\xeb\xa2\x48\xff\x0d\xf1\x13\xae\x74\xc3\x33\x41\x42\x33\x28\xf6\xb6\x5b\x62\xa4\xd3\xed\xea\x02\xd9\xb6\x33\xea\xba\x58\x21\x52\x4b\xc5\xfb\x79\x3c\x4e\xe2\x8a\x12\xae\x42\xd0\xd6\x68\x82\x51\xa4\x00\x91\x51\x82\xff\x41\x6e\x76\x01\x6d\x6a\x15\x26\xe8\x8e\xe5\x0d\xa6\xec\x53\x0f\xf2\xb6\xc4\x14\xc3\x1e\x1a\xd4\x04\xc4\x49\x04\x29\xe3\xaa\x40\x64\xbb\x92\x77\x35\xaf\x6a\xbe\xbd\xaa\x46\x34\x1c\x18\xf5\x2f\xae\x83\xdb\xb5\x8c\x16\x1e\xd1\xa5\x15\x9c\x3b\xa1\x8d\x30\x5e\x22\x05\xb3\xd4\xa7\x85\x73\x5d\xe6\x0b\xf1\xff\xf5\x5a\xa4\x7a\x12\xaf\x51\xc8\x0c\x55\xff\x9a\x12\x26\x85\x78\x81\xc0\x0f\xb7\xb2\x82\x79\x86\x39\x95\xb6\x97\x35\x8b\x49\xce\x30\xbc\x29\x51\xbe\x5e\x83\xba\xaa\x10\x15\x90\x9b\x4d\xb7\x2b\xde\x12\xb9\x25\x82\x25\x3b\xf1\x64\x86\x4a\x65\x43\x3f\x81\xb1\xb9\xc7\x6d\x7c\xaf\x9b\xcd\xad\xcc\x88\xd8\xf7\x07\x47\x72\x3b\xe9\x1d\xd5\xad\xab\x7f\x85\x4d\x45\xcd\x59\x1d\x8a\xad\xae\x23\x03\x59\x64\x18\xe1\x46\x63\x73\x27\x64\xb5\x82\xa7\xa8\x2c\x56\x05\x47\xb9\x08\x83\x12\xa3\x2c\xd4\x66\xd2\x47\xc3\xf1\xf0\xf8\x97\x3f\x99\xef\xac\x14\x42\x95\x86\xbc\xa2\x0e\xad\xf1\x10\x4c\xa6\xef\x41\x8d\x0b\xae\x9e\x20\xb1\x7f\xd0\x10\x40\x9c\x83\xcb\x57\x62\xc4\xd5\xc9\xa5\xf1\x26\xe9\xf4\x7b\x57\xf6\xb4\x2a\x28\xd7\x9f\x5c\x90\x85\x9d\xc5\x06\xf4\xad\x85\x51\x1a\x36\xdc\x32\x83\xb1\x91\x63\x73\xd8\x4e\x8c\x2c\x98\xfc\xaf\x02\xda\x65\x8a\xce\xac\xec\x54\x86\x8f\x94\xee\x8b\x79\x37\x6c\xf4\x06\xb2\x69\x2b\x0d\xad\x1b\x8e\xf6\x74\xc0\x3a\xec\x62\x46\x05\xdc\x50\xa3\x91\x50\x30\xb0\xd9\x9c\x4d\x66\xd7\x90\xdd\x9e\x0a\xe2\x0b\x1e\x48\x2c\x2b\x84\x73\xf6\x4e\x7a\x43\xcb\xe1\x0f\xdb\xc0\x4e\xba\x96\x2f\x81\x14\x51\x81\x8b\x9c\xcf\x9d\xc3\x00\x36\xe2\x9e\xa3\xd1\x78\xb7\xe0\x40\x4f\x7c\x4d\x6e\x11\xde\xea\xf9\xa2\x5e\x4f\x07\x6f\x91\x40\xc2\x09\x1f\x66\x1c\x66\xb7\x72\x84\xdc\xf6\x42\x5c\x2d\x0f\x13\x3f\xa4\x30\x6b\x4d\x2d\xa2\xe6\x99\x03\xea\x94\x3e\x5b\x70\xf3\xb9\x33\xa4\x0d\x56\x34\xa8\xf8\xed\x7a\x67\xc8\x6e\x77\x88\x63\x9b\x08\xd6\x5e\x90\x17\xc1\x9e\xaf\xe0\xc2\x80\x93\x3f\x43\x80\xeb\xb5\x50\x58\x34\x92\x56\x08\xe7\xa3\x13\x4a\xe1\xc3\x66\xe3\x47\xb1\x1a\x20\x90\x73\x00\x4b\xa9\x65\x5c\x34\x04\x3f\xa0\x52\xc6\xbc\x52\xc5\xb7\xa3\x37\x89\x91\x18\x36\x9b\xe1\x7a\x8d\x4a\x86\x36\x9b\xf5\x1a\xe1\x3c\x3a\x26\x59\xaf\x9b\xb9\x36\x9b\x24\x48\x5a\x78\xf8\x17\x9f\x15\x62\x3e\xb1\x81\x31\x32\x69\x56\x15\x08\x90\x24\xfd\x6c\x59\xaf\xc1\x9d\xb0\x72\x81\xa1\x1b\x2f\x59\x0a\x13\x95\x4c\xaa\xba\x53\x70\xc3\xc5\x1d\x85\x5d\x5c\x2b\x7f\xcf\xcf\xb9\x88\x55\x44\x1a\xc4\x7d\xfc\x5c\xdc\xb1\x93\x80\x16\xe0\x64\x3a\x6d\x34\x51\x98\xca\xa8\xd2\x8a\x5d\x78\x32\xf9\xab\x86\x45\xf8\x4e\xff\x8e\xc0\x9e\x7c\x9c\xfd\xfd\xea\xec\xb7\xf3\x77\x6f\xcd\x11\xc6\xd3\xf0\x38\x23\x36\x41\x0f\x43\xf0\x83\x12\x9a\x52\x53\x63\x29\x20\x20\x6d\xa9\x9f\x42\x39\xd4\x98\x24\x09\x01\x69\xbb\x2d\xb0\xeb\x88\xa6\x55\x0c\xf5\x97\xaf\x0d\x71\x25\xed\x3c\xd6\xce\xcb\x18\x5d\x14\xf8\xf6\x03\xa4\x2c\x4c\x9c\x47\x5b\x2f\x55\xb1\xd9\x93\x8b\x77\xbf\xfd\xfd\xb7\xab\x77\xef\xa7\x31\xa7\x1e\x2a\x33\x5c\xbd\x9b\x9c\xcd\x66\xbe\xf5\x72\x93\x5b\x4f\xc5\x3e\x90\xb2\x5e\x05\xb2\x7c\x9b\x11\x68\x74\x49\x6a\xcc\x45\x5c\xa9\x07\x84\x59\xa0\xbc\xf4\xe8\x9c\xcd\x1e\x18\x47\xab\x88\x10\x05\x91\xa3\x37\x84\xf1\xcd\x26\x5d\xaf\x47\x13\x82\x39\x2c\x30\xa2\x41\xa5\x52\xbc\x12\xe6\x23\x82\x2c\x92\xa7\x1e\xde\x29\x42\x0f\xfd\xfc\xd7\x71\x60\x87\xc2\xce\x49\x8e\x09\x8b\x18\x21\x2c\x94\x2a\x77\xe4\x45\x15\x29\xf6\x06\xb4\xe7\xd9\x92\xa2\xb7\x44\x85\x71\xc0\x05\xf5\x4c\x69\x72\x76\xcf\x29\x14\x34\x6e\x93\x59\x60\x0f\xb6\x43\x2f\x61\x15\x11\x60\x58\x5e\x62\x90\xe9\x1e\xb5\x96\x87\xd8\x21\x3c\x64\x75\x92\xe7\x14\x31\xd6\x80\x37\xfb\x20\xe4\x44\x1e\xb5\x39\x9e\xc1\xb7\x26\x06\x0c\x73\xed\xe9\x78\xa7\x84\x72\xa3\xc8\xdd\x23\x91\x91\x00\x8d\x6d\x1c\x57\x89\x53\xa1\xc5\x31\x7d\x8f\xbb\x14\x31\xc5\x7a\x0d\x46\xaf\x9a\xb3\xa8\xcd\x46\xc8\x2e\x68\x35\x80\xb6\x59\x9d\x9e\x47\x44\x14\x51\xfd\xef\x22\xa6\x29\x2d\xee\x8a\x12\x2d\x50\xde\x19\xb3\xee\x99\x47\xe0\xae\xf5\x39\x2d\xfd\x00\xc7\xec\x20\xbf\x6d\xe6\x51\x51\xa7\x93\x48\x87\xa2\x42\x3b\x2f\x78\x61\xb1\x47\x05\x80\x6f\x20\x33\xc4\xf1\xc2\x65\x7f\x97\xa6\x34\x50\x4d\x8d\x52\x4e\x16\x09\x45\x43\xcc\xb7\x43\xfd\x40\x96\x20\xd3\x93\x17\x21\xee\xdb\x29\xde\xd9\x44\x58\x49\x5d\xab\xde\xad\x46\xd9\xb5\xbe\x74\x65\x33\xfd\xcc\x89\xc6\xbb\x86\x8c\x09\xc1\xf3\x62\x51\x53\x37\x81\xd7\x80\xba\xb1\xe2\x0d\x82\x25\x5f\x3e\x4c\x55\x7b\x45\xa7\x15\x5e\x63\x87\x6f\x91\x9a\x6e\x92\xbe\xb1\xba\xdf\xc4\x56\x2c\x97\x62\x56\x50\x94\x4f\x84\x0b\x0c\x06\x7a\x91\x3a\xc9\x4e\x81\x5e\xab\x26\x41\xeb\x90\x5c\x10\x98\x37\x7a\x11\xb2\x2f\x81\xa0\xb0\xdd\xce\xbb\x25\x34\xe6\x08\x41\x83\x1e\xb1\x27\x93\x85\x8e\xb0\xf1\xbe\x6d\x27\x02\x68\x4c\x5a\xbb\x8c\xb2\x63\xcb\xee\x9a\xee\x19\x0a\xe7\x4c\xc3\x11\x73\xbc\xec\x6b\x2a\x7e\x24\xf9\x0d\xee\x24\xbf\x10\xd0\x27\x5f\x3f\xab\x37\x08\x76\x8c\x91\x39\xdd\xb6\x22\x50\xb0\x71\xd0\x2e\x94\xb5\xac\x34\xab\x20\x3f\xe8\xc2\x8b\x24\x2f\x7d\xa9\xe9\x1d\x4d\x8d\xa7\x06\x70\x33\xcb\x94\xa2\x79\x71\x2f\xe0\x2b\x5a\x60\x3e\x07\x49\x83\xfb\xdf\x59\x62\xe3\x74\x0b\x2e\x23\xd3\x0b\x1a\x55\x16\xd9\xdd\x17\x98\x23\xe8\xa8\x26\xc2\xb4\xcc\x8b\xcc\x6b\x38\x88\xb6\x16\xba\x4b\xdd\x8a\x56\xc6\x7b\x5e\x3f\xcc\x93\x44\x12\xae\x5b\x86\xc5\xd1\x76\x86\x88\x24\x62\x67\xe6\x75\x8a\xd6\x8c\x77\x24\xf8\x18\x1e\x7e\x97\xde\x9e\xa7\x50\x28\xc3\x91\xa7\x90\x26\x0c\xa5\x32\x49\xed\x64\x57\x10\xe7\x64\xc5\xc0\x5e\xc1\x09\xec\x66\xd9\xf7\x3c\x74\xef\x42\x9e\x24\x7e\xbb\x2e\x1b\x2b\x59\x6a\x01\x5f\xba\x76\x6f\xbb\x76\xb4\x7b\xaf\xe5\xb1\xc3\x5a\x87\x8f\xfd\x91\x8b\x33\xb6\x2b\x75\x1b\xd5\x63\xd7\x74\x0a\xb9\x59\xf6\x59\x8c\x03\xc9\xe9\xdb\x99\x4a\x9d\xbe\xd8\x27\xff\xdf\x45\x9d\x9b\x7f\x3e\x26\x48\x8b\x60\xb7\x0a\xad\x7a\xd5\x89\x33\xdd\xb7\xd1\x70\xd7\x05\x7e\x07\xc2\x4d\xb5\x19\xb9\x6e\x17\x70\x5a\x23\xa9\x8f\x23\xd3\x58\x3f\x4f\xdf\xdd\x53\x82\xef\xa0\xf1\x01\x85\x8b\x75\xee\x3d\x93\x93\x6e\xb4\x7b\x2c\xa2\x39\x73\x26\xa3\xf1\x33\x18\xf1\x26\x12\xcc\x3e\x27\xf2\x52\x38\xb0\x43\xf1\xfc\xa0\x21\xd5\x2b\x30\xd8\x5d\x8b\xe7\x78\xa1\x13\x6a\x27\xc5\xe8\xdd\x73\x1a\xca\x0d\x19\x55\x91\xe6\x4c\x1f\xb0\xfb\x09\x5c\x32\x29\x72\x7a\x2e\xf8\x9d\x8c\x47\xf2\x7f\x87\xe3\x40\x79\x3b\x52\x95\xe9\x46\x1b\xfd\x01\xba\x11\xcd\x4f\x23\x63\x49\x64\x72\x5e\x99\x3d\x47\x3c\xab\xfc\x4a\xfc\x6b\x4a\x56\x46\xc4\x6a\xed\x64\x0f\xf8\x9a\xc4\x40\xed\x84\x72\x5b\x68\xe8\xc8\x33\x90\xda\x9a\x69\xd5\x87\x2a\x3b\xcf\x5d\x56\x78\x07\xc1\xc3\xe8\x06\x08\x1d\x6b\x2a\xa5\x2d\x21\xe3\x45\xd6\xed\xfd\x02\x2f\xd2\xd4\x34\x05\x9d\x12\x3f\xcd\x35\x58\x79\xed\x0e\xbb\xb3\x5b\x77\x6c\xd7\x28\xc5\x43\xbf\x83\xd1\x2c\x5b\xa2\x15\x02\x49\xd1\x5d\x30\xb1\xc2\x6f\xf5\x5e\x35\x83\x84\xda\x40\x8c\xa6\x59\xb5\xeb\xce\xe7\x8a\xca\xa6\x61\xd5\x16\xbf\x71\x16\x6f\xf7\xb5\xba\xfa\xe8\x01\xda\x99\x88\xb5\x41\x83\x1b\xa0\xa3\xdc\x21\xac\xed\xb4\x1f\x9a\x6b\x8a\x6b\x93\x77\x8a\x16\x5d\xf2\x79\x08\x9b\xbf\xce\xe0\xda\xfc\x15\xd9\xea\x2e\x54\x07\x23\xd9\xab\x74\x4a\x61\x81\x0b\xbc\x50\x0d\x5c\x8a\x0c\xad\x4b\x49\x2a\x5d\xce\xd0\xec\x83\xf9\xd3\xd8\x32\x66\x1d\x1e\xb3\x6b\x02\x24\xe7\x79\x89\x8c\xe6\x19\xa1\x64\xc6\x23\x95\x0a\x9a\x68\x28\x61\xec\x6f\x04\xa3\x66\xca\xee\x95\x2a\x13\x4c\x96\x28\xbb\x75\x8b\x13\xba\x82\x70\xbd\xa4\x88\x2d\x49\x29\x2b\x4b\xc7\xb6\x42\x49\x26\xde\xc9\x36\x3d\x49\x84\x1a\xd2\x3c\x75\x0d\x4a\x72\x0d\xe9\x22\xdc\x7a\xe5\x95\xed\x0c\x74\x8d\x41\x03\x9b\x4d\x1a\xd5\xd0\xd8\xc6\x6c\x02\x0d\x8d\x8a\x50\x1e\xab\xed\x99\x33\x42\xbe\x74\x4c\x9c\x7f\x3e\xeb\xf0\x5f\x8d\x34\x24\x60\x01\xbf\xc7\xcb\x20\x37\xbb\x74\xd7\x90\x49\xd3\x79\xfa\x2d\xfd\x96\xe5\xdc\x15\x3b\x47\xc1\x73\x14\xd3\x7d\xd8\xf1\x92\xd3\x0f\x2b\xc7\xef\xee\xdf\x6c\xd4\xce\x66\x94\x09\xaf\x17\xba\x3f\x31\x81\x1b\x76\xcd\xb8\xb3\x8b\x60\x67\x68\xd4\x7b\x9a\x8e\x60\x67\x17\x19\x6a\xf6\xb5\x38\xe7\x02\x84\x39\xd7\xe1\x51\x13\x87\x4a\x27\x8f\xcc\x17\x03\x07\x57\xb3\xd9\x85\xc1\xab\xc6\xc9\x7e\x3f\x59\x78\x5a\x10\x35\xdd\x7d\xa0\xcf\x25\xc3\xaf\xa0\xbb\x0d\xab\xdf\x36\x7e\x89\x74\x01\xef\xb8\x81\xfd\x0d\x7b\xff\xd0\xb7\x6b\x03\xc5\x4c\xbb\xb9\x58\x39\x1c\x0b\x4f\xb0\xeb\x5a\x0e\x6a\xe2\x25\x0b\xdc\x78\x15\x3a\xf8\xe6\x9c\x16\x37\x35\x57\x0b\x8e\x1c\x86\x35\xc4\x6c\x23\x03\x58\xa9\xa6\x70\x57\xfe\xe1\xca\xc6\x3b\x01\x71\xf6\x0f\xd3\xbd\x7a\xcf\xdf\x41\x5e\xa3\xf3\xd0\x15\x96\xaf\x2b\xcf\xd6\x9f\x8b\x57\x13\x42\x6e\x0b\x34\xe3\x45\x76\x5b\x60\xc4\x58\x1b\x3f\x88\x55\xd9\xd2\x85\x73\x59\x3f\x7d\x48\x2c\xb6\x04\xcb\xca\x6b\xb0\x43\xda\x1b\x4b\xa6\xf4\x95\xe2\xd6\x5a\x80\x4e\xb9\x43\xf7\x91\xdb\xde\xdd\xf6\x50\x6b\x6b\x2c\xbc\xf1\xc7\x38\x00\x1d\xb7\x5a\xc1\x18\xc9\xc0\xb6\xb4\x3c\xd0\x0d\x6c\x74\xc9\xc9\x56\x90\x09\x25\xf8\x2f\xe4\x86\xf9\xdd\xae\x22\x8a\xc2\xce\x3d\x8c\x6d\xb7\x30\xa2\x89\xf0\x8e\x37\x30\x76\xe8\xe9\xef\xb9\x7d\xe1\xb5\x6a\x6d\xbb\x79\xf1\x6d\xee\x5d\x3c\xe2\xd6\x45\xe4\x1c\xd2\xb4\xa4\xf1\xdb\x16\x51\x2b\x6b\x87\x75\xf6\x66\xd1\xf2\x75\x4f\xbc\xb6\xde\xaf\xd8\xf1\x76\x45\xef\x5d\x98\x70\x9f\xc0\x0e\xf7\x61\x4c\x9e\x26\x28\x63\xe9\x55\x8d\xaf\x21\xbb\x0d\x83\xda\x77\x35\x82\x20\x66\x6a\x1b\x31\xd7\x27\x14\xb7\x87\x07\x61\x10\xa0\x68\xc9\xcc\x33\xcc\x2d\x51\xbd\x35\x18\x52\x9c\xc2\xaf\x2c\x15\x48\x22\x7e\x00\xf8\x96\xb3\xbd\x85\x11\x1f\x91\x3c\x02\xdd\x49\x96\x91\x1a\xf3\xf3\x7c\x0b\x46\xbd\xca\xc3\x1e\xcc\x6d\xc7\xd7\xe4\xe2\xfd\xec\xfa\xec\x2a\x89\xf4\x05\x80\x26\x9d\x08\xbe\x0b\x3d\xf5\x9f\x85\xa2\xa5\xe7\xeb\x56\x58\x58\x49\x49\x16\x2c\x9d\x50\x04\x39\x6a\xfb\xa9\x22\x7e\xdb\x06\x9d\x71\x8a\xe0\xaa\x17\x76\x5a\xf3\x0b\xb2\x38\xbb\x43\x98\xb3\x60\x13\xc5\x36\x15\x8f\xf4\x31\x35\xca\x25\x27\xe9\xb9\xcb\x33\x54\x3d\x23\x7d\x5a\x01\x12\x81\xe5\x40\xde\x4a\x4e\x0f\xe1\x57\xd6\xdc\xd4\xf9\xd1\xbf\x9d\xa3\xfe\xfc\x0b\xa5\xf3\xaf\x63\x79\xe0\x2c\xa4\xd3\x16\xe3\x0c\x19\x24\x69\x9c\x71\x6e\x98\x1e\xf5\x16\x46\x24\xe0\xc7\x01\xda\x59\xb7\xf7\xc5\x62\x0e\x3b\x7a\xb1\xcc\xad\xe2\xb5\xae\x7f\x7b\xb5\xce\xbf\x92\xb5\xd4\x0f\x0c\xcf\xd5\x73\xe1\xaa\x99\x29\x78\xec\x6e\xdc\xb3\xd2\xdf\x21\xf9\xcf\xd1\xcf\xd6\xdd\xea\xb6\x28\xf1\xcb\xd8\xaa\x23\x79\x77\xe1\x92\xbf\x15\xd5\xeb\xa2\x0c\xc8\x33\xf9\x8c\xfd\x72\xcc\xa0\x66\x08\x30\x4e\x8b\x8c\x0f\x7e\x75\xbd\xe7\x1d\xa4\x00\x7e\x65\xe0\x25\xa0\xe8\xf7\xba\xa0\x68\x6f\x00\xbf\xb2\x03\x96\xdf\x0e\xf6\x83\xc0\x28\x13\xc0\x18\x7d\x15\xc3\x46\x67\x93\xd9\xde\x7a\x05\xef\xaf\x10\xa7\x05\x62\xe9\xd1\x78\x13\x1e\x26\xd4\xd7\x18\x37\x29\x49\x9d\x7f\x84\x3c\x5b\x5e\x90\x05\xdb\x0b\x8f\xd1\x86\x1b\xbc\x04\x83\x80\x7d\xf6\xd6\x12\x31\x27\x7a\x76\xa9\xcd\x02\x95\x65\x32\xcc\x26\x53\x90\x0c\x7e\x0d\x76\x3d\xf6\x20\xd6\x77\x03\x3d\xbc\x46\xb7\x7f\x14\xad\x44\xc0\xad\x2e\x0a\xc1\xa2\xb5\xbb\x2c\xff\x88\xc9\xbf\xdd\xb1\x85\x54\xf1\x4a\xf0\xb0\xc9\x13\x06\xa9\x43\x6f\x57\x83\xeb\x69\xf0\x10\x4b\x19\x86\x39\x14\xac\xca\xa8\x69\x07\xe9\x60\xe0\x4a\xd7\x6b\x5b\x42\xf7\x95\x48\xfd\x9a\x0d\x07\x5e\x82\xb9\xde\xd8\x7b\x48\x58\xbb\x21\xc8\x08\xe6\xe8\x9e\xef\x7b\xfc\x91\xb3\x48\x75\x51\x8d\xf2\xe0\x25\x90\x43\x46\xfa\xf7\x88\xa2\xaa\x84\x19\xda\x3b\xfc\x8f\x7f\xdb\xfb\xfc\x39\xff\x69\xff\xd7\xc3\xc5\xb0\xc3\xbf\x12\x5a\x38\x04\x39\xca\x22\xb8\x01\xa0\x88\xd7\x14\x03\x75\x5a\x3f\x9a\x53\xb2\x9a\x2c\x21\x15\x3b\x73\x4f\x0c\xf3\x94\x57\xfc\x27\xb0\x0f\x1a\x42\x55\x23\x45\x40\xd4\x49\xf3\x0f\xc6\x21\xe5\x28\x7f\xf5\x90\x82\x81\xc8\x7c\x06\xc3\x18\xa4\xad\x3f\xa9\xab\x4f\x9f\x14\x2b\x74\xcb\xc8\x97\x28\x1a\xbd\xd5\xd2\xe6\x1f\x71\x40\xe1\x5c\x53\x70\x14\x05\x20\x77\x88\xd2\x22\x47\x2c\x8d\x2f\x4f\x21\xd2\xad\x55\xef\xba\x01\x9f\xfa\x06\x00\xa9\xde\x18\xae\x50\x6a\x2d\x6a\xd8\x08\x3e\xfd\x04\x06\x6c\x39\x18\x82\xc1\x41\x36\x68\x9f\x0a\x65\xed\x43\xfb\x25\xf6\x32\x38\x6a\x13\x15\x2a\xbb\x45\x5f\xc1\x4b\x70\x09\xf9\x72\x34\x2f\x09\xa1\x7b\xf2\x9f\x54\x36\x6c\xec\xed\xff\x78\x34\x1e\x8f\xc7\x61\x9d\x28\xc9\x62\xcf\x5a\x12\xf8\x09\x0c\xd2\x01\xf8\xa9\x35\x2f\x3f\x81\xc1\xa1\xd0\x03\x39\xcb\x4b\xf1\x46\x4e\xf7\x13\x18\xac\x58\xb3\x50\xf9\xd8\xd2\x7c\x43\xc9\x11\xa5\x51\xed\x96\xb2\x60\xa4\x44\x23\x41\xc8\x00\x51\x7a\x3c\x18\x02\x31\x22\x48\xad\xf8\xc3\x10\xd7\xee\x6a\xaf\x9d\x62\x1f\xac\x85\x73\x18\x51\x95\xe0\xec\x29\x2d\x6f\x37\xee\x28\x27\x18\xed\x0b\x23\x22\x48\xdf\x79\xcf\xf8\x0c\x6f\x26\x94\x6c\x5b\x21\xc6\xe0\x02\x0d\x41\x76\xd3\x63\x19\x98\x8c\xac\x84\x91\x16\x4c\x3c\x10\x8c\xda\x13\x9e\xe8\x14\x72\xb4\xb7\xbf\x3f\x5a\xa8\xe5\x04\xdc\x10\xd8\x79\xcb\x36\x2e\x46\xd8\xcf\xb4\xfd\x15\xdd\x26\x65\x13\xef\x29\x78\x16\x8a\xfd\x14\x4f\x22\x1a\xc3\x46\x99\x1d\x38\xb6\x0c\x7f\xa2\xd0\xb7\xc9\x7c\x37\x36\x68\xea\x54\x88\xba\xd3\x8e\xd6\x22\x4c\x41\x2b\x4b\x11\x26\x31\x0e\x57\x55\x1a\x11\xd3\x96\x1d\x1d\x65\x3a\x78\xbc\x9c\xc0\x63\x64\x05\x62\xf2\x02\x0e\xbf\xf5\x52\xe3\xcc\x96\x02\xae\x8c\x68\xbf\xdb\x4e\x37\xb1\xbd\xe3\x3b\x59\xb3\x44\x63\x05\xed\x81\xd3\x78\xa7\x47\x46\x87\x1c\x5b\xea\x6a\x22\xa4\x98\x2d\x09\xe5\x3a\x6a\xb8\xaa\x7b\x6a\x6c\x5a\x27\x52\x09\xb4\x35\x16\x37\x5a\x79\x47\x17\x04\x2f\xf4\x0c\x07\x2c\x5b\xa2\xbc\xb6\x3f\x97\x32\xd3\xcf\xce\xee\x2b\x8a\x58\x53\xeb\x91\xc4\xe9\x37\x4e\x57\x91\x3a\xcd\xf4\x4a\xde\x32\x6c\x8f\xc6\xf6\x5d\xaa\x11\xb9\x53\x7a\x9e\x07\x08\xd6\x07\xa7\xce\xd9\x6b\xa5\x4f\x1f\x3f\x37\x37\x86\x3f\x27\x29\xf8\x2c\xc7\xea\xea\x36\xd8\x6c\x3e\x27\x43\xf0\x39\xd1\xc6\xbc\x03\xd0\x17\x02\x25\x80\x21\xe3\x50\x55\x35\x20\x22\x95\x38\x4d\x11\x5d\x15\x8c\x85\x32\x2c\xe0\xa6\x58\x06\x6c\x48\x6a\xc0\xae\x8e\x66\x6d\xd3\xa1\x4a\xb5\xd3\x73\x7c\x47\x6e\x51\xe8\x03\x20\xcd\x33\xd5\x1c\xf4\x44\xbe\x1b\x85\x4f\x31\xa9\x74\x80\xcc\x29\x75\x9a\xaa\x22\x33\x61\x89\x26\xda\x03\xe8\x69\xb4\x31\x71\xdf\xc6\x09\x57\xae\x83\x9f\x28\x55\xf7\xce\x55\x29\xe3\x0d\x64\x67\x13\xf3\x93\x55\x92\xa8\x77\xd4\xaa\x1b\xf4\x7d\x6f\xd4\x2b\x8b\xd4\xec\x00\x41\xc6\xe5\xe7\x09\xcc\x6e\x87\xa7\xe0\x38\x7e\x1e\x8e\xaf\xe8\xf9\x74\x48\x1c\xcf\xa1\x03\xd5\x07\x19\xc2\x9c\xc2\xf2\x59\xa4\xa0\xfa\xf9\xcb\x81\xd5\x01\x26\x94\x2f\x9f\x2d\x1f\x58\x1d\x30\x52\x7f\x6b\x44\x92\xcb\x1a\xcf\x97\xbe\x0f\x1d\x84\xbe\x8a\xd2\x29\xb5\x78\x13\xf8\x0c\x62\xe0\xe3\x00\x57\x06\x58\x53\xff\x31\x9b\xb7\xac\x2d\xa2\x01\x82\x5f\x0d\x08\x3b\x92\xe7\x7f\x2d\xc0\xf8\x9c\xa3\x77\xc3\xc3\xeb\x6f\x7c\xd1\xd8\x86\xed\x7c\x73\x3e\x73\xd1\x70\x4d\x1d\xeb\xef\xca\x08\xef\x4b\x18\x5e\x09\xf4\x85\xb6\x52\xbd\x62\x79\xcc\x44\x2e\xfb\x02\x78\x87\x1e\xd3\xb4\xe5\x8c\x72\xc5\xf9\x5c\x8e\x75\x89\x25\xfc\x4d\x0e\xf7\xc0\x2e\x22\xfe\x9d\x0e\xeb\xa2\x27\x3f\xce\x71\x54\xb4\x9c\xeb\x1e\x95\x59\xaf\xdd\xab\x3b\xfd\x95\x63\xfb\x1c\xcf\x9d\xc7\x38\xd5\xf3\x0a\xb0\x89\x48\xbe\x6c\xbf\xf7\x94\x92\xac\xe1\x2b\xc3\xe7\x66\x8d\x07\xec\x62\x81\xd8\x39\x5f\xf8\x94\xcf\x0a\xb8\xec\x13\x3e\xeb\xee\x92\x0f\x16\xff\xd6\xdd\xb7\xff\x8c\x5d\x6f\xe9\x3e\x41\xaa\x17\xb5\x24\x30\xbf\x69\x7b\x51\x55\x73\xf4\x0d\x8a\x1c\xdc\x45\xc6\x28\x83\x80\x68\xd3\x02\xc1\x5e\x53\xb2\x0a\x76\xb5\x6e\xc7\x76\xe5\xe2\xfa\x58\xf0\xe5\x0e\xb8\xb2\xe3\xad\xc4\x67\xc7\xe9\x49\xcd\x97\x84\x16\x7f\xa0\x60\x9f\xb6\x37\x2a\xd4\xe7\x61\x9c\x44\x04\xf9\xfa\x63\x00\x8d\xf3\xc4\xb9\x17\x17\x54\x62\xd3\x83\x6d\xb1\xc7\xe6\x87\xb8\xfc\xef\x5b\xd9\x36\x67\xf6\x73\x9a\xea\x4f\xd0\x69\xa3\x73\x8a\x4a\x24\xf4\xa4\x6d\xf1\x48\xae\x10\x87\x05\xde\x62\x94\xe4\x97\xa3\x27\x04\x73\xaa\x5a\xce\xdc\x1e\xde\xe4\x1a\x3a\x57\xab\xd7\xcd\x67\x5f\x12\x26\xbf\x33\x20\x6c\x6c\xdb\x68\xa3\xbf\x7a\x07\xec\x08\x40\xc3\xc3\xaa\x32\x81\x7b\x9c\x57\x88\x6d\x06\xd7\xfe\x19\x00\x00\xff\xff\x80\x46\x94\xe2\x75\x60\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

