// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3c\xfd\x73\xdb\x38\x76\xbf\xe7\xaf\xc0\xa0\x69\x65\x67\x65\x59\xf6\x76\xaf\x3d\x6e\xd3\x19\x47\x76\x76\x7d\x67\x27\xaa\xe4\x64\xa7\x97\x64\x6e\x68\x12\x92\x78\xa6\x00\x2e\x00\x3a\xf1\x6a\xf4\xbf\x77\xf0\x41\x12\x9f\x94\x62\x27\x73\xcd\xcd\x6d\x22\xf2\xe1\xe1\xe1\xe1\x7d\xe3\x81\x9b\x0d\xc8\xd1\xa2\xc0\x08\xc0\xb4\xaa\x20\xd8\x6e\x9f\x01\xb0\xd9\x80\xe7\x69\x55\x81\xe4\x25\x18\x9d\x55\x55\xf7\x70\x9d\xe2\x62\x81\x18\x97\x6f\xae\x9b\x1f\xea\xf5\x33\x00\x00\x80\x67\xbf\xcd\x6f\xd0\xba\x2a\x53\x8e\x5e\x13\xba\x4e\xf9\x7b\x44\x59\x41\x30\x04\x09\x80\xa7\xe3\x93\xf1\xd1\xf8\xcf\x47\xe3\x3f\xc3\xa1\x02\x9f\x10\x9c\x17\xbc\x20\x98\xc1\x44\xa3\x90\x33\x71\x8d\x03\xc0\xdb\xb4\x4c\x71\x86\xe8\x51\xd6\x81\xba\x73\x7b\x83\x2a\x4a\x32\xc4\xd8\xae\x31\xf0\x12\x73\x44\x71\x5a\x8a\xc9\x01\x7c\x8d\x93\xe4\xe2\xf7\x3a\x2d\x05\x31\x1f\xc4\x93\x19\x5a\xc0\xc4\x00\x03\xdb\x21\x80\xff\x8b\x18\x04\x9f\xc0\x76\xd8\x60\x99\xd2\xe2\x3e\xe5\x68\x07\x92\x06\x2a\x8c\xe3\x55\x99\xe2\xbb\x39\xca\x6a\x5a\xf0\x87\x5f\x28\xa9\x2b\xc1\xb1\x8d\x89\x0e\x24\xe0\xc3\x46\x62\x13\xbc\xb4\x61\x05\x4e\xf8\x49\xad\x4b\x23\x85\xd3\x94\xa6\x6b\xc4\x11\x95\x43\xfb\x99\x5b\x09\xd8\xaf\x60\x6c\x10\xbe\x59\xcb\xa4\xac\x19\x47\xd4\xd8\x51\x00\xe0\xcd\x43\x85\x14\xe1\x9c\x16\x78\x09\x87\xdd\xab\x73\xb4\x48\xeb\x92\xcb\xb7\xf6\x73\x96\xd1\xa2\xe2\x8d\xf8\x40\xfd\xaa\xe3\xda\xa4\x66\x9c\xac\x6f\x48\x55\x64\xb3\x1a\xf3\x62\x8d\x02\x93\xf6\xce\x99\x00\x88\x49\x8e\xfe\xc1\x62\x13\x07\xe7\x3d\x47\x55\x49\x1e\xd6\x08\xf3\xeb\xf4\x4b\xb1\xae\xd7\xe1\x69\xdf\xd4\xeb\x5b\x44\x23\xd3\x9e\x8e\xc7\x3d\x73\x6a\xbc\xa0\x42\x34\x43\x98\xa7\x4b\x04\xc8\x02\x68\xf6\x23\x06\x38\x01\x77\x08\x55\x80\xd6\x18\x17\x78\x09\x3e\xaf\x8a\x12\x81\x5c\xd2\x25\x96\xda\x47\x72\x81\x1f\x49\xf2\x4f\xbd\x14\x2b\xb4\xdf\x8e\xe2\x0b\x7c\x5f\x50\x82\x05\xc9\x8f\xd8\xd5\xaf\xda\x4f\xd3\x0e\xec\x37\x8f\x85\xf0\x2d\x2e\x1f\x40\x5a\x96\xe4\x33\x48\x33\xb1\x5c\xb1\x58\xbe\x2a\x18\x10\x56\x74\x41\xc9\x1a\x14\x98\x15\x39\x02\x7c\x85\xc0\xfb\xe9\x24\x42\xf3\x1b\x62\xbe\x38\x13\x08\x51\xfe\x3e\x2d\x6b\xa4\x8c\x89\x34\x1b\x43\x09\x07\x3e\x79\x8b\xf8\x2b\x7a\xf8\xde\x7c\x32\x2c\xdd\x23\xd8\xf4\x8e\x21\x30\xaf\x6f\x31\xe2\x4c\x23\x12\x7c\x62\x15\xca\x8a\xc5\x83\x60\xcb\x91\xe4\x51\x49\xd2\x1c\x34\x96\x09\x20\x9c\x57\xa4\xc0\x9c\x7d\x17\x9e\xcd\x50\x89\x52\x16\x5a\xd0\xb7\x36\x55\x33\x54\x11\x56\x70\x42\x43\x9b\xf4\xb4\xc9\xe6\xa4\xa6\x19\x02\x19\xc9\x11\xa0\xdd\x34\x1e\x09\xb6\xcb\xf8\xd6\x54\xdc\xac\x10\xb8\xb2\xb6\x8e\xe9\xf9\xc0\x52\x4c\x08\x16\x84\xb6\x4a\x11\x20\x4e\x09\x46\x84\xac\xab\x82\xf1\xff\x3a\xfb\x6d\x9e\x24\x17\x93\xd3\x24\x51\xc0\x49\x72\x99\xff\xf7\x63\x48\x7d\x3f\x9d\x00\xa6\xe6\xdb\x8f\xaa\xb8\xdc\x7f\x1f\xe2\x2a\xad\x1e\xfb\x11\xd9\x84\x58\x16\x75\x8e\xee\x1d\xcc\x2e\xfe\xe7\xdd\xe5\xec\xe2\xfc\x10\x5c\xa5\xeb\xdb\x3c\x05\x86\xef\x04\xbf\xa6\x38\x2f\x11\x05\x5a\x1d\x40\x83\xd1\x20\xf3\xba\xc0\x57\x08\x2f\xf9\x4a\x12\x79\x62\xbe\x72\x0c\x80\x4f\xdf\x74\x12\xe1\x5c\xc7\xb4\xf7\xd3\x89\xe0\xd8\x63\x19\xb6\x83\x41\xd3\xc9\xe4\xf2\x7c\xf6\xcd\x45\x5e\xcc\x2c\x10\x87\xa7\xb7\x82\xb1\xeb\xb4\xaa\x0a\xbc\x34\xe5\x1b\x4e\x09\xe5\x53\x4a\x38\xc9\x88\xe3\x79\x56\x9c\x57\x2a\x9c\x14\xb2\x85\x30\xa2\x06\x1c\xfc\xf5\xe6\x66\x2a\x4c\xda\x25\x66\x5c\x68\x5a\xe8\x9d\xd4\x75\x14\x83\x98\xc3\x8e\x3b\x7a\x3a\xd6\x3f\xdf\xfc\xc9\x13\x5a\x33\xf2\xac\x67\x7d\x37\x93\xe8\xf2\xf4\xab\xf8\x64\xf3\xf9\x95\x3b\x55\xd9\xb3\x34\x01\xfe\xb4\xa9\xc0\x36\xb8\xdf\x33\xc4\xa4\x55\xb6\x36\xdc\x0c\x57\x49\x19\x71\xa3\x52\x27\x2e\xcf\xae\x93\x44\xc2\x18\x2b\x99\x52\x52\x21\xca\x0b\x64\x5b\x49\xe1\xf6\x18\xab\xd7\x48\xc0\x4f\x49\x59\x64\x0f\xe7\x24\xab\xbd\xb8\xc9\xb1\x15\x22\x1b\x3b\x3d\x3a\x19\x1f\x9d\xfc\x87\x31\x89\x04\x9a\xf3\x94\x23\x3d\xfe\x83\xf5\x0a\x38\xf8\x24\xf8\xc5\x62\x81\x32\xe9\x8c\xa5\xfb\x75\xb0\x69\xd2\x0b\x9c\x15\x55\x93\x69\xcd\x11\xbd\x2f\x32\xa4\x1c\x74\x29\xed\xd1\x28\x5d\xa7\x7f\x10\x9c\x7e\x66\xa3\x8c\xac\xad\xe4\xc8\x5c\x68\xa6\x0d\xda\x07\x00\x19\x67\x49\xb7\xf0\xce\xbb\x37\x7f\xb6\xd6\x6f\xf3\xad\x85\x19\x4e\x53\xbe\x12\xc4\x1f\x67\x04\xdf\x93\x2f\xc7\xd0\x7e\x2b\x18\xaa\x58\x6e\xb3\xc2\x65\x84\x82\x7c\x78\x93\xae\xd5\x36\xe6\xeb\x02\x17\x8c\xd3\x94\x13\xea\xb1\x04\xee\xd8\x27\xb0\xef\x5e\x01\x6f\xbf\x04\x7f\xbd\x1d\x31\x38\x07\x5f\x88\x9f\x8d\x7c\xaa\x07\x60\xbb\x83\x7b\xe6\xaf\x0e\x72\xdb\x97\x90\xf5\x48\xb7\xf2\x40\x49\xf2\xba\xc6\x8a\xaa\xbd\x84\x7c\x42\x72\xe4\x0b\xf4\xfc\xc7\x57\x75\x76\x87\x78\x97\x7d\xff\x85\x14\x5a\x42\x8e\xe0\x50\xfc\xa5\xf6\x15\x0e\x8d\x64\x5c\x92\x31\x43\x4b\x69\xc9\xb7\xe0\x93\x2f\x6e\x70\xfe\xa3\x0e\xa8\x5d\xac\x0a\x29\x55\xae\xf2\xd8\x42\xdb\x16\x3b\x44\x3e\x7e\xac\x04\xfb\x78\x21\xeb\x20\x05\xc1\xa3\x3f\x8a\x0a\xaa\xb9\xa2\xc2\xa8\x3d\xb1\x40\x56\xe0\x1c\x7d\x19\xa1\x2f\x3a\x35\xb1\xc0\xae\xd1\x9a\xd0\x87\x79\xf1\x87\x64\xea\xc9\xe9\x7f\xda\xaf\x1b\xeb\xa2\x48\xff\x05\xf1\x33\xae\x64\xc3\x33\x41\x42\x32\x28\xf6\xd4\x0d\x1a\xe9\x74\xbb\xba\x40\xb6\xed\x8c\xba\x29\xd6\x88\xd4\x52\xf0\x7e\x1c\x8f\x61\x5c\x50\xc2\x55\x08\xda\x1a\x4d\x30\x8a\x14\x20\x32\x4a\xf0\x3f\xc8\xed\x3e\xa0\x4d\xad\xc2\x04\xdd\xb3\xbc\xc1\x94\x7d\xea\x41\x4e\xd1\x52\x28\xf7\x43\x14\x7b\x68\x50\x13\x10\xc3\x08\x52\xc6\x55\x81\xc8\x76\x25\x6f\x6b\x5e\xd5\x7c\x77\x81\x8c\x68\x38\x30\xea\x5f\x5c\x07\xb7\x83\x1b\xed\x1a\xc3\x23\xba\xb4\x82\x73\x27\xb4\x11\xc6\x4b\xa4\x60\x96\xf8\xb4\x70\xae\xcb\x7c\x26\xfe\xbf\xd9\x88\x54\x4f\xe2\x35\x6a\x92\xa1\x42\x5e\x53\x8d\xa4\x29\x5e\x22\xf0\xfc\x4e\x16\x23\x2f\x30\xa7\xd2\xf6\xb2\x66\x31\xf0\x02\xa7\xb7\x25\xca\x37\x1b\x50\x57\x15\xa2\x02\x72\xbb\xed\xb4\xe2\x0d\x91\x2a\x11\x2c\xd9\x89\x27\x73\x54\x2a\x1b\xfa\x01\x8c\x4d\x1d\xb7\xf1\xbd\x6e\x94\x5b\x99\x11\xa1\xf7\x47\x27\x52\x9d\xb4\x46\x75\xeb\xea\x5f\x61\x53\x51\x73\x56\x87\x62\xab\xeb\xc8\x40\x16\x19\x46\xb8\xd1\xd8\xdc\x09\x59\xaf\xd3\x73\x54\x16\xeb\x82\xa3\x5c\x84\x41\xd0\x28\x0b\xb5\x99\xf4\xc9\x70\x3c\x3c\xfd\xe9\x4f\xe6\x3b\x2b\x85\x50\xa5\x21\xaf\xa8\x43\x6b\x3c\x04\x93\xe9\x3b\x50\xe3\x82\xab\x27\x48\xe8\x0f\x1a\x82\x14\xe7\xe0\xfa\x95\x18\x31\x3b\xbb\x36\xde\xc0\x4e\xbe\xf7\x65\x4f\x2b\x82\x72\xfd\xf0\x8a\x2c\xed\x2c\x36\x20\x6f\x2d\x8c\x92\xb0\xe1\x8e\x19\x0c\x45\x8e\xcd\x61\x3b\x31\xb2\x64\xf2\xbf\x0a\x68\x9f\x29\x3a\xb3\xb2\x57\x45\x3d\x52\x85\x2f\x16\xdd\xb0\xd1\xaf\x29\x9b\xb6\xbb\xa1\x65\xc3\x91\x9e\x0e\x58\x87\x5d\xcc\xa8\x80\x1b\x62\x34\x12\x02\x06\xb6\xdb\x8b\xc9\xfc\x26\x65\x77\xe7\x82\xf8\x82\x07\x12\xcb\x0a\xe1\x9c\xbd\x95\xde\xd0\x72\xf8\xc3\x36\xb0\x93\xae\xe5\x53\x20\x45\x54\xe0\x22\xe7\x73\xe7\x30\x80\x8d\xb8\xe7\x64\x34\xde\x2f\x38\xd0\x13\xdf\x90\x3b\x84\x77\x7a\xbe\xa8\xd7\xd3\xc1\x5b\x24\x90\x70\xc2\x87\x39\x4f\xb3\x3b\x39\x42\xaa\xbd\xd8\xae\x96\x87\xd0\x0f\x29\xcc\x5a\x53\x8b\xa8\x79\xe6\x80\x3a\xa5\xcf\x16\xdc\x7c\xee\x0c\x69\x83\x15\x0d\x2a\x7e\xbb\xde\x39\x65\x77\x7b\xc4\xb1\x4d\x04\x6b\x2f\xc8\x8b\x60\x2f\xd7\xe9\xd2\x80\x93\x3f\x43\x80\x9b\x8d\x10\x58\x34\x92\x56\x08\xe7\xa3\x33\x4a\xd3\x87\xed\xd6\x8f\x62\x35\x40\x20\xe7\x00\x96\x50\xcb\xb8\x68\x08\x9e\xa3\x52\xc6\xbc\x52\xc4\x77\xa3\x37\x89\x91\x18\xb6\xdb\xe1\x66\x83\x4a\x86\xb6\xdb\xcd\x06\xe1\x3c\x3a\x06\x6e\x36\xcd\x5c\xdb\x2d\x0c\x92\x16\x1e\xfe\xc9\x67\x85\x98\x4f\x28\x30\x46\x26\xcd\xaa\x02\x01\x20\xec\x67\xcb\x66\x03\xee\x85\x95\x0b\x0c\xdd\x7a\xc9\x52\x98\x28\x38\xa9\xea\x4e\xc0\x0d\x17\x77\x12\x76\x71\xed\xfe\x7b\x7e\xce\x45\xac\x22\xd2\x20\xee\xd3\xa7\xe2\x8e\x9d\x04\xb4\x00\x67\xd3\x69\x23\x89\xc2\x54\x46\x85\x56\x68\xe1\xd9\xe4\xaf\x1a\x16\xe1\x7b\xfd\x3b\x02\x7b\xf6\xdb\xfc\xef\xb3\x8b\x5f\x2e\xdf\xbe\x31\x47\x18\x4f\xc3\xe3\x8c\xd8\x04\x3d\x0c\xc1\x73\xb5\x69\x4a\x4c\x8d\xa5\x80\xc0\x6e\x4b\xf9\x14\xc2\xa1\xc6\x40\x18\x02\xd2\x76\x5b\x60\xd7\x11\x4d\x2b\x18\xea\x2f\x5f\x1a\xe2\x42\xda\x79\xac\xbd\x97\x31\xba\x2a\xf0\xdd\xfb\x94\xb2\x30\x71\x1e\x6d\xbd\x54\xc5\x66\x87\x57\x6f\x7f\xf9\xfb\x2f\xb3\xb7\xef\xa6\x31\xa7\x1e\x2a\x33\xcc\xde\x4e\x2e\xe6\x73\xdf\x7a\xb9\xc9\xad\x27\x62\xef\x49\x59\xaf\x03\x59\xbe\xcd\x08\x34\xba\x26\x35\xe6\x22\xae\xd4\x03\xc2\x2c\x50\x5e\x7a\x74\xc9\xe6\x0f\x8c\xa3\x75\x64\x13\x05\x91\xa3\x5f\x09\xe3\xdb\x6d\xb2\xd9\x8c\x26\x04\xf3\xb4\xc0\x88\x06\x85\x4a\xf1\x4a\x98\x8f\x08\xb2\x48\x9e\x7a\x7c\xaf\x08\x3d\xf6\xf3\x5f\xc7\x81\x1d\x0b\x3b\x27\x39\x26\x2c\x62\x84\xb0\x50\xaa\xdc\x91\x17\x15\xa4\xd8\x1b\xd0\x9e\x67\x4b\x8a\xde\x10\x15\xc6\x01\x17\xd4\x33\xa5\xf0\xe2\x0b\xa7\xa9\xa0\x71\xd7\x9e\x05\x74\xb0\x1d\x7a\x9d\x56\x91\x0d\x0c\xef\x97\x18\x64\xba\x47\x2d\xe5\x21\x76\x08\x0f\x59\x9d\xe5\x39\x45\x8c\x35\xe0\x8d\x1e\x84\x9c\xc8\x57\x29\xc7\x13\xf8\xd6\xc4\x80\x61\xae\x3d\x1e\xef\x94\x50\x6e\x14\xb9\x7b\x76\x64\x24\x40\x7b\x15\x47\xe4\x0d\x07\xe8\x77\x30\x6a\xca\xad\xaa\x60\x7c\x08\x0e\x9e\x23\x11\xf1\xbe\xd2\x29\xef\xe1\xde\xba\x90\x08\x65\x88\xc5\x04\x7d\xbe\x49\xd0\xba\xd9\x80\x51\x33\x25\xd8\x6e\x85\x10\x04\xcd\x8f\xe6\x84\x00\x6f\x55\x06\x6c\xb7\xc7\xe2\x41\xbb\x92\xf0\xee\x83\x7e\xbd\xea\x53\xfb\xcd\xf1\x0b\x83\xbc\x8a\x50\x0e\xd8\x8a\xd4\x65\x0e\xd6\x29\xcf\x56\x26\x2d\xf2\xe5\x82\x50\xf0\xee\x7c\x0a\x5e\x1c\xc7\xad\x92\xb5\xde\x64\xe7\x82\xfe\x1f\x98\x83\x29\x2d\xee\x8b\x12\x2d\x51\xde\x19\xff\xee\x99\xc7\xf5\x7d\xeb\x99\x5a\x5b\x02\x82\x61\x27\x45\x6d\x1f\x93\x8a\xd2\x9d\xc2\x43\x28\x8a\xb6\xf3\xa8\x67\x16\x7b\x54\xc0\x6c\x08\xba\xcb\x2c\x68\xa6\x8e\xed\x5e\x35\x35\x5d\x39\x59\x24\x74\x0f\x31\xdf\x4e\x8d\x02\x59\x95\x4c\xe7\x9e\x85\xb8\x6f\xa7\xc4\x17\x13\xe1\x55\x74\x6d\x7f\xbf\x9a\x6e\xd7\x2a\xd4\x95\x19\xf5\x33\x27\x7b\xe9\x1a\x58\x26\x04\x2f\x8a\x65\x4d\xdd\x82\x87\x06\xd4\x8d\x28\xbf\xa2\xb4\xe4\xab\x87\xa9\x6a\x47\xe9\xa4\xc2\x6b\x84\xf1\x25\xb8\xe9\xbe\xe9\x1b\xab\xfb\x73\x6c\xc1\x72\x29\x66\x05\x45\xf9\x44\x84\x0c\xc1\xc0\x38\x52\x57\xda\x2b\x30\xde\x4b\x4c\xae\x48\x9a\x37\x2f\x43\x56\x39\x10\x4a\xb7\x8a\xbe\x5f\x1a\x68\x8e\x10\xb6\x52\x8f\x38\x90\x29\x96\x54\x42\x69\xec\xc7\x87\x96\x05\x09\xa1\x31\x69\xed\xf2\xf0\x8e\x39\xfb\xcb\xbb\x67\x2e\x9c\x93\x20\x67\xb3\xe3\xc5\x72\x53\xfc\x23\x25\x83\xa0\x3e\xf9\xe5\x93\xbe\x5d\xf6\x6b\x21\x06\xc1\x8e\x49\x32\xa7\xdb\x55\x3a\x0b\x76\x4e\xda\xe5\xc5\x96\x95\x66\xed\xe8\xb9\x2e\x57\x49\xf2\x92\x97\x9a\xde\xd1\xd4\x78\x6a\x00\x37\xb3\x4c\x29\x5a\x14\x5f\x04\x7c\x45\x0b\xcc\x17\x00\x36\xb8\xff\x95\x41\x1b\xa7\x5b\xa6\x1a\x99\xb1\x83\x51\x9b\x92\x3d\x91\x81\x39\x82\x5e\x79\x22\x0c\xcc\xa2\xc8\xbc\x36\x8d\x68\x43\xa6\xbb\xd4\x9d\x68\x65\x94\xec\x75\x11\x3d\x6a\x4b\xc2\xd5\xde\xf0\x76\xb4\xfd\x34\x22\xf5\xda\x9b\x79\x9d\xa0\x35\xe3\x9d\x1d\xfc\x1a\x1e\x7e\x97\x8e\xa8\xc7\x50\x28\x63\xaf\xc7\x90\x26\xcc\xa5\x32\x49\xed\x64\xb3\x14\xe7\x64\xcd\xc0\x41\xc1\x49\xda\xcd\x72\xe8\xf9\xe9\xde\x85\x3c\x6a\xfb\xed\x6a\x76\xac\xd0\xab\x37\xf8\xda\xb5\x7b\xbb\xa5\xa3\xd5\xbd\x96\xc7\x0e\x6b\x1d\x3e\xf6\xc7\x2f\xce\xd8\xee\x80\xc0\xa8\xb9\xbb\xa6\x53\xec\x9b\x65\x9f\xc5\x38\x00\xcf\xdf\xcc\x55\xc2\xf9\xc9\xee\x97\xf8\x2e\xe2\xdc\xfc\xf3\x6b\x42\xb5\x08\x76\xab\x3c\xad\x57\xed\xc6\xc9\xdf\x46\xc2\x5d\x17\xf8\x1d\x08\x37\xc5\x66\xe4\xba\x5d\xc0\x69\x8d\xa4\x3c\x8e\x4c\x63\xfd\x34\x79\x77\xcf\x56\xbe\x83\xc4\x07\x04\x2e\xd6\xef\xf8\x44\x4e\xba\x31\xef\xa9\x88\xe9\xcc\x99\x8c\x76\xd9\x60\xdc\x0b\x25\x98\x7d\xba\xe6\x65\xac\x60\x8f\x23\x87\xa3\x86\x54\xaf\x2c\x63\xf7\x7a\x5e\xe2\xa5\x2e\x43\x38\x89\x46\xaf\xce\x69\x28\x37\x64\x54\xa5\xad\x69\x7d\x5b\x16\x99\x9f\xc4\xc1\x49\x91\xd3\x4b\xc1\x6d\x38\x1e\xc9\xff\x1d\x8f\x03\x47\x02\x91\x94\xb6\x1b\x6d\xf4\x54\xe8\xe6\x3d\x3f\x3b\x8e\x25\x92\xf0\xb2\x32\xfb\xb4\x76\x65\xab\xf0\x35\x25\x6b\x23\x76\xb5\x74\xda\x03\xbe\x21\x31\x50\x3b\xc1\xdc\x15\x24\x3a\x3b\x1b\x48\x75\xcd\x34\xeb\x7d\x95\x5d\xe6\x2e\x5b\xbc\x83\xf4\x61\x54\x15\x42\xc7\xc2\x4a\x7c\xcb\x94\xf1\x22\xeb\xac\x40\x81\x97\x49\x62\x1a\x85\x4e\x9c\x1f\xe7\x24\xac\x3c\x77\x0f\x3d\xed\xd6\x1d\xd3\x1f\x25\x82\xe8\x77\x30\x9a\x67\x2b\xb4\x46\x00\x16\xdd\x05\x1d\x2b\x10\x57\xef\x55\x33\x4d\xa8\x8d\xc6\x68\x3a\x56\xfa\x77\xb9\x50\x54\x36\x0d\xbf\xf6\xf6\x1b\xbd\x0c\x76\x5f\xb0\x2b\x9b\x1e\xa0\x9d\x93\x58\xaa\x1a\x54\x86\x8e\x72\x87\xb0\xf6\xa6\xc2\xd0\x5c\x53\x5c\x9a\xbc\x53\xc8\xe8\x92\x2f\x43\xd8\xfc\x75\x06\xd7\xe6\xaf\xc8\x16\x77\x21\x3a\x18\xc9\x5e\xaf\x73\x9a\x16\xb8\xc0\x4b\xd5\x00\xa7\xc8\xd0\xb2\x04\x13\xe9\x7c\x86\x66\x1f\xd1\x9f\xc6\x96\x59\xeb\xf0\x98\x5d\x27\x00\x5e\xe6\x25\x32\x9a\x8f\x84\x90\x19\x8f\x54\x52\x68\xa2\xa1\x84\xb1\xbf\x11\x8c\x9a\x29\xbb\x57\xaa\x6c\x30\x59\xa1\xec\xce\x2d\x56\xe8\x8a\xc2\xcd\x8a\x22\xb6\x22\xa5\xac\x34\x9d\xda\x02\x25\x99\x78\x9f\xb6\x76\x47\x0d\x69\x9e\xba\x06\x05\xde\xa4\x74\x19\x6e\x5d\xf3\xea\x95\x06\x3a\xc3\x98\x25\x51\x09\x8d\x29\x66\x13\x72\x68\x54\x84\xf2\x58\x49\xd3\x9c\x31\xe5\x2b\xc7\xc4\xf9\xe7\xdb\x0e\xff\xd5\x48\x63\x07\x2c\xe0\x77\x78\x15\xe4\x66\x97\xf8\x1a\x7b\xd2\x74\xee\x7e\x4b\x0f\x66\xb9\x79\xc5\xce\x51\xf0\x1c\xca\x71\x25\x46\xe4\xe4\xf4\x13\xcb\xf1\xfb\xfb\x3a\x1b\xb5\xa3\x8c\x32\xf5\xf5\x82\xf8\x47\xa6\x72\xc3\xae\x99\x79\x7e\x15\xec\xac\x8d\x7a\x52\xd3\x11\xec\xed\x22\x43\xcd\xd2\x16\xe7\x5c\x80\x30\xe7\x3a\x3c\x6a\xe2\x50\x11\xe5\x2b\x33\xc7\xc0\xc1\xdf\x7c\x7e\x65\xf0\xaa\x71\xb2\xdf\x6f\x2f\x3c\x29\x88\x9a\xee\x3e\xd0\xa7\x92\xe1\x57\xd4\xdd\x86\xdf\x6f\x1b\xbf\x44\xba\xa8\xf7\x54\x60\x5f\x61\xbf\x3c\xf4\x69\x6d\xa0\xac\x69\x37\x67\x2b\x87\x63\xe1\x09\x76\xad\xcb\x41\x4d\xbc\x64\x81\x1b\xaf\x42\x8d\x03\x9c\xd3\xe2\xb6\xe6\x6a\xc1\x91\xc3\xc4\x86\x98\x5d\x64\x00\x2b\xe9\x14\xee\xca\x3f\x41\xda\x7a\x27\x22\x8e\xfe\x30\xdd\xeb\xf8\x74\x0d\xf2\x1a\xc5\x87\xee\x66\xf9\xb2\xf2\x64\xf9\xb9\x7a\x35\x21\xe4\xae\x40\x73\x5e\x64\x77\x05\x46\x8c\xb5\xf1\x83\x58\x95\xbd\xbb\xe9\x42\x56\x52\x1f\xa0\xc5\x96\x60\x81\x79\x03\xf6\x48\x80\x63\x69\x95\xbe\x92\xdd\x5a\x0b\xd0\x09\x77\xe8\x3e\x77\xdb\xfb\xdc\x1e\x72\xed\x8c\x85\xb7\xfe\x18\x07\xa0\xe3\x56\xbb\x31\x46\x32\xb0\x2b\x41\x0f\x74\x53\x1b\x5d\x86\xb2\x95\x66\x42\x09\xfe\x0b\xb9\x65\x7e\xb7\xb0\x88\xa2\xb0\x73\x8f\x65\xd7\x2d\x96\x68\x4a\xbc\xe7\x0d\x96\x3d\xee\x44\xf4\xdc\x5e\xf1\x5a\xdd\x76\xdd\x5c\xf9\x36\xf7\x56\xbe\xe2\xd6\x4a\xe4\x5c\xd2\xb4\xa4\xf1\xdb\x2a\x51\x2b\x6b\x87\x75\xb6\xb2\xe8\xfd\x75\x4f\xc0\x76\xde\x4f\xd9\xf3\x76\x4a\xef\x5d\xa2\x70\x9f\xc5\x1e\xf7\x89\x4c\x9e\x42\x94\xb1\x64\x56\xe3\x9b\x94\xdd\x85\x41\xed\xbb\x2e\x41\x10\x33\xb5\x8d\x98\xeb\x33\x8a\xdb\x63\x84\x30\x08\x50\xb4\x64\xe6\x99\xe6\x8e\xa8\xde\x1a\x9c\x52\x9c\xa4\x9f\x59\x22\x90\x44\xfc\x00\xf0\x2d\x67\x7b\x8b\x25\x3e\x02\x7e\x05\xba\xb3\x2c\x23\x35\xe6\x97\xf9\x0e\x8c\x7a\x95\xc7\x3d\x98\xdb\x8e\xb9\xc9\xd5\xbb\xf9\xcd\xc5\x0c\x46\x9b\x1f\x80\x77\x2b\xa6\xfb\x13\x7a\xea\x3f\x0b\x45\x4b\x4f\x97\xad\xf0\x66\xc1\x92\x2c\x59\x32\xa1\x28\xe5\xa8\xed\x47\x8b\xf8\x6d\x1b\x74\xce\x29\x4a\xd7\xbd\xb0\xd3\x9a\x5f\x91\xe5\xc5\x3d\xc2\x9c\x85\x98\x15\x70\xf4\xb6\x88\x47\xfa\xc0\x1a\xe1\x92\x93\xf4\xdc\x85\x1a\xaa\x66\x99\x3e\xa9\x00\x50\x60\x39\x92\xb7\xba\x93\xe3\xf4\x33\x6b\x6e\x3a\xbd\xf0\x6f\x37\xa9\x3f\xff\xc4\xdd\xf9\xe7\xb1\x3c\x70\x2a\xd2\x49\x8b\x71\x9a\x0c\x60\x12\x67\x9c\x1b\xa6\x47\xbd\x85\x11\x09\xf8\x71\x80\x76\xd6\xed\x7d\xbb\x98\xc3\x8e\x5e\xcc\x73\xab\x78\xad\xeb\xdf\x5d\xad\xf3\xaf\xb4\xad\xf4\x03\xc3\x73\xf5\x5c\x58\x6b\x66\x0a\x1e\xc0\x1b\xf7\xd4\xf4\x77\x5c\xfe\x7d\xf4\xa3\x75\x37\xbd\x2d\x4a\xfc\x34\xb6\xea\x48\xde\x5d\x42\xf8\xb7\xa2\x7a\x5d\x94\x81\xfd\x84\x1f\xb1\x5f\x8e\x19\xd4\x0c\x01\xc6\x69\x91\xf1\xc1\xcf\xae\xf7\xbc\x4f\x29\x48\x3f\x33\xf0\x12\x50\xf4\x7b\x5d\x50\x74\x30\x48\x3f\xb3\x23\x96\xdf\x0d\x0e\x83\xc0\x28\x13\xc0\x18\x7d\x16\xc3\x46\x17\x93\xf9\xc1\x66\x9d\x7e\x99\x21\x4e\x0b\xc4\x92\x93\xf1\x36\x3c\x4c\x88\xaf\x31\x6e\x52\x92\x3a\xff\x2d\xe5\xd9\xea\x8a\x2c\xd9\x41\x78\x8c\x36\xdc\xe0\x25\x18\x04\xec\xb3\xb7\x96\x88\x39\xd1\xb3\x4b\x69\x16\xa8\x2c\x93\x61\x36\xe9\x02\x38\xf8\x39\xd8\x35\xda\x83\x58\xdf\xad\xf4\xf0\x1a\xb7\x25\xa2\x68\x25\x02\x6e\xf5\x53\x08\x16\x6d\xdc\x65\xf9\x87\x4d\xfe\xed\x98\x1d\xa4\x8a\x57\x82\x87\x4d\x9e\x30\x48\x1c\x7a\xbb\x1a\x5c\x4f\xab\x87\x58\xca\x30\xcc\xa1\x60\x55\x46\x4d\x3b\x48\x06\x03\x77\x77\xbd\x36\x26\xf4\xa5\x12\xa9\x5f\xa3\x70\xe0\x25\x58\x68\xc5\x3e\x40\xc2\xda\x0d\x41\x46\x30\x47\x5f\xf8\xa1\xc7\x1f\x39\x8b\x14\x17\x75\xd1\x00\xbc\x04\x72\xc8\x48\xff\x1e\x51\x54\x95\x69\x86\x0e\x8e\xff\xed\x5f\x0e\x3e\x7e\xcc\x7f\x38\xfc\xf9\x78\x39\xec\xf0\xcb\xde\xc3\x21\xc8\x51\x16\xc1\x0d\x00\x45\xbc\xa6\x18\xa8\x73\xfb\xd1\x82\x92\xf5\x64\x95\x52\xa1\x99\x07\x62\x98\x27\xbc\xe2\x3f\x01\x3d\x68\x08\x55\x2d\x15\x81\xad\x86\xcd\x3f\x18\x4f\x29\x47\xf9\xab\x87\x04\x0c\x44\xe6\x33\x18\xc6\x20\x6d\xf9\x49\x5c\x79\xfa\xa0\x58\xa1\x9b\x47\x3e\x45\xd1\x68\x55\x4b\x9a\x7f\xc4\x01\x85\x73\x4d\xc0\x49\x14\x80\xdc\x23\x4a\x8b\x1c\xb1\x24\xbe\x3c\x85\x48\x37\x59\xbd\xed\x06\x7c\xe8\x1b\x00\xa4\x78\xe3\x74\x8d\x12\x6b\x51\xc3\x66\xe3\x93\x0f\x60\xc0\x56\x83\x21\x18\x1c\x65\x83\xf6\xa9\x10\xd6\x3e\xb4\x9f\x62\x2f\x83\xa3\xb6\xd1\x4d\x65\x77\xe8\x33\x78\x09\xae\x53\xbe\x1a\x2d\x4a\x42\xe8\x81\xfc\x27\x95\xad\x1b\x07\x87\x2f\x4e\xc6\xe3\xf1\x38\x2c\x13\x25\x59\x1e\x58\x4b\x02\x3f\x80\x41\x32\x00\x3f\xb4\xe6\xe5\x07\x30\x38\x16\x72\x20\x67\x79\x29\xde\xc8\xe9\x7e\x00\x83\x35\x6b\x16\x2a\x1f\x5b\x92\x6f\x08\x39\xa2\x34\x2a\xdd\x72\x2f\x18\x29\xd1\x48\x10\x32\x40\x94\x9e\x0e\x86\x40\x8c\x08\x52\x2b\xfe\x30\xc4\xb5\xbb\x3a\x68\xa7\x38\x04\x1b\xe1\x1c\x46\x54\x25\x38\x07\x4a\xca\x5b\xc5\x1d\xe5\x04\xa3\x43\x61\x44\x04\xe9\x7b\xeb\x8c\xcf\xf0\x66\x42\xc9\xb6\x35\x62\x2c\x5d\xa2\x21\xc8\x6e\x7b\x2c\x03\x93\x91\x95\x30\xd2\x82\x89\x47\x82\x51\x07\xc2\x13\x9d\xa7\x1c\x1d\x1c\x1e\x8e\x96\x6a\x39\x01\x37\x04\xf6\x56\xd9\xc6\xc5\x08\xfb\x99\xb4\xbf\xa2\x6a\x52\x36\xf1\x9e\x82\x67\xa1\xd8\x4f\xf1\x24\x22\x31\x6c\x94\xd9\x81\x63\xcb\xf0\x47\x6e\xfa\xae\x3d\xdf\x8f\x0d\x9a\x3a\x15\xa2\xee\xa5\xd1\x7a\x0b\x13\xd0\xee\xa5\x08\x93\x18\x4f\xd7\x55\x12\xd9\xa6\x1d\x1a\x1d\x65\x3a\xf8\xfa\x7d\x02\x5f\xb3\x57\x20\xb6\x5f\xc0\xe1\xb7\x5e\x6a\x9c\xd9\x72\x83\x2b\x23\xda\xef\xd4\xe9\x36\xa6\x3b\xbe\x93\x35\x4b\x34\x56\xd0\x1e\x38\x8d\x77\xba\x65\x74\xc8\xb1\xa3\xae\x26\x42\x8a\xf9\x8a\x50\xae\xa3\x86\x59\xdd\x53\x63\xd3\x32\x91\x48\xa0\x9d\xb1\xb8\xd1\xd4\x3b\xba\x22\x78\xa9\x67\x38\x62\xd9\x0a\xe5\xb5\xfd\xb9\x99\xb9\x7e\x76\xf1\xa5\xa2\x88\x35\xb5\x1e\x49\x9c\x7e\xe3\xf4\x17\xa9\xd3\x4c\xaf\xe4\x2d\xc3\xf6\x68\x6c\xdf\xa5\x1a\x91\x3b\xb9\x97\x79\x80\x60\x7d\x70\xea\x9c\xbd\x56\xfa\xf4\xf1\x63\x73\xe3\xfa\x23\x4c\xc0\xc7\xa6\x01\x44\xfa\x80\xed\xf6\x23\x1c\x82\x8f\x50\x1b\xf3\x0e\x40\x5f\xa8\x94\x00\xc6\x1e\x87\xaa\xaa\x81\x2d\x52\x89\xd3\x14\xd1\x75\xc1\x58\x28\xc3\x02\x6e\x8a\x65\xc0\x86\x76\x0d\xd8\xd5\xd1\xac\x6d\x3f\x54\xa9\x76\x72\x89\xef\xc9\x1d\x0a\x7d\x40\xa5\x79\xa6\xda\x84\x1e\xc9\x77\xa3\xf0\x29\x26\x95\x0e\x90\x39\xa5\x4e\x53\x54\x64\x26\x2c\xd1\x44\xbb\x01\x3d\x89\x36\x26\xee\x53\x9c\x70\xe5\x3a\xf4\xfd\x0d\x75\x6d\x7f\xa6\xdf\x04\x3e\xb8\x17\xb8\x86\x3e\x33\xc0\xf4\xde\x06\xaf\x9f\x87\x35\xea\xe9\xd7\xce\x8d\xef\x02\x7a\x4d\xef\x5e\xcb\xd7\xb3\x86\x49\xd1\x2f\x0d\xf8\x9f\xec\xb0\x99\xa2\xce\x37\xf5\x3a\xbd\x2f\x26\x78\xa5\x9e\x67\x7a\x37\x7a\x99\xda\xd3\x05\x1a\x18\x36\xf4\x96\xac\x05\x20\xba\x26\xe7\xab\x29\x56\x57\x7e\xf8\xd3\x0c\xee\xb9\x43\x64\xf3\xf6\x3a\x73\x88\x16\xb0\x9d\xaa\x7a\xb4\x2a\xe5\x56\xfc\xad\xd7\xee\x5d\x84\xfe\x02\x98\x7d\x1c\xe1\xce\x63\x1c\x4e\x78\x75\x24\x28\x62\x48\x5b\x7d\x1f\x53\x59\x32\x54\x3e\x5c\xfe\x6f\x14\xb9\x33\x69\xb1\xe3\x8a\xf0\x61\x85\xe5\x37\xec\x83\x0a\xeb\x32\x86\x0f\x16\xff\xe4\xd9\xb7\xff\x9a\x59\x6f\x05\x12\x22\xd5\x52\x57\x92\x34\xbf\x6d\x5b\xea\x54\xb7\xe7\x2d\x8a\x9c\x3f\x44\xc6\x28\x75\x46\xb4\x39\xc9\x65\xaf\x29\x59\x07\x9b\xf3\x76\x63\x9b\xb9\xb8\x7e\x2b\xf8\x6a\x0f\x5c\xd9\xe9\x4e\xe2\xb3\xd3\xe4\xac\xe6\x2b\x42\x8b\x3f\x50\xb0\xf1\xd4\x1b\x15\x3a\xae\x36\x0a\xaa\x41\xbe\xbe\x08\xa0\x71\x9e\x38\x17\x7d\x82\x42\xdc\xfc\xeb\xd3\x6e\x6b\x6a\x7e\x8f\xc9\xff\xcc\x91\x6d\x73\xe6\x3f\x26\x89\xfe\x12\x99\x36\x3a\xe7\xa8\x44\x42\x4e\xda\x93\x6a\x38\x43\x22\x39\xdf\x61\x94\xe4\x07\x84\x27\x04\x73\xaa\x3a\x67\xdc\x56\x44\x78\x93\x3a\x37\x6c\x37\xcd\xd7\x3f\x20\x93\xd7\xcd\x85\x8d\x6d\xfb\x05\xf4\xc7\xcf\xac\xfe\xbc\x16\x3e\xad\x2a\x13\xb8\xc7\xf5\x84\xd8\x66\x70\xed\xff\x02\x00\x00\xff\xff\x31\xdd\x2f\x77\x47\x5e\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

