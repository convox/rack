// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xb8\xb9\x93\x3d\x23\xcb\xb2\x73\xb3\x77\xcb\xb9\x5c\x95\x23\x3b\x89\x77\xed\x44\x27\x39\x49\xdd\x26\xae\x2d\x9a\x84\x24\xae\x29\x80\x03\x40\x8e\x3d\x2a\xfd\xf7\x2d\x3c\x48\xe2\x49\xc9\x76\x52\x3b\x5b\x3b\x63\x91\x8d\x46\xa3\xbb\xd1\x2f\x34\xb8\x5e\x83\x1c\xcd\x0a\x8c\x00\x4c\xab\x0a\x82\xcd\xe6\x05\x00\xeb\x35\xf8\x29\xad\x2a\x90\xbc\x02\x83\x93\xaa\x6a\x1f\x2e\x53\x5c\xcc\x10\xe3\xf2\xcd\x65\xfd\x43\xbd\x7e\x01\x00\x00\xf0\xe4\xf3\xf4\x0a\x2d\xab\x32\xe5\xe8\x0d\xa1\xcb\x94\x7f\x42\x94\x15\x04\x43\x90\x00\x78\x3c\x3c\x1a\x1e\x0c\xff\x7c\x30\xfc\x33\xec\x2b\xf0\x11\xc1\x79\xc1\x0b\x82\x19\x4c\x34\x0a\x39\x13\xd7\x38\x00\xbc\x49\xcb\x14\x67\x88\x1e\x64\x2d\xa8\x3b\xb7\x37\xa8\xa2\x24\x43\x8c\x6d\x1b\x03\xcf\x31\x47\x14\xa7\xa5\x98\x1c\xc0\x37\x38\x49\xce\x7e\x5f\xa5\xa5\x20\xe6\x8b\x78\x32\x41\x33\x98\x18\x60\x60\xd3\x07\xf0\xff\x11\x83\xe0\x1a\x6c\xfa\x35\x96\x31\x2d\xee\x52\x8e\xb6\x20\xa9\xa1\xc2\x38\x5e\x97\x29\xbe\x9d\xa2\x6c\x45\x0b\xfe\xf0\x96\x92\x55\x25\x38\xb6\x36\xd1\x81\x04\x7c\x59\x4b\x6c\x82\x97\x36\xac\xc0\x09\xaf\xd5\xba\x34\x52\x38\x4e\x69\xba\x44\x1c\x51\x39\xb4\x9b\xb9\x95\x80\x7d\x04\x63\x83\xf0\xf5\x5a\x46\xe5\x8a\x71\x44\x0d\x89\x02\x00\xaf\x1e\x2a\xa4\x08\xe7\xb4\xc0\x73\xd8\x6f\x5f\x9d\xa2\x59\xba\x2a\xb9\x7c\x6b\x3f\x67\x19\x2d\x2a\x5e\xab\x0f\xd4\xaf\x5a\xae\x8d\x56\x8c\x93\xe5\x15\xa9\x8a\x6c\xb2\xc2\xbc\x58\xa2\xc0\xa4\x9d\x73\x26\x00\x62\x92\xa3\x7f\xb0\xd8\xc4\xc1\x79\x4f\x51\x55\x92\x87\x25\xc2\xfc\x32\xbd\x2f\x96\xab\x65\x78\xda\xf7\xab\xe5\x0d\xa2\x91\x69\x8f\x87\xc3\x8e\x39\x35\x5e\x50\x21\x9a\x21\xcc\xd3\x39\x02\x64\x06\x34\xfb\x11\x03\x9c\x80\x5b\x84\x2a\x40\x57\x18\x17\x78\x0e\xbe\x2d\x8a\x12\x81\x5c\xd2\x25\x96\xda\x45\x72\x81\x9f\x48\xf2\xaf\x9d\x14\x2b\xb4\xdf\x8f\xe2\x33\x7c\x57\x50\x82\x05\xc9\x4f\x90\xea\xa3\xe4\x69\xda\x81\xdd\xe6\xb1\x10\x7e\xc0\xe5\x03\x48\xcb\x92\x7c\x03\x69\x26\x96\x2b\x16\xcb\x17\x05\x03\xc2\x8a\xce\x28\x59\x82\x02\xb3\x22\x47\x80\x2f\x10\xf8\x34\x1e\x45\x68\x7e\x4f\xcc\x17\x27\x02\x21\xca\x3f\xa5\xe5\x0a\x29\x63\x22\xcd\x46\x5f\xc2\x81\x6b\x6f\x11\x7f\x45\x0f\x3f\x9a\x4f\x86\xa5\x7b\x02\x9b\x3e\x32\x04\xa6\xab\x1b\x8c\x38\xd3\x88\x04\x9f\x58\x85\xb2\x62\xf6\x20\xd8\x72\x20\x79\x54\x92\x34\x07\xb5\x65\x02\x08\xe7\x15\x29\x30\x67\x3f\x84\x67\x13\x54\xa2\x94\x85\x16\xf4\xbd\x4d\xd5\x04\x55\x84\x15\x9c\xd0\x90\x90\x9e\x37\xd9\x94\xac\x68\x86\x40\x46\x72\x04\x68\x3b\x8d\x47\x82\xed\x32\xbe\x37\x15\x57\x0b\x04\x2e\x2c\xd1\x31\x3d\x1f\x98\x8b\x09\xc1\x8c\xd0\x66\x53\x04\x88\x53\x8a\x11\x21\xeb\xa2\x60\xfc\x7f\x4e\x3e\x4f\x93\xe4\x6c\x74\x9c\x24\x0a\x38\x49\xce\xf3\xff\x7d\x0a\xa9\x9f\xc6\x23\xc0\xd4\x7c\xbb\x51\x15\xd7\xfb\x1f\x43\x5c\xa5\xb7\xc7\x6e\x44\xd6\x21\x96\x45\x9d\xb3\xf7\xf6\x26\x67\xff\xf7\xf1\x7c\x72\x76\xba\x0f\x2e\xd2\xe5\x4d\x9e\x02\xc3\x77\x82\x77\x29\xce\x4b\x44\x81\xde\x0e\xa0\xc6\x68\x90\x79\x59\xe0\x0b\x84\xe7\x7c\x21\x89\x3c\x32\x5f\x39\x06\xc0\xa7\x6f\x3c\x8a\x70\xae\x65\xda\xa7\xf1\x48\x70\xec\xa9\x0c\xdb\xc2\xa0\xf1\x68\x74\x7e\x3a\xf9\xee\x2a\x2f\x66\x16\x88\xc3\xd3\x5b\xc1\xd8\x65\x5a\x55\x05\x9e\x9b\xfa\x0d\xc7\x84\xf2\x31\x25\x9c\x64\xc4\xf1\x3c\x0b\xce\x2b\x15\x4e\x0a\xdd\x42\x18\x51\x03\x0e\xbe\xbb\xba\x1a\x0b\x93\x76\x8e\x19\x17\x3b\x2d\xf4\x4e\xee\x75\x14\x83\x98\xc2\x96\x3b\x7a\x3a\xd6\x3d\xdf\xf4\xd9\x13\x5a\x33\xf2\xac\x63\x7d\x57\xa3\xe8\xf2\xf4\xab\xf8\x64\xd3\xe9\x85\x3b\x55\xd9\xb1\x34\x01\xfe\xbc\xa9\xc0\x26\x28\xef\x09\x62\xd2\x2a\x5b\x02\x37\xc3\x55\x52\x46\xdc\xa8\xdc\x13\xe7\x27\x97\x49\x22\x61\x8c\x95\x8c\x29\xa9\x10\xe5\x05\xb2\xad\xa4\x70\x7b\x8c\xad\x96\x48\xc0\x8f\x49\x59\x64\x0f\xa7\x24\x5b\x79\x71\x93\x63\x2b\x44\x36\x76\x7c\x70\x34\x3c\x38\xfa\x2f\x63\x12\x09\x34\xe5\x29\x47\x7a\xfc\x17\xeb\x15\x70\xf0\x49\xf0\xb3\xd9\x0c\x65\xd2\x19\x4b\xf7\xeb\x60\xd3\xa4\x17\x38\x2b\xaa\x3a\xd3\x9a\x22\x7a\x57\x64\x48\x39\xe8\x52\xda\xa3\x41\xba\x4c\xff\x20\x38\xfd\xc6\x06\x19\x59\x5a\xc9\x91\xb9\xd0\x4c\x1b\xb4\x2f\x00\x32\xce\x92\x76\xe1\xad\x77\xaf\xff\xd9\x58\xbf\xcd\xb7\x16\x66\x38\x4e\xf9\x42\x10\x7f\x98\x11\x7c\x47\xee\x0f\xa1\xfd\x56\x30\x54\xb1\xdc\x66\x85\xcb\x08\x05\xf9\xf0\x3e\x5d\x2a\x31\xe6\xcb\x02\x17\x8c\xd3\x94\x13\xea\xb1\x04\x6e\x91\x13\xd8\x55\x56\xc0\x93\x97\xe0\xaf\x27\x11\x83\x73\xf0\x67\xf1\xb3\xd6\x4f\xf5\x00\x6c\xb6\x70\xcf\xfc\xd5\x42\x6e\xba\x12\xb2\x0e\xed\x56\x1e\x28\x49\xde\xac\xb0\xa2\x6a\x27\x25\x1f\x91\x1c\xf9\x0a\x3d\x7d\xf9\x7a\x95\xdd\x22\xde\x66\xdf\x7f\x21\x85\xd6\x90\x03\xd8\x17\xff\x51\x72\x85\x7d\x23\x19\x97\x64\x4c\xd0\x5c\x5a\xf2\x0d\xb8\xf6\xd5\x0d\x4e\x5f\xea\x80\xda\xc5\xaa\x90\x52\xe5\x2a\x0f\x2d\xb4\x4d\xb1\x43\xe4\xe3\x87\x4a\xb1\x0f\x67\xb2\x0e\x52\x10\x3c\xf8\xa3\xa8\xa0\x9a\x2b\xaa\x8c\xda\x13\x0b\x64\x05\xce\xd1\xfd\x00\xdd\xeb\xd4\xc4\x02\xbb\x44\x4b\x42\x1f\xa6\xc5\x1f\x92\xa9\x47\xc7\xff\x6d\xbf\xae\xad\x8b\x22\xfd\x2d\xe2\x27\x5c\xe9\x86\x67\x82\x84\x66\x50\xec\x6d\x37\x68\xa4\xd3\xcd\xea\x02\xd9\xb6\x33\xea\xaa\x58\x22\xb2\x92\x8a\xf7\x72\x38\x84\x71\x45\x09\x57\x21\x68\x63\x34\xc1\x20\x52\x80\xc8\x28\xc1\xff\x20\x37\xbb\x80\xd6\xb5\x0a\x13\x74\xc7\xf2\x06\x53\xf6\xa9\x03\x39\x45\x73\xb1\xb9\x1f\xa2\xd8\x43\x83\xea\x80\x18\x46\x90\x32\xae\x0a\x44\xb6\x2b\xf9\xb0\xe2\xd5\x8a\x6f\x2f\x90\x11\x0d\x07\x06\xdd\x8b\x6b\xe1\xb6\x70\xa3\x59\x63\x78\x44\x9b\x56\x70\xee\x84\x36\xc2\x78\x89\x14\xcc\x52\x9f\x06\xce\x75\x99\x2f\xc4\xff\xd7\x6b\x91\xea\x49\xbc\x46\x4d\x32\x54\xc8\xab\xab\x91\x34\xc5\x73\x04\x7e\xba\x95\xc5\xc8\x33\xcc\xa9\xb4\xbd\xac\x5e\x0c\x3c\xc3\xe9\x4d\x89\xf2\xf5\x1a\xac\xaa\x0a\x51\x01\xb9\xd9\xb4\xbb\xe2\x3d\x91\x5b\x22\x58\xb2\x13\x4f\xa6\xa8\x54\x36\xf4\x0b\x18\x9a\x7b\xdc\xc6\xf7\xa6\xde\xdc\xca\x8c\x88\x7d\x7f\x70\x24\xb7\x93\xde\x51\xed\xba\xba\x57\x58\x57\xd4\x9c\xd5\xa1\xd8\xea\x5a\x32\x90\x45\x86\x11\x6e\xd4\x36\x77\x44\x96\xcb\xf4\x14\x95\xc5\xb2\xe0\x28\x17\x61\x10\x34\xca\x42\x4d\x26\x7d\xd4\x1f\xf6\x8f\x7f\xfd\x93\xf9\xce\x4a\x21\x54\x69\xc8\x2b\xea\xd0\x15\xee\x83\xd1\xf8\x23\x58\xe1\x82\xab\x27\x48\xec\x1f\xd4\x07\x29\xce\xc1\xe5\x6b\x31\x62\x72\x72\x69\xbc\x81\xad\x7e\xef\xca\x9e\x46\x05\xe5\xfa\xe1\x05\x99\xdb\x59\x6c\x40\xdf\x1a\x18\xa5\x61\xfd\x2d\x33\x18\x1b\x39\x36\x87\xed\xc4\xc8\x9c\xc9\x7f\x2b\xa0\x5d\xa6\x68\xcd\xca\x4e\x15\xf5\x48\x15\xbe\x98\xb5\xc3\x06\xef\x52\x36\x6e\xa4\xa1\x75\xc3\xd1\x9e\x16\x58\x87\x5d\xcc\xa8\x80\x1b\x6a\x34\x10\x0a\x06\x36\x9b\xb3\xd1\xf4\x2a\x65\xb7\xa7\x82\xf8\x82\x07\x12\xcb\x0a\xe1\x9c\x7d\x90\xde\xd0\x72\xf8\xfd\x26\xb0\x93\xae\xe5\x3a\x90\x22\x2a\x70\x91\xf3\xb9\x73\x18\xc0\x46\xdc\x73\x34\x18\xee\x16\x1c\xe8\x89\xaf\xc8\x2d\xc2\x5b\x3d\x5f\xd4\xeb\xe9\xe0\x2d\x12\x48\x38\xe1\xc3\x94\xa7\xd9\xad\x1c\x21\xb7\xbd\x10\x57\xc3\x43\xe8\x87\x14\x66\xad\xa9\x41\x54\x3f\x73\x40\x9d\xd2\x67\x03\x6e\x3e\x77\x86\x34\xc1\x8a\x06\x15\xbf\x5d\xef\x9c\xb2\xdb\x1d\xe2\xd8\x3a\x82\xb5\x17\xe4\x45\xb0\xe7\xcb\x74\x6e\xc0\xc9\x9f\x21\xc0\xf5\x5a\x28\x2c\x1a\x48\x2b\x84\xf3\xc1\x09\xa5\xe9\xc3\x66\xe3\x47\xb1\x1a\x20\x90\x73\x00\x4b\xa9\x65\x5c\xd4\x07\x3f\xa1\x52\xc6\xbc\x52\xc5\xb7\xa3\x37\x89\x91\x18\x36\x9b\xfe\x7a\x8d\x4a\x86\x36\x9b\xf5\x1a\xe1\x3c\x3a\x06\xae\xd7\xf5\x5c\x9b\x0d\x0c\x92\x16\x1e\x7e\xed\xb3\x42\xcc\x27\x36\x30\x46\x26\xcd\xaa\x02\x01\x20\xec\x66\xcb\x7a\x0d\xee\x84\x95\x0b\x0c\xdd\x78\xc9\x52\x98\x28\x38\xaa\x56\xad\x82\x1b\x2e\xee\x28\xec\xe2\x1a\xf9\x7b\x7e\xce\x45\xac\x22\xd2\x20\xee\xe3\xe7\xe2\x8e\x9d\x04\x34\x00\x27\xe3\x71\xad\x89\xc2\x54\x46\x95\x56\xec\xc2\x93\xd1\x5f\x35\x2c\xc2\x77\xfa\x77\x04\xf6\xe4\xf3\xf4\xef\x93\xb3\xb7\xe7\x1f\xde\x9b\x23\x8c\xa7\xe1\x71\x46\x6c\x82\x1e\xfa\xe0\x27\x25\x34\xa5\xa6\xc6\x52\x40\x40\xda\x52\x3f\x85\x72\xa8\x31\x10\x86\x80\xb4\xdd\x16\xd8\x75\x44\xd3\x28\x86\xfa\x8f\xaf\x0d\x71\x25\x6d\x3d\xd6\xce\xcb\x18\x5c\x14\xf8\xf6\x53\x4a\x59\x98\x38\x8f\xb6\x4e\xaa\x62\xb3\xc3\x8b\x0f\x6f\xff\xfe\x76\xf2\xe1\xe3\x38\xe6\xd4\x43\x65\x86\xc9\x87\xd1\xd9\x74\xea\x5b\x2f\x37\xb9\xf5\x54\xec\x13\x29\x57\xcb\x40\x96\x6f\x33\x02\x0d\x2e\xc9\x0a\x73\x11\x57\xea\x01\x61\x16\x28\x2f\x3d\x38\x67\xd3\x07\xc6\xd1\x32\x22\x44\x41\xe4\xe0\x1d\x61\x7c\xb3\x49\xd6\xeb\xc1\x88\x60\x9e\x16\x18\xd1\xa0\x52\x29\x5e\x09\xf3\x11\x41\x16\xc9\x53\x0f\xef\x14\xa1\x87\x7e\xfe\xeb\x38\xb0\x43\x61\xe7\x24\xc7\x84\x45\x8c\x10\x16\x4a\x95\x5b\xf2\xa2\x8a\x14\x7b\x03\x9a\xf3\x6c\x49\xd1\x7b\xa2\xc2\x38\xe0\x82\x7a\xa6\x14\x9e\xdd\x73\x9a\x0a\x1a\xb7\xc9\x2c\xb0\x07\x9b\xa1\x97\x69\x15\x11\x60\x58\x5e\x62\x90\xe9\x1e\xb5\x96\x87\xd8\x21\x3c\x64\x75\x92\xe7\x14\x31\x56\x83\xd7\xfb\x20\xe4\x44\x1e\xb5\x39\x9e\xc1\xb7\x3a\x06\x0c\x73\xed\xe9\x78\xc7\x84\x72\xa3\xc8\xdd\x21\x91\x81\x00\x8d\x6d\x1c\x57\x89\x13\xa1\xc5\x31\x7d\x8f\xbb\x14\x31\xc5\x7a\x0d\x06\xaf\xeb\xb3\xa8\xcd\x46\xc8\x2e\x68\x35\x80\xb6\x59\xad\x9e\x47\x44\x14\x51\xfd\x1f\x22\xa6\x31\x2d\xee\x8a\x12\xcd\x51\xde\x1a\xb3\xf6\x99\x47\xe0\xae\xf5\x39\x2d\xfd\x00\xc7\xec\x20\xbf\xe9\xcb\x51\x51\xa7\x93\x48\x87\xa2\x42\x3b\x2f\x78\x61\xb1\x47\x05\x80\xef\x52\x66\x88\xe3\x85\xcb\xfe\x36\x4d\xa9\xa1\xea\x1a\xa5\x9c\x2c\x12\x8a\x86\x98\x6f\x87\xfa\x81\x2c\x41\xa6\x27\x2f\x42\xdc\xb7\x53\xbc\xb3\x91\xb0\x92\xba\x56\xbd\x5b\x8d\xb2\x6d\x7d\x69\xcb\x66\xfa\x99\x13\x8d\xb7\x0d\x19\x23\x82\x67\xc5\x7c\x45\xdd\x04\x5e\x03\xea\xc6\x8a\x77\x28\x2d\xf9\xe2\x61\xac\xda\x2b\x5a\xad\xf0\x1a\x3b\x7c\x8b\x54\x77\x93\x74\x8d\xd5\xfd\x26\xb6\x62\xb9\x14\xb3\x82\xa2\x7c\x24\x5c\x60\x30\xd0\x8b\xd4\x49\x76\x0a\xf4\x1a\x35\x09\x5a\x07\x78\x41\xd2\xbc\xd6\x8b\x90\x7d\x09\x04\x85\xcd\x76\xde\x2d\xa1\x31\x47\x08\x1a\xf4\x88\x3d\x99\x2c\xb4\x84\x0d\xf7\x6d\x3b\x11\x40\x63\xd2\xda\x66\x94\x2d\x5b\x76\xd7\x74\xcf\x50\x38\x67\x1a\x8e\x98\xe3\x65\x5f\x53\xf1\x23\xc9\x6f\x70\x27\xf9\x85\x80\x2e\xf9\xfa\x59\xbd\x41\xb0\x63\x8c\xcc\xe9\xb6\x15\x81\x82\x3d\x80\x76\xa1\xac\x61\xa5\x59\x05\xf9\x49\x17\x5e\x24\x79\xc9\x2b\x4d\xef\x60\x6c\x3c\x35\x80\xeb\x59\xc6\x14\xcd\x8a\x7b\x01\x5f\xd1\x02\xf3\x19\x80\x35\xee\x7f\x67\xd0\xc6\xe9\x16\x5c\x06\xa6\x17\x34\xaa\x2c\xb2\xbb\x2f\x30\x47\xd0\x51\x8d\x84\x69\x99\x15\x99\xd7\x70\x10\x6d\x2d\x74\x97\xba\x15\xad\x8c\xf7\xbc\x7e\x98\x27\x89\x24\x5c\xb7\x0c\x8b\xa3\xe9\x0c\x11\x49\xc4\xce\xcc\x6b\x15\xad\x1e\xef\x48\xf0\x31\x3c\xfc\x21\xbd\x3d\x4f\xa1\x50\x86\x23\x4f\x21\x4d\x18\x4a\x65\x92\x9a\xc9\x26\x29\xce\xc9\x92\x81\xbd\x82\x93\xb4\x9d\x65\xdf\xf3\xd0\x9d\x0b\x79\x92\xf8\xed\xba\x6c\xac\x64\xa9\x05\x7c\xe9\xda\xbd\xed\xda\xd1\xec\xbd\x86\xc7\x0e\x6b\x1d\x3e\x76\x47\x2e\xce\xd8\xb6\xd4\x6d\x54\x8f\x5d\xd3\x29\xe4\x66\xd9\x67\x31\x0e\xc0\xd3\xf7\x53\x95\x3a\x5d\xdb\x27\xff\x3f\x44\x9d\xeb\x3f\x1f\x13\xa4\x45\xb0\x5b\x85\x56\xbd\x6a\xe8\x4c\xf7\x7d\x34\xdc\x75\x81\x3f\x80\x70\x53\x6d\x06\xae\xdb\x05\x9c\xae\x90\xd4\xc7\x81\x69\xac\x9f\xa7\xef\xee\x29\xc1\x0f\xd0\xf8\x80\xc2\xc5\x3a\xf7\x9e\xc9\x49\x37\xda\x3d\x16\xd1\x9c\x39\x93\xd1\xf8\x19\x8c\x78\xa1\x04\xb3\xcf\x89\xbc\x14\x0e\xec\x50\x3c\x3f\xa8\x49\xf5\x0a\x0c\x76\xd7\xe2\x39\x9e\xeb\x84\xda\x49\x31\x3a\xf7\x9c\x86\x72\x43\x46\x55\xa4\x39\xd3\x07\xec\x7e\x02\x07\x47\x45\x4e\xcf\x05\xbf\xe1\x70\x20\xff\x77\x38\x0c\x94\xb7\x23\x55\x99\x76\xb4\xd1\x1f\xa0\x1b\xd1\xfc\x34\x32\x96\x44\xc2\xf3\xca\xec\x39\xe2\x59\xe5\x57\xe2\xdf\x50\xb2\x34\x22\x56\x6b\x27\x7b\xc0\x57\x24\x06\x6a\x27\x94\xdb\x42\x43\x47\x9e\x81\xd4\xd6\x4c\xab\x3e\x55\xd9\x79\xee\xb2\xc2\x3b\x08\xee\x47\x37\x40\xe8\x58\x53\x29\x6d\x99\x32\x5e\x64\xed\xde\x2f\xf0\x3c\x49\x4c\x53\xd0\x2a\xf1\xd3\x5c\x83\x95\xd7\xee\xb0\x3b\xdb\x75\xc7\x76\x8d\x52\x3c\xf4\x3b\x18\x4c\xb3\x05\x5a\x22\x00\x8b\xf6\x82\x89\x15\x7e\xab\xf7\xaa\x19\x24\xd4\x06\x62\x34\xcd\xaa\x5d\x77\x3e\x53\x54\xd6\x0d\xab\xb6\xf8\x8d\xb3\x78\xbb\xaf\xd5\xd5\x47\x0f\xd0\xce\x44\xac\x0d\x1a\xdc\x00\x2d\xe5\x0e\x61\x4d\xa7\x7d\xdf\x5c\x53\x5c\x9b\xbc\x53\xb4\xe8\x92\xcf\x43\xd8\xfc\x75\x06\xd7\xe6\xaf\xc8\x56\x77\xa1\x3a\x18\xc9\x5e\xa5\x53\x9a\x16\xb8\xc0\x73\xd5\xc0\xa5\xc8\xd0\xba\x04\x13\xe9\x72\xfa\x66\x1f\xcc\x9f\x86\x96\x31\x6b\xf1\x98\x5d\x13\x00\x9e\xe7\x25\x32\x9a\x67\x84\x92\x19\x8f\x54\x2a\x68\xa2\xa1\x84\xb1\xbf\x11\x8c\xea\x29\xdb\x57\xaa\x4c\x30\x5a\xa0\xec\xd6\x2d\x4e\xe8\x0a\xc2\xd5\x82\x22\xb6\x20\xa5\xac\x2c\x1d\xdb\x0a\x25\x99\x78\x27\xdb\xf4\x24\x11\x6a\x48\xfd\xd4\x35\x28\xf0\x2a\xa5\xf3\x70\xeb\x95\x57\xb6\x33\xd0\xd5\x06\x0d\x6c\x36\x49\x54\x43\x63\x1b\xb3\x0e\x34\x34\x2a\x42\x79\xac\xb6\x67\xce\x98\xf2\x85\x63\xe2\xfc\xf3\x59\x87\xff\x6a\xa4\x21\x01\x0b\xf8\x23\x5e\x04\xb9\xd9\xa6\xbb\x86\x4c\xea\xce\xd3\xef\xe9\xb7\x2c\xe7\xae\xd8\x39\x08\x9e\xa3\x98\xee\xc3\x8e\x97\x9c\x7e\x58\x39\x7e\x77\xff\x66\xa3\x76\x36\xa3\x4c\x78\xbd\xd0\xfd\x89\x09\x5c\xbf\x6d\xc6\x9d\x5e\x04\x3b\x43\xa3\xde\xd3\x74\x04\x3b\xbb\xc8\x50\xb3\xaf\xc5\x39\x17\x20\xcc\xb9\x16\x8f\x9a\x38\x54\x3a\x79\x64\xbe\x18\x38\xb8\x9a\x4e\x2f\x0c\x5e\xd5\x4e\xf6\xc7\xc9\xc2\xd3\x82\xa8\xe9\xee\x02\x7d\x2e\x19\x7e\x05\xdd\x6d\x58\xfd\xbe\xf1\x4b\xa4\x0b\x78\xc7\x0d\xec\x6f\xd8\xfb\x87\xae\x5d\x1b\x28\x66\xda\xcd\xc5\xca\xe1\x58\x78\x82\x5d\xd7\x72\x50\x1d\x2f\x59\xe0\xc6\xab\xd0\xc1\x37\xe7\xb4\xb8\x59\x71\xb5\xe0\xc8\x61\x58\x4d\xcc\x36\x32\x80\x95\x6a\x0a\x77\xe5\x1f\xae\x6c\xbc\x13\x10\x67\xff\x30\xdd\xab\xf7\xfc\x1d\xe4\x35\x3a\xf7\x5d\x61\xf9\xba\xf2\x6c\xfd\xb9\x78\x3d\x22\xe4\xb6\x40\x53\x5e\x64\xb7\x05\x46\x8c\x35\xf1\x83\x58\x95\x2d\xdd\x74\x26\xeb\xa7\x0f\xd0\x62\x4b\xb0\xac\xbc\x06\x3b\xa4\xbd\xb1\x64\x4a\x5f\x29\x6e\xac\x05\x68\x95\x3b\x74\x1f\xb9\xe9\xdd\x6d\x0e\xb5\xb6\xc6\xc2\x1b\x7f\x8c\x03\xd0\x72\xab\x11\x8c\x91\x0c\x6c\x4b\xcb\x03\xdd\xc0\x46\x97\x9c\x6c\x05\x19\x51\x82\xff\x42\x6e\x98\xdf\xed\x2a\xa2\x28\xec\xdc\xc3\xd8\x76\x0b\x23\x9a\x08\xef\x78\x03\x63\x87\x9e\xfe\x8e\xdb\x17\x5e\xab\xd6\xb6\x9b\x17\xdf\xe7\xde\xc5\x23\x6e\x5d\x44\xce\x21\x4d\x4b\x1a\xbf\x6d\x11\xb5\xb2\x76\x58\x67\x6f\x16\x2d\x5f\xf7\xc4\x6b\xeb\xfd\x8a\x1d\x6f\x57\x74\xde\x85\x09\xf7\x09\xec\x70\x1f\xc6\xe4\x29\x44\x19\x4b\x26\x2b\x7c\x95\xb2\xdb\x30\xa8\x7d\x57\x23\x08\x62\xa6\xb6\x11\x73\x7d\x42\x71\x73\x78\x10\x06\x01\x8a\x96\xcc\x3c\xc3\xdc\x12\xd5\x5b\x83\x53\x8a\x93\xf4\x1b\x4b\x04\x92\x88\x1f\x00\xbe\xe5\x6c\x6e\x61\xc4\x47\xc0\x47\xa0\x3b\xc9\x32\xb2\xc2\xfc\x3c\xdf\x82\x51\xaf\xf2\xb0\x03\x73\xd3\xf1\x35\xba\xf8\x38\xbd\x3a\x9b\xc0\x48\x5f\x00\xa8\xd3\x89\xe0\xbb\xd0\x53\xff\x59\x28\x5a\x7a\xbe\x6e\x85\x85\x05\x4b\x32\x67\xc9\x88\xa2\x94\xa3\xa6\x9f\x2a\xe2\xb7\x6d\xd0\x29\xa7\x28\x5d\x76\xc2\x8e\x57\xfc\x82\xcc\xcf\xee\x10\xe6\x2c\xd8\x44\xb1\x4d\xc5\x23\x7d\x4c\xb5\x72\xc9\x49\x3a\xee\xf2\xf4\x55\xcf\x48\x97\x56\x00\x28\xb0\x1c\xc8\x5b\xc9\xc9\x61\xfa\x8d\xd5\x37\x75\x7e\xf6\x6f\xe7\xa8\x7f\xfe\x85\xd2\xf9\xd7\xb1\x3c\x70\x16\xd2\x6a\x8b\x71\x86\x0c\x60\x12\x67\x9c\x1b\xa6\x47\xbd\x85\x11\x09\xf8\x71\x80\x76\xd6\xcd\x7d\xb1\x98\xc3\x8e\x5e\x2c\x73\xab\x78\x8d\xeb\xdf\x5e\xad\xf3\xaf\x64\x2d\xf4\x03\xc3\x73\x75\x5c\xb8\xaa\x67\x0a\x1e\xbb\x1b\xf7\xac\xf4\x77\x48\xfe\x73\xf0\xd2\xba\x5b\xdd\x14\x25\x7e\x1d\x5a\x75\x24\xef\x2e\x1c\xfc\x5b\x51\xbd\x29\xca\x80\x3c\xe1\x57\xec\x97\x63\x7a\x2b\x86\x00\xe3\xb4\xc8\x78\xef\x37\xd7\x7b\xde\xa5\x14\xa4\xdf\x18\x78\x05\x28\xfa\x7d\x55\x50\xb4\xd7\x4b\xbf\xb1\x03\x96\xdf\xf6\xf6\x83\xc0\x28\x13\xc0\x18\x7d\x13\xc3\x06\x67\xa3\xe9\xde\x7a\x99\xde\x4f\x10\xa7\x05\x62\xc9\xd1\x70\x13\x1e\x26\xd4\xd7\x18\x37\x2a\xc9\x2a\xff\x9c\xf2\x6c\x71\x41\xe6\x6c\x2f\x3c\x46\x1b\x6e\xf0\x0a\xf4\x02\xf6\xd9\x5b\x4b\xc4\x9c\xe8\xd9\xa5\x36\x0b\x54\x96\xc9\x30\x9b\x4c\x01\xec\xfd\x16\xec\x7a\xec\x40\xac\xef\x06\x7a\x78\x8d\x6e\xff\x28\x5a\x89\x80\x5b\x5d\x14\x82\x45\x6b\x77\x59\xfe\x11\x93\x7f\xbb\x63\x0b\xa9\xe2\x95\xe0\x61\x9d\x27\xf4\x12\x87\xde\xb6\x06\xd7\xd1\xe0\x21\x96\xd2\x0f\x73\x28\x58\x95\x51\xd3\xf6\x92\x5e\xcf\x95\xae\xd7\xb6\x84\xee\x2b\x91\xfa\xd5\x1b\x0e\xbc\x02\x33\xbd\xb1\xf7\x90\xb0\x76\x7d\x90\x11\xcc\xd1\x3d\xdf\xf7\xf8\x23\x67\x91\xea\xa2\x1a\xe5\xc1\x2b\x20\x87\x0c\xf4\xef\x01\x45\x55\x99\x66\x68\xef\xf0\x3f\xfe\x6d\xef\xeb\xd7\xfc\x97\xfd\xdf\x0e\xe7\xfd\x16\xff\x52\x68\x61\x1f\xe4\x28\x8b\xe0\x06\x80\x22\xbe\xa2\x18\xa8\xd3\xfa\xc1\x8c\x92\xe5\x68\x91\x52\xb1\x33\xf7\xc4\x30\x4f\x79\xc5\xbf\x02\xfb\xa0\x26\x54\x35\x52\x04\x44\x0d\xeb\x3f\x18\x4f\x29\x47\xf9\xeb\x87\x04\xf4\x44\xe6\xd3\xeb\xc7\x20\x6d\xfd\x49\x5c\x7d\xfa\xa2\x58\xa1\x5b\x46\xae\xa3\x68\xf4\x56\x4b\xea\x3f\xe2\x80\xc2\xb9\x26\xe0\x28\x0a\x40\xee\x10\xa5\x45\x8e\x58\x12\x5f\x9e\x42\xa4\x5b\xab\x3e\xb4\x03\xbe\x74\x0d\x00\x52\xbd\x71\xba\x44\x89\xb5\xa8\x7e\x2d\xf8\xe4\x0b\xe8\xb1\x45\xaf\x0f\x7a\x07\x59\xaf\x79\x2a\x94\xb5\x0b\xed\x75\xec\x65\x70\xd4\x26\x2a\x54\x76\x8b\xbe\x81\x57\xe0\x32\xe5\x8b\xc1\xac\x24\x84\xee\xc9\x3f\xa9\x6c\xd8\xd8\xdb\xff\xf9\x68\x38\x1c\x0e\xc3\x3a\x51\x92\xf9\x9e\xb5\x24\xf0\x0b\xe8\x25\x3d\xf0\x4b\x63\x5e\x7e\x01\xbd\x43\xa1\x07\x72\x96\x57\xe2\x8d\x9c\xee\x17\xd0\x5b\xb2\x7a\xa1\xf2\xb1\xa5\xf9\x86\x92\x23\x4a\xa3\xda\x2d\x65\xc1\x48\x89\x06\x82\x90\x1e\xa2\xf4\xb8\xd7\x07\x62\x44\x90\x5a\xf1\x0f\x43\x5c\xbb\xab\xbd\x66\x8a\x7d\xb0\x16\xce\x61\x40\x55\x82\xb3\xa7\xb4\xbc\xd9\xb8\x83\x9c\x60\xb4\x2f\x8c\x88\x20\x7d\xe7\x3d\xe3\x33\xbc\x9e\x50\xb2\x6d\x89\x18\x4b\xe7\xa8\x0f\xb2\x9b\x0e\xcb\xc0\x64\x64\x25\x8c\xb4\x60\xe2\x81\x60\xd4\x9e\xf0\x44\xa7\x29\x47\x7b\xfb\xfb\x83\xb9\x5a\x4e\xc0\x0d\x81\x9d\xb7\x6c\xed\x62\x84\xfd\x4c\x9a\x5f\xd1\x6d\x52\xd6\xf1\x9e\x82\x67\xa1\xd8\x4f\xf1\x24\xa2\x31\x6c\x90\xd9\x81\x63\xc3\xf0\x27\x0a\x7d\x9b\xcc\x77\x63\x83\xa6\x4e\x85\xa8\x3b\xed\x68\x2d\xc2\x04\x34\xb2\x14\x61\x12\xe3\xe9\xb2\x4a\x22\x62\xda\xb2\xa3\xa3\x4c\x07\x8f\x97\x13\x78\x8c\xac\x40\x4c\x5e\xc0\xe1\xb7\x5e\x6a\x9c\xd9\x52\xc0\x95\x11\xed\xb7\xdb\xe9\x26\xb6\x77\x7c\x27\x6b\x96\x68\xac\xa0\x3d\x70\x1a\xef\xf4\xc8\xe8\x90\x63\x4b\x5d\x4d\x84\x14\xd3\x05\xa1\x5c\x47\x0d\x93\x55\x47\x8d\x4d\xeb\x44\x22\x81\xb6\xc6\xe2\x46\x2b\xef\xe0\x82\xe0\xb9\x9e\xe1\x80\x65\x0b\x94\xaf\xec\xcf\xa5\x4c\xf5\xb3\xb3\xfb\x8a\x22\x56\xd7\x7a\x24\x71\xfa\x8d\xd3\x55\xa4\x4e\x33\xbd\x92\xb7\x0c\xdb\xa3\xb1\x7d\x9b\x6a\x44\xee\x94\x9e\xe7\x01\x82\xf5\xc1\xa9\x73\xf6\x5a\xe9\xd3\xc7\xaf\xf5\x8d\xe1\xaf\x30\x01\x5f\xe5\x58\x5d\xdd\x06\x9b\xcd\x57\xd8\x07\x5f\xa1\x36\xe6\x2d\x80\xbe\x10\x28\x01\x0c\x19\x87\xaa\xaa\x01\x11\xa9\xc4\x69\x8c\xe8\xb2\x60\x2c\x94\x61\x01\x37\xc5\x32\x60\x43\x52\x03\x76\x75\x34\x6b\x9a\x0e\x55\xaa\x9d\x9c\xe3\x3b\x72\x8b\x42\x1f\x00\xa9\x9f\xa9\xe6\xa0\x27\xf2\xdd\x28\x7c\x8a\x49\xa5\x03\x64\x4e\xa9\xd3\x54\x15\x99\x09\x4b\x34\xd1\x1e\x40\x4f\xa3\x8d\x89\xbb\x36\x4e\xb8\x72\x1d\xfa\x7e\x84\xba\x76\x3e\xd1\x6f\x02\x1f\x8c\x0b\x5c\xa3\x9e\x18\x60\x5a\xb6\xc1\xeb\xd3\xe1\x1d\xf5\xfc\x6b\xd3\xc6\x77\xed\xbc\x56\x77\xaf\xd1\xeb\x45\xcd\xa4\xe8\x4d\x79\xff\x93\x13\x36\x53\xd4\xf9\xa6\x5e\xa7\x77\xe3\xdf\x2b\xf5\xbc\xd0\xd2\xe8\x64\x6a\x47\xef\x67\x60\x58\xdf\x5b\xb2\x56\x80\xe8\x9a\x9c\xaf\x7e\x58\xbd\xf8\xe1\x4f\x0b\xb8\xe7\x0e\x11\xe1\xed\x74\xe6\x10\x2d\x60\x3b\x55\xf5\x68\x55\xca\xad\xf8\x5b\xaf\xdd\x1b\x08\xdd\x05\x30\xfb\x38\xc2\x9d\xc7\x38\x9c\xf0\xea\x48\x50\xc4\x90\xf6\xf6\x7d\x4a\x65\xc9\xd8\xf2\xe1\xf2\x7f\xbd\x91\x5b\x93\x16\x3b\xae\x08\x1f\x56\x58\x7e\xc3\x3e\xa8\xb0\xae\x60\xf8\x60\xf1\x4f\x76\x7d\xff\xaf\x71\x75\x56\x20\x21\x52\x2d\x75\x25\x49\xf3\x9b\xa6\xa5\x4e\xf5\x78\xde\xa0\xc8\xf9\x43\x64\x8c\xda\xce\x88\xd6\x27\xb9\xec\x0d\x25\xcb\x60\x73\xde\x76\x6c\x13\x17\xd7\xe7\x82\x2f\x76\xc0\x95\x1d\x6f\x25\x3e\x3b\x4e\x4e\x56\x7c\x41\x68\xf1\x07\x0a\xb6\x9b\x7a\xa3\x42\xc7\xd5\x46\x41\x35\xc8\xd7\x9f\x03\x68\x9c\x27\xce\xf5\x9e\xa0\x12\xd7\x7f\x5d\x6f\xb7\xa6\xe6\xf7\x84\xfc\xcf\xf4\xd8\x36\x67\xfa\x32\x49\xf4\x97\xb4\xb4\xd1\x39\x45\x25\x12\x7a\xd2\x9c\x54\xc3\x09\x12\xc9\xf9\x16\xa3\x24\x3f\x80\x3b\x22\x98\x53\xd5\x39\xe3\xb6\x22\xc2\xab\xd4\xb9\x21\xba\xae\xbf\x5e\x01\x99\xbc\x2e\x2d\x6c\x6c\xd3\x2f\xa0\x3f\xde\x65\xf5\xe7\x35\xf0\x69\x55\x99\xc0\x1d\xae\x27\xc4\x36\x83\x6b\xff\x0c\x00\x00\xff\xff\x74\x95\x03\xfa\x07\x5d\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

