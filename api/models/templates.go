// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x3c\x6b\x73\xdb\x46\x92\xdf\xfd\x2b\xa6\x50\xb9\x92\x9d\xa2\xa8\x47\xea\x72\x77\xb8\xcb\x55\xc9\x14\x6d\x33\x91\x2c\x2e\x29\x3b\xb5\xb1\x55\x29\x08\x1c\x8a\x88\x40\x00\xc1\x43\x96\xac\xe2\x7f\xdf\xee\x99\x01\x30\x4f\x10\x7a\xad\x76\x63\x89\x40\x4f\x4f\x4f\x77\x4f\xbf\xa6\x87\xf7\xf7\x64\x41\x97\x51\x42\x89\x17\x64\x99\x47\x36\x9b\x57\x84\xc0\xc3\x1f\xe0\x13\xf1\x7f\x21\xc3\x23\xf8\xdd\x3c\x5c\x07\x49\xb4\xa4\x45\xc9\xde\x9c\xd6\x1f\xf8\x6b\xf8\x8f\x10\xef\xe8\xf7\xf9\x39\x5d\x67\x71\x50\xd2\x77\x69\xbe\x0e\xca\xcf\x34\x2f\xa2\x34\xf1\x88\x4f\xbc\xc3\xfd\x83\xfd\xdd\xfd\xff\x81\xff\x7b\x03\x0e\x3e\x4a\x93\x45\x54\xc2\xfb\xc2\xf3\x05\x0a\x36\x53\x29\x70\x10\xef\x32\x88\x83\x24\xa4\xf9\x6e\xd8\x82\xea\x73\x1b\x83\xb2\x3c\x0d\x69\x51\x3c\x68\x4c\x4e\xaf\xa2\xa2\xcc\xef\xb6\x0d\xf2\x26\x49\x49\xf3\x24\x88\x91\x62\xe2\xbd\x4b\x7c\x7f\xfc\x77\x15\xc4\xb8\x82\x2f\xf8\x64\x46\x97\xf0\x67\x0b\x46\x36\x03\xe2\xfd\x93\x02\xb6\x0b\xf8\xb3\xc6\x32\xcd\xa3\x1b\x98\x77\x0b\x92\x1a\xca\x8e\xe3\x2d\xb0\xe6\x7a\x4e\xc3\x2a\x8f\xca\xbb\xf7\x79\x5a\x65\xc8\xe6\x7b\x19\x1d\x7c\xfe\x72\xcf\xb0\xa1\x00\x54\x58\xc4\xe9\x5d\xf0\x75\x09\xa4\xde\x34\xc8\x83\x35\x05\xca\xd9\xd0\x6e\x89\x64\x08\xfb\x00\x69\x58\xe1\xeb\xb5\x8c\xe2\xaa\x80\x69\x25\x35\x80\x87\xe7\x77\x19\xe5\x84\x97\x79\x94\x5c\x79\x83\xf6\xd5\x31\x5d\x06\x55\x5c\xb2\xb7\xea\xf3\x22\xcc\xa3\xac\xac\x75\xce\x13\xaf\x5a\xae\x1d\xd3\x2c\x4e\xef\xd6\x34\x29\x4f\x83\xdb\x68\x5d\xad\x2d\x73\xc2\xc0\x8f\xd5\xfa\x12\xe8\xb1\x4c\xc9\x34\x79\xdf\x35\x29\xbc\x15\x78\x49\x46\xf3\x10\xa6\x09\xae\x28\x49\x97\x44\xb0\x81\x16\xa4\x4c\xc9\x35\xa5\x19\xc9\xab\x24\x81\x65\x91\x6f\xab\x28\xa6\xb0\x0f\x91\x2e\x5c\x66\x17\xc9\x51\xf2\x48\x92\x0f\xba\x49\xe6\x78\x9f\x8f\xe4\x71\x72\x13\xe5\x69\x82\x34\xdb\x89\x75\x8b\xb4\x43\xa2\x56\x81\xca\x1b\xb2\xdf\x3c\x0a\xc2\xb3\x24\xbe\x23\x41\x1c\xa7\xdf\x48\x10\xe2\x72\x71\xb1\xe5\x2a\x2a\x08\xda\xc0\x65\x9e\xae\x49\x94\x14\xd1\x82\xc2\x43\x4a\x3e\x4f\x47\x0e\x9a\x3f\xa6\xf2\x8b\x23\x44\x48\x17\x9f\x83\xb8\xa2\x7c\x57\xb3\xfd\x3b\x60\x70\xe4\xc2\x58\xc4\x6f\xf4\xee\xa5\xf9\x24\x99\x9c\x47\xb0\xe9\x53\x41\xc9\xbc\xba\x4c\x68\x59\x08\x44\xc8\xa7\x22\xa3\x61\xb4\xbc\x43\xb6\xec\x32\x1e\xc5\x69\xb0\x20\xb5\x89\x20\x34\x59\x64\x69\x94\x94\xc5\x8b\xf0\x6c\x46\x63\x1a\x14\xb6\x05\x3d\xb7\xcd\x98\xd1\x2c\x2d\xa2\x32\xcd\x6d\x42\x7a\xda\x64\xf3\xb4\x82\x2d\x47\xc2\x14\x98\x97\xb7\xd3\x18\x24\xa8\xb6\xfb\xb9\xa9\x38\x07\xd5\x3e\x51\x44\x57\x88\xf9\xc8\x15\x4e\x48\x96\x69\xde\x6c\x0a\x0b\x71\x5c\x31\x1c\x64\x9d\x80\x63\xfd\x3f\x88\x0c\xc0\x2b\x8d\x0e\x7d\x9f\x03\xfb\xfe\x64\xf1\xff\x8f\x21\x15\x54\x8d\x14\x7c\xbe\x7e\x54\xb9\xf5\xfe\x65\x88\xcb\xc4\xf6\xe8\x47\x64\x1d\x20\x29\xd4\x69\x7b\xef\xf5\x6c\xfc\x8f\x4f\x93\xd9\xf8\xf8\x0d\x39\x09\xd6\x97\x8b\x80\x8c\xc0\x5b\xa6\xeb\xf3\x34\x8b\x42\xf2\x21\x48\x16\x31\x48\x4c\x6c\x07\x52\x63\x94\xc8\x04\xf3\x7e\x42\x93\xab\x72\xc5\x88\x3c\x90\x5f\x69\x06\xc0\xa4\x0f\x0c\x9e\x9d\x73\x2d\xd3\x00\x06\x39\xf6\x58\x86\x6d\x61\xd0\x74\x34\x9a\x1c\xcf\x9e\x5d\xe5\x71\x66\x44\x6c\x9f\x5e\x89\x8a\x4e\xe1\x0d\xcc\x22\xeb\xb7\x37\x4d\xf3\x72\x9a\xa7\x65\x1a\xa6\x9a\xe7\x59\x95\x65\xc6\xe3\x3a\xd4\x2d\x9a\xd0\x5c\x82\xf3\x3e\x9c\x9f\x4f\xd1\xa4\x4d\x92\xa2\xc4\x9d\x66\x7b\xc7\xf6\x3a\x75\x41\xcc\xbd\x96\x3b\x62\xba\xa2\x7b\xbe\xf9\x93\x27\x54\x66\x2c\xc3\x8e\xf5\x9d\x8f\x9c\xcb\x13\xaf\xdc\x93\xcd\xe7\x27\xfa\x54\x71\xc7\xd2\x10\xfc\x69\x53\x91\x8d\x55\xde\x33\x5a\x30\xab\xac\x08\x5c\xda\x72\xb3\x34\x76\xb8\x51\xb6\x27\x26\x47\xa7\xbe\xcf\x60\xa4\x95\xc0\xe4\x10\x5c\x95\x11\x55\xad\x24\xba\xbd\xa2\xa8\xd6\x14\xe1\xa7\x69\x1c\x85\x77\xc7\x69\x58\x19\x71\x13\xdf\x0a\x8d\xad\xc0\x5c\xea\x70\x17\xd2\xa9\x83\xff\x92\x26\x61\x40\xf3\x12\x8c\x8f\x18\xff\x45\x79\x45\x34\x7c\x0c\x7c\xbc\x5c\xd2\x90\x39\x63\xe6\x7e\x35\x6c\x82\xf4\x28\x09\xa3\xac\x4e\x79\xe6\x34\xbf\x89\x42\xca\x1d\x74\xcc\xec\xd1\x30\x58\x07\xdf\xd3\x24\xf8\x56\x0c\xc3\x74\xad\x64\x29\xf2\x42\x43\x61\xd0\x60\x5c\x51\x16\x7e\xbb\xf0\xd6\xbb\xd7\x3f\x1b\xe5\xb3\xfc\x56\xc1\x0c\x09\x0b\x18\x35\x20\x7e\x0f\xd2\xb6\x9b\xf4\x76\xcf\x53\xdf\x22\x43\x39\xcb\x55\x56\xe8\x8c\xe0\x90\x77\x1f\x21\xf9\x61\xac\x58\xac\x21\x20\x86\x74\x30\x00\x67\x6c\xb0\xc4\xdb\x22\x27\x06\xd3\x47\x56\x0c\x50\x91\x17\xf2\xd7\x90\x88\xc4\x39\xef\x47\xfc\x58\xeb\x27\x7f\x40\x36\x5b\xb8\x27\x7f\x6a\x21\x37\x86\xa5\x95\x34\xbc\x43\xbb\xb9\x07\xf2\xfd\x77\x55\xc2\xa9\xea\xa5\xe4\x23\x88\x6f\x4c\x85\x9e\xff\xf4\xb6\x0a\xaf\x69\xd9\xa6\xc1\xbf\x42\xb8\xc8\x35\x64\x17\x56\x0a\xbf\xb8\x5c\xe1\xef\x36\x2b\x66\x64\xcc\x20\x5f\x47\x4b\x0e\x8b\x37\xd5\x0d\x10\x8b\x80\x5a\xc7\xca\x91\xe6\xdc\x55\xee\x29\x68\x9b\x52\x05\x26\xc6\x7b\x5c\xb1\xf7\x96\xac\x8a\x01\x8f\x87\xdf\xa3\xcc\xe3\x73\x39\x95\x51\x78\x62\x44\x16\x25\x0b\x7a\x3b\xa4\xb7\x22\x35\x51\xc0\x4e\xe9\x1a\x42\xbc\x79\xf4\x9d\x31\xf5\xe0\xf0\xbf\xd5\xd7\xb5\x75\xe1\xa4\xbf\xa7\xe5\x51\xc9\x75\xc3\x30\x41\xa8\x19\x79\x62\x6c\x37\x6f\x56\x25\x65\xc4\x35\x39\x01\xbe\xff\x55\xa8\x13\x9c\xc3\xbb\xb4\x62\x1a\xf6\x13\x64\x85\x6e\x8d\xb0\xe7\xfd\x79\x63\x1d\xc9\xd0\x91\xf2\x87\x90\xfa\xfd\x95\x5e\xf6\x01\xad\xab\x03\x32\x68\xcf\x82\x42\xc1\x0d\x51\x07\xf2\xa6\xa8\xe3\xc2\x6e\x1b\x54\x47\xbe\x9e\x03\x69\x51\xf2\x92\x8c\xea\x33\xce\xaa\x32\xab\xca\xed\x75\xac\x54\xc0\x91\x61\xf7\xe2\x5a\xb8\xbe\x85\x2b\xfb\x88\x36\x7f\x28\x4b\x2d\x86\x41\x2b\x85\xb9\x16\x57\x36\xb1\x0b\x1a\x38\xdd\x37\xbe\xc2\xff\x60\x66\xc8\xe9\x18\x5e\xa9\x74\x68\xab\xb7\xd5\x45\xc3\x3c\x48\xae\x28\xf9\xe1\x9a\xd5\x0c\xc7\x09\x10\x8a\x46\xb6\xa8\x17\xe3\x8d\x93\xe0\x32\xa6\x0b\x80\xac\x32\xb0\x1d\x08\xb9\xd9\xb4\xea\xff\x31\x65\xba\x6f\x2d\x92\xe1\x93\x39\xec\xe4\x90\x6f\x8f\x7d\x79\x33\xab\xf8\xde\xd5\xbb\x98\xdb\x0b\xdc\xe0\xbb\x07\x6c\xdf\x88\xad\xd3\xae\xab\x7b\x85\x75\x0d\x4b\x5b\x1d\x75\xad\xae\x25\x83\x2a\x64\x48\x71\x45\x6d\x5c\x47\xe9\x7a\x1d\x1c\xd3\x38\x5a\x47\x25\x5d\x60\xbc\xe3\x49\x05\xa0\xb6\x8e\x33\xd8\x1f\x1c\xfe\xe7\xcf\xf2\x3b\x25\x57\xe0\x45\x20\xa3\x7a\x93\x57\xc9\x80\x8c\xa6\x9f\x48\x95\x44\x25\x7f\x42\x71\xff\xd0\x01\x01\xa3\x45\x4e\xdf\xe2\x88\xd9\xd1\xa9\xf4\xc6\x6b\xf5\xbb\x2f\x7b\x1a\x15\x64\xeb\xf7\x4e\xd2\x2b\x35\x5d\xb5\xe8\x5b\x03\xc3\x35\x6c\xb0\x65\x06\x69\x23\xbb\xe6\x50\xbd\x55\x7a\x55\xb0\x7f\x39\x50\x9f\x29\x5a\xb3\xd2\xab\xf0\xed\x28\x96\x47\xcb\x76\xd8\xf0\x43\x00\x59\x68\x2d\x0d\xa1\x1b\x9a\xf6\xb4\xc0\x22\xbe\x2a\xa4\x9a\xb3\xa4\x46\x43\x54\x30\x78\x35\x1e\xcd\xcf\x83\xe2\xfa\x18\x89\x8f\x4a\x4b\x06\x99\xc1\x12\x8b\x33\xe6\xf6\x14\xcf\x3e\x68\x22\x38\xe6\x43\x2e\x2c\xb9\x20\x07\xc7\xe4\x4e\x9f\x43\x02\x96\x02\x9c\x83\xe1\x7e\xbf\x28\x40\x4c\x7c\x9e\x5e\xd3\x64\xab\x8b\x73\xba\x37\x11\xa5\x39\x22\x06\x2d\x4e\x80\xf0\x2a\xbc\x66\x23\xd8\xb6\x47\x71\x35\x3c\xf4\xcc\xd8\x41\x2e\x2a\x35\x88\xea\x67\x1a\xa8\x56\xe3\x6c\xc0\xe5\xe7\xda\x90\x26\x2a\x11\xa0\xf8\x59\x03\x41\x8e\xf7\x08\x58\xeb\x50\x55\x5d\x90\x11\xaa\x4e\xd6\xc1\x95\x04\xc7\x3e\xda\x00\xef\xef\x51\x61\xe9\x90\x59\xa1\x64\x31\x3c\xca\xf3\xe0\x6e\xb3\x31\xc3\x55\x01\x60\x49\x2e\x38\x9a\x5a\xa9\x59\x00\x34\x00\x94\x31\x0b\x6e\x99\x8a\x6f\x47\x2f\x13\xc3\x30\x6c\x36\x83\xfb\x7b\x1a\x17\x74\xb3\x81\xdf\xc9\xc2\x39\x06\x16\x58\xcf\x05\xcb\xb3\x92\x66\x1f\x7e\x61\xb2\x02\xe7\xc3\x0d\x9c\x50\x99\x66\x5e\x6a\x80\x10\xb2\x9b\x2d\xc0\x82\x1b\xb4\x72\x96\xa1\x1b\x23\x2b\xb2\x13\xe5\x8d\xb2\xaa\x55\x70\xc9\xc5\x1d\xd8\x5d\x5c\x23\x7f\xc3\xcf\xe9\x88\x79\xe8\x69\xc5\x7d\xf8\x54\xdc\xae\x92\x7f\x03\x70\x34\x9d\xd6\x9a\x88\xa6\xd2\xa9\xb4\xb8\x0b\x8f\x46\xbf\x09\x58\x9a\xdc\x88\xcf\x0e\x58\xd8\xe6\x7f\xce\xc6\xef\x27\x67\x1f\xe5\x11\xd2\x53\xfb\x38\x29\x36\xa1\x77\xa0\xa8\x5c\x68\x5c\x4d\xa5\xa5\x10\x8b\xb4\x99\x7e\xa2\x72\xf0\x31\x9e\x67\x03\x22\xdc\x6e\x23\x76\x11\xd1\x34\x8a\xc1\x7f\x99\xda\xe0\x56\xd2\xd6\x63\xf5\x5e\xc6\xf0\x24\x4a\xae\x3f\x07\x79\x61\x27\xce\xa0\xad\x93\x2a\xd7\xec\xde\xc9\xd9\xfb\x3f\xdf\xcf\xce\x3e\x4d\x5d\x4e\xdd\x56\x4f\x98\x9d\x8d\xc6\xf3\xb9\x69\xbd\xf4\x2c\xd6\x50\xb1\xcf\x69\x0c\x29\xb7\x69\x1d\x55\x46\xd0\xe1\x69\x0a\x19\x10\xc6\x95\x62\x80\x9d\x05\xdc\x4b\xd3\xbf\xc9\xf0\x43\x0a\xee\xdc\xdb\xbb\x09\xf2\x3d\x08\x94\xf6\x16\x29\x24\xa5\xf9\xb0\x80\x5f\x2e\xd1\x22\xe9\x6c\xd8\x66\xe3\xc3\x5f\xa3\x14\xe6\x83\x28\x22\xb7\xaa\x1a\xe7\x20\x1a\x15\x07\x32\x47\x9a\xba\x77\xc3\xc9\xdf\x33\xd3\x5f\xcd\xad\xed\xa1\xf5\x63\x7c\x44\x3b\xe9\x20\xcc\x96\x29\xb7\xe4\x39\xd5\xcb\xf5\x86\x34\xe7\xca\x8c\xa2\x8f\x29\x0f\xee\x88\x0e\x6a\x18\x58\x6f\x7c\x5b\xe6\x01\xd2\xb8\x4d\x92\x96\x9d\xd9\x0c\x3d\x0d\x32\x87\x58\xed\xf2\xc2\x41\xb2\xd3\x14\xba\x6f\x63\x07\xfa\xcd\xec\x68\xb1\x80\x60\xb3\xa8\xc1\xeb\xdd\x61\x73\x2d\x0f\xda\x32\x4f\xe0\x5b\x1d\x19\xda\xb9\xf6\x78\xbc\x58\xcb\x96\x6a\xdc\x1d\x12\x19\x22\xa8\x6b\x3b\xe9\x4a\xec\xa3\x16\xbb\xf4\xdd\xed\x68\x70\x0a\x78\x3c\x7c\x5b\x1f\x45\x6d\x36\x28\x3b\xab\x2d\x61\xe4\x23\x70\xa3\xe7\x0e\x11\x39\x54\xff\x45\xc4\x84\x07\x4e\x51\x4c\xaf\xe8\xa2\x35\x71\xed\x33\x83\xc0\xbe\xe5\x39\x21\x7d\x0b\xc7\xd4\xd0\xbf\x69\xaa\xe1\xb1\xa8\x96\x5e\xdb\x62\x45\x35\x5b\x78\xa5\xb0\x87\x87\x85\x90\xc0\x48\xe2\x50\x6b\x6d\x72\x82\xd4\x08\xad\x2e\x51\xb2\xc9\x1c\x01\xaa\x8d\xf9\x6a\x02\x60\xc9\x1d\x58\xd2\xf2\xca\xc6\x7d\x35\xf1\x83\xdc\x05\xc3\x1b\x5e\xaa\xee\x57\xa2\x6c\x5b\x50\x1a\xf5\xac\x9f\x69\x31\x7a\xdb\x90\x01\xcc\x5e\x46\x57\x55\xae\xa7\xf5\x02\x50\xf4\x55\x7c\xa0\x41\x5c\xae\xee\xa6\xbc\xbb\xa2\xd5\x0a\xa3\xb1\xc3\xb4\x48\x75\x37\x49\xd7\x58\xd1\x6f\xa2\x2a\x96\x4e\x71\x11\xe5\x74\x31\x42\xc7\x68\x0d\xff\x1c\xd5\x93\x5e\xe1\x5f\xa3\x26\x56\xeb\xe0\xe1\xc1\x72\xad\x17\x36\xfb\x62\x09\x15\x9b\xed\xdc\x2f\xcd\x91\x47\x20\x0d\x62\xc4\x6b\x96\x42\xb4\x84\xed\xbf\x51\xed\x84\x05\x8d\x4c\x6b\x9b\x67\xb6\x6c\xe9\xaf\xe9\x86\xa1\xd0\x8e\x34\x34\x31\xbb\xab\xbe\xb2\xe2\x3b\x52\x62\xeb\x4e\x32\xcb\x03\x5d\xf2\x35\x73\x7d\x89\x60\xcd\x18\xc9\xd3\x6d\x2b\x0d\x59\x1b\xf8\xd4\xf2\x59\xc3\x4a\xb9\x36\xf2\x83\x28\xc7\x30\xf2\xc0\xf7\x73\x7a\x87\x53\xe9\xa9\x04\x5c\xcf\x32\xcd\x61\xda\x5b\x84\xcf\x20\xe3\x2a\x97\xc4\xab\x71\xff\x07\x4c\xab\xe0\xd4\xcb\x30\x43\xd9\x0b\x4a\xb5\x17\xd6\x65\x67\x99\xc3\xea\xa8\x46\x68\x5a\x96\x51\x68\xf4\x1b\x38\x5b\xfc\xf4\xa5\x6e\x45\xcb\xe2\x3d\xa3\x1d\xe6\x51\x22\xb1\x57\x33\xed\xe2\x68\x1a\x43\x30\xb5\xe8\xcd\xbc\x56\xd1\xea\xf1\x9a\x04\x1f\xc2\xc3\x17\x69\xed\x79\x0c\x85\x2c\x1c\x79\x0c\x69\x68\x28\xb9\x49\x6a\x26\x9b\x05\xc9\x22\x5d\x17\x60\xab\xca\x34\x68\x67\x79\x63\x78\xe8\xce\x85\x3c\x4a\xfc\x6a\xb5\xd6\x55\xc8\x14\x02\x3e\xd5\xed\xde\x76\xed\x68\xf6\x5e\xc3\x63\x8d\xb5\x1a\x1f\xbb\x23\x17\x6d\x6c\x5b\x00\x97\x6a\xca\xba\xe9\x44\xb9\x29\xf6\x19\xc7\x01\x33\x3f\xce\x79\xea\x74\xa1\x1e\xfc\xbf\x88\x3a\xd7\x7f\x3e\x24\x48\x73\x60\x57\xca\xaf\x62\xd5\x9e\x36\xdd\xf3\x68\xb8\xee\x02\x5f\x80\x70\x59\x6d\x86\xba\xdb\x25\x65\x8e\x85\x92\xa0\xad\x12\x3d\x83\xbe\xeb\x67\x07\x2f\xa0\xf1\x16\x85\x73\x35\xee\x3d\x91\x93\x7a\xb4\x8b\xbd\x6b\xca\x4c\x52\xdf\xa7\x35\xe2\xf5\x18\x98\x7a\x7a\x64\xa4\x70\xa4\x47\x49\x7d\xb7\x26\xd5\x28\x30\xa8\x4d\x8b\x93\xe4\x4a\x24\xd4\x5a\x8a\xd1\xb9\xe7\x04\x94\x1e\x32\xb2\x88\x13\xab\x01\xec\x7c\xdd\x4c\xe0\xbc\x51\xb4\xc8\x27\xc8\x6f\x6f\x7f\xc8\xfe\xb7\xb7\x6f\x29\x7a\x3b\xaa\x32\xed\x68\xa9\x3d\x40\xf4\xa1\x99\x69\xa4\x2b\x89\xf4\x26\x99\xdc\x72\x84\x6d\x53\x46\xae\xf8\x2e\x4f\xd7\x52\xc4\xaa\xec\x64\x03\xf8\x3c\x75\x81\xaa\x09\xe5\xb6\xd0\x50\x93\xa7\x25\xb5\x95\xd3\xaa\xcf\x59\x38\x59\xe8\xac\x30\x8e\x87\x07\xce\x0d\x60\x3b\xec\xe4\x4a\x1b\x07\x45\x19\x85\xed\xde\x07\xc9\xe3\x59\x5d\x6b\x0a\x5a\x25\x7e\x9c\x6b\x50\xf2\xda\x1e\xbb\xb3\x5d\xb7\x6b\xd7\xb4\x35\xc3\x79\xb8\xa2\x80\xc2\x8b\xda\x8b\x1e\x4a\xf8\xcd\xdf\x7b\xbe\x04\xa1\xe6\xb3\x6d\xcf\x2c\xdf\x75\x93\x25\xa7\xb2\xee\x57\x55\xc5\x2f\x9d\xd0\xab\x6d\xad\xba\x3e\x1a\x80\x6a\x26\xa2\x6c\x50\xeb\x06\x68\x29\xd7\x08\x6b\x1a\xed\x07\xf2\x9a\xdc\xda\x64\x9c\xad\x39\x97\x3c\xb1\x61\x33\xd7\x69\x5d\x9b\xb9\x22\x55\xdd\x51\x75\x12\xca\x5a\x95\x8e\x73\x48\xfd\x40\xc9\x78\xff\x16\x27\x43\xe8\x12\x7c\x40\x97\x33\x90\xbb\x63\x7e\xde\x57\x8c\x59\x8b\x47\xee\xa5\x00\xe2\x17\x31\x95\x5a\x6a\x50\xc9\xa4\x47\x3c\x15\x94\xd1\xe4\x69\x51\xfc\x91\x26\xb4\x9e\xb2\x7d\xc5\xcb\x04\xa3\x15\x0d\xaf\xf5\xe2\x84\xa8\x20\x9c\xaf\xc0\x84\xae\xd2\x98\x55\x96\x0e\x55\x85\x62\x4c\xbc\x61\x5d\x7a\x8c\x08\x3e\xa4\x7e\xaa\x1b\x14\x48\x0f\xf3\x2b\x7b\xe7\x95\x51\xb6\x93\xd0\xd5\x06\x0d\xd0\xf9\x4e\x0d\x75\x6d\xcc\x3a\xd0\x10\xa8\xe0\x93\xab\xb6\x27\xcf\x18\x94\x2b\xcd\xc4\x99\xa7\xb6\x1a\xff\xf9\x48\x49\x02\x0a\xf0\xa7\x64\x65\xe5\x66\x9b\xee\x4a\x32\xa9\x1b\x4f\x9f\xd3\x6f\x29\xce\x9d\xb3\x73\x68\x3d\x5d\x91\xdd\x87\x1a\x2f\x69\xed\xb0\x6c\x7c\x7f\xff\xa6\xa2\xd6\x36\x23\x4b\x78\x8d\xd0\xfd\x91\x09\xdc\xa0\xed\xc5\xc5\x8e\x5b\x4b\x11\xd6\xe9\x3d\x65\x47\xd0\xdb\x45\xda\x7a\x7d\x15\xce\xe9\x00\x76\xce\xb5\x78\xf8\xc4\xb6\xd2\xc9\x03\xf3\x45\xcb\x71\x16\xb0\x44\xe2\x55\xed\x64\x5f\x4e\x16\x86\x16\x38\x4d\x77\x17\xe8\x53\xc9\x30\x2b\xe8\x7a\xbf\xea\xf3\xc6\x2f\x8e\x26\xe0\x9e\x1b\xd8\xdc\xb0\xb7\x77\x5d\xbb\xd6\x52\xcc\x54\x7b\x8b\xb9\xc3\x51\xf0\x58\x9b\xae\xd9\xa0\x3a\x5e\x52\xc0\xa5\x57\xb6\xe3\xf0\xb2\xcc\xa3\xcb\xaa\xe4\x0b\x76\x1c\x86\xd5\xc4\x6c\x23\x83\x01\x37\xa9\x26\xba\x2b\xf3\x70\x65\x63\x9c\x80\x68\xfb\x87\x13\xf2\x1c\x3b\xc8\xe8\x73\x1e\xe8\xc2\x32\x75\xe5\xc9\xfa\x73\xf2\x76\x94\xa6\xd7\x11\x9d\x43\xac\x7a\x0d\x19\x65\x51\x34\xf1\x03\xae\x4a\x95\x6e\xb0\x64\xf5\x53\xec\xea\x51\x70\x58\xca\xca\xb0\xc2\xed\x69\xaf\x2b\x99\x12\x57\x7b\x1b\x6b\x41\x5a\xe5\xb6\xdd\x0b\x6e\x3a\x7a\x9b\x43\xad\xad\xb1\xf0\xc6\x1c\xa3\x01\xb4\xdc\x6a\x04\x23\x25\x03\xdb\xd2\x72\x4b\x8f\xb0\xd4\x3b\xc7\x1a\x44\x20\x54\x4a\x7e\x4d\x2f\x0b\xb3\x07\x16\xa3\xa8\x44\xbb\x86\xb1\xed\x12\x86\x33\x11\xee\x79\x01\xa3\x47\x4b\x7f\xc7\xe5\x0b\xa3\x81\x6b\xdb\xc5\x8b\xe7\xb9\x76\xf1\x80\x4b\x17\x8e\x73\x48\xd9\x92\xba\x2f\x5b\x38\xad\xac\x1a\xd6\xf5\xbf\x66\xb1\xfd\x92\x45\xcf\x2b\x16\x9d\x17\x62\xec\xdd\x02\x3d\x2e\xc5\xc8\x9c\xf5\x68\x58\xf8\xb3\x2a\xc1\xf3\x13\x3b\xa8\x7a\x61\xc3\x0a\x22\x27\xb8\x0e\xa3\x7d\x94\x27\xcd\x11\x82\x1d\x84\x70\x5a\x42\xf9\x24\x73\x4b\x6c\xaf\x0c\x0e\xf2\xc4\x07\x6d\xf2\x11\x89\xc3\x1b\xe0\x8f\xeb\x2a\x86\x7b\x84\xf7\x00\x74\x47\x61\x88\xa7\x94\x10\x0e\x75\x63\x14\xab\xdc\xeb\xc0\xdc\x74\x83\x8d\x4e\x3e\xcd\xcf\xc7\x33\xcf\xd1\x1d\x80\x3f\xfa\xd5\x8e\xf6\xc7\xf6\xd4\x7c\x66\x8b\x99\x9e\x41\xb7\x62\x6c\x60\x1e\xe5\x14\x74\xb8\xe9\xaa\xda\xa6\x63\xfd\xa5\xde\x48\x9c\x4d\xe3\xe0\xe4\xc3\xc4\xed\x14\xf5\x83\xc5\xec\xf9\x3f\x3a\x5b\x39\xfe\x4d\xec\x77\x70\x4d\x15\xca\xbc\x84\xbf\xd6\xae\xe8\x89\xc1\x4e\xab\x12\x00\xc7\x37\x14\xef\xc2\xdb\xd6\xf4\x7c\x22\xed\xd9\x85\xc7\x26\x78\x10\x83\xf5\xa8\xdd\xe9\x3c\xa4\xc0\xc0\x0c\x0b\x84\xef\x6e\x6e\x8f\xb9\xfc\xb7\xf3\x9a\x99\x5e\xd4\x6b\x22\x81\xed\xc5\x3b\xaf\x46\x26\x75\x15\x28\xed\xa5\xbb\x18\x15\x49\xad\xa9\xbb\x18\xa4\xc8\x5e\xce\xb8\xe1\xb5\x12\x0f\x24\x98\x8e\xfb\x5b\x35\xa9\xd6\x63\xfc\xce\x6b\x5b\x52\x85\xe3\x60\x5f\x29\x4a\x19\xf7\xea\xbc\x3f\xa2\xec\x5d\x14\x5b\xb4\xc6\xfb\x9a\x98\xb5\x9d\x9d\xaa\xa0\x04\x7c\x70\x14\x96\x3b\xff\xab\x3b\xe1\x9b\x20\x27\x60\x1e\xc8\x2f\x24\xa7\x7f\x57\x51\x4e\x5f\xef\xc0\xc7\xdd\x62\x71\xbd\xf3\xc6\x0a\x0c\x9e\x03\x80\x13\xfa\x0d\x87\x0d\xc7\xa3\xf9\x6b\x3b\x9c\x30\xde\x00\xbb\x63\xb1\xd1\x76\x42\x4a\xa5\x3f\x01\xe7\xb9\xd7\x4b\x50\xe6\xe1\x8d\x79\x9b\xa2\x01\xb6\x37\x5d\xe2\x2b\xa4\xa9\xd6\x81\x1d\x9f\xec\x78\xd6\xe6\x98\xae\xd6\x09\x90\xf0\xce\xc0\xda\x71\x69\xaf\x77\xf0\x69\x77\xfc\x9d\x1d\x7d\xe5\x46\x43\x10\xbd\xcd\x30\xa9\xaa\x55\x0f\xd8\xb0\x14\x6a\xfd\x9a\xa2\x81\x19\x10\x08\xcf\x4a\x7a\x5b\xbe\x31\xf8\xc3\x66\x41\x56\xf2\x93\x7f\x0b\x07\xbd\xfa\x0f\x48\xdf\xf2\x92\x2e\xde\xde\xc1\xf2\x71\x17\xc0\x6a\x1c\x90\xaa\x58\x7c\x5d\x4c\x5f\x18\x51\x43\xd1\xe3\x70\xe1\x44\x23\x34\xc2\xaf\xff\x70\x03\xa2\xdb\x80\x6d\xe0\x04\x48\x6f\x68\x9e\x47\x0b\x5a\xf8\xee\xe5\x71\x44\xa2\x17\xe8\xac\x1d\xf0\xa5\x6b\x00\xfe\xdc\x93\x04\xa4\xee\x2b\x8b\x42\x8e\xb3\x46\x7f\xff\x0b\xd9\x29\x56\x3b\x03\xb2\xb3\x1b\xc2\xbf\x1c\x48\xbc\x43\x4d\xe8\x42\x7e\xe1\x7a\x69\x1d\xb5\x31\x76\x08\xfe\x03\xbb\x6f\x98\xf3\x40\xf4\x35\x17\x71\xa3\x0c\xc3\x45\x9a\x50\x73\x2f\x02\x1e\x39\xec\x57\x2c\xbf\xe5\x84\x47\x3b\x77\x15\x9b\x6d\x4b\xae\x86\x9b\x69\xbe\x02\x9d\x15\xfb\x65\x56\x75\xe4\x6d\xdc\x47\x42\x94\x51\xf5\x49\xdd\x24\x43\x0e\xc9\x74\x72\x55\xdb\xed\x22\x5c\xd1\x45\xa5\xde\xc0\x9f\x8b\x67\xe3\xdb\x0c\xcf\x21\x45\x7c\xc5\x88\x13\x6f\xb4\x93\x6a\x5e\x21\x37\xca\x28\xcc\x74\x3b\xed\x7b\xeb\xaf\x1c\xb7\x97\x26\x0b\x0b\xc1\xa2\x18\xaf\xd5\xf3\x33\x51\xd1\xfe\x5a\xdf\x4d\xfb\x0a\x1f\xbf\xb2\xb1\xa2\x62\x02\x43\xbf\xc2\x4c\x5f\x3d\xa1\x64\x2d\x80\xb8\x7a\xc2\x00\xa4\x98\xd7\x96\xa9\x5b\x44\xc4\xbd\xef\x94\xe6\xeb\xa8\x28\x6c\x6e\x9a\xe8\x7e\x5a\x82\xb5\x49\x8d\xa8\x19\x77\xd8\x34\xb2\xf0\x4c\xd6\x9f\x40\x42\x79\x4d\x6d\x77\xca\x15\x9f\x4d\x1e\xc9\x77\x29\x99\xc6\x49\xd9\xc6\x2c\xb4\xf4\x59\x56\x15\x16\x76\x31\x34\xce\xbe\x12\x43\xa3\xa5\x89\xbb\x36\x8e\xbd\x1a\x62\xfd\xfa\x39\x7e\xc3\x91\xc7\xdb\x1f\x82\x62\x3c\x92\xbf\x05\x85\x11\x75\x96\x2b\x41\x6a\xd7\x77\xc9\x69\xb1\x3b\xf1\xaa\x62\x97\x06\x45\xc9\x2e\xc2\xca\x27\x68\x0f\xc4\xf1\x8d\x3e\x13\x8e\xc3\x27\xe0\xa0\xd5\x2e\x76\xc7\xe6\x41\xfc\x24\x52\x00\xcd\x93\x97\x13\x64\xbb\x09\x68\xc6\xea\xc9\xbc\x05\x44\x10\xfe\x3f\x37\x22\xc6\x65\x81\x07\x6d\x81\xf3\x3a\xac\xed\xee\x7c\xab\x90\xf8\xc6\xf2\xad\x58\x96\x2b\xa4\x33\x09\xac\x4e\x00\xe4\xc3\x7c\x45\xbd\x05\x80\xf5\x6e\xa9\xdd\x09\x3c\xfd\x4e\xa9\xf4\xed\x5e\x46\xc7\xaf\xd1\xef\xf2\xaa\xde\xd7\xdb\xf9\xa6\x5d\x86\xae\xb9\xc6\x8f\x79\xfa\x32\xc2\xb8\x2f\x6d\xe4\xce\xaf\x84\x85\xe9\x14\xcb\x43\x26\xd2\xd9\x67\xc1\x3b\x30\x98\x26\xac\x9e\x93\x2b\xda\x97\x2a\x28\x4d\xcd\xf6\x9b\xdb\x7a\x01\xd7\x21\xfe\x5e\xc5\x5b\x67\x0d\x50\x2b\x4f\x3a\xf3\x7e\xbd\x74\xaa\xbc\xd6\x5b\xb9\xbb\x4b\x0c\x6a\x5d\x57\x9f\x47\xaa\xf2\x1a\x19\x38\xd6\xf6\x34\x9f\xf5\x98\x9c\x5c\x6e\xed\xb1\x56\x50\x6b\xef\xd5\xfa\x71\x57\xdd\xd7\x5e\xf5\x55\x82\x25\xb5\xe2\xab\xf4\xb2\x9b\x60\xee\xaf\x3e\x7a\xfe\x6f\x35\xea\xac\xf1\x78\x94\xf7\x26\xe1\xd7\x19\x5e\x36\xbd\x49\xbc\x59\xee\x92\x3a\x4a\xb8\x8e\x31\xdc\x20\xd0\xbc\x3e\x12\x2b\xb0\xe7\xcb\xda\xe5\xb4\x1d\xdb\x4c\xc7\xf5\x7b\x54\xae\x7a\xe0\x0a\x0f\xb7\x12\x0f\x20\x47\xe0\x24\xd2\x3c\xfa\x4e\xad\x7d\x7b\xc6\x28\xdb\xb9\x9f\x54\xb2\xb2\xf2\xd5\x52\x70\x32\x0e\xf5\x5e\xb9\xde\x9a\xa9\xc9\xc5\x76\x7b\x2c\x7f\x5d\x8b\xf9\x2d\x28\xaa\xcd\x99\xff\xe4\xfb\xe2\x1b\x89\x84\xd1\x39\xa6\x31\x45\x3d\x69\x8e\xfc\x60\x85\x98\x34\x6e\x31\x4a\xec\x8b\x44\xf1\xae\x49\xce\x5b\x10\xf4\x9e\x2e\xc8\x2d\xb4\xab\x76\xf7\xf5\x97\x03\x78\xc5\x1d\x48\x78\x8d\x36\xb6\x39\x78\x15\x5f\x82\x44\xd4\x08\x40\xc0\xe3\xd7\xd6\x0d\x9c\xae\x42\x76\x5e\x36\xb6\x49\x5c\xfb\x57\x00\x00\x00\xff\xff\xe8\x5c\x15\xbe\x0d\x5a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

