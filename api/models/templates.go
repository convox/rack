// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x3c\x6b\x6f\xdb\x3a\x96\xdf\xfb\x2b\x08\xe2\x2e\xd2\x0e\x1c\xe7\x71\xb1\xb3\x3b\x9a\xed\x02\xa9\x93\xb6\x99\x49\x5a\xaf\x9d\xf6\x62\xa7\x0d\x06\x8c\x44\xdb\x9a\xd8\xa4\x2e\x49\xa5\xc9\x35\xfc\xdf\x07\x7c\x48\xe2\x53\x76\x1e\x9d\xc1\x6d\x6b\xe9\xf0\xf0\xf0\xf0\xbc\x79\xa8\xf5\x1a\x14\x78\x56\x12\x0c\x20\xaa\x2a\x08\x36\x9b\x57\x00\xac\xd7\xe0\x17\x54\x55\x20\x7b\x0b\x86\x27\x55\xd5\x3d\x5c\x21\x52\xce\x30\x17\xea\xcd\x65\xf3\x43\xbf\x7e\x05\x00\x00\xf0\xe4\xb7\xe9\x15\x5e\x55\x4b\x24\xf0\x7b\xca\x56\x48\x7c\xc5\x8c\x97\x94\x40\x90\x01\x78\x7c\x78\x74\xb8\x7f\xf8\x97\xfd\xc3\xbf\xc0\x81\x06\x1f\x51\x52\x94\xa2\xa4\x84\xc3\xcc\xa0\x50\x33\x09\x83\x03\xc0\x1b\xb4\x44\x24\xc7\x6c\x3f\xef\x40\xfd\xb9\x83\x41\x15\xa3\x39\xe6\xfc\x51\x63\x18\x9e\x97\x5c\xb0\x87\x6d\x83\xe0\x39\x11\x98\x11\xb4\x94\x14\x03\xf8\x9e\x64\xd9\xd9\xef\x35\x5a\xca\x15\x7c\x93\x4f\x26\x78\x06\x33\x0b\x0c\x6c\x06\x00\xfe\x3f\xe6\x10\x5c\x83\xcd\xa0\xc1\x32\x66\xe5\x1d\x12\x78\x0b\x92\x06\x2a\x8e\xe3\xdd\x12\x91\xdb\x29\xce\x6b\x56\x8a\x87\x0f\x8c\xd6\x95\x64\xf3\xda\x46\x07\x32\xf0\x6d\xad\xb0\xc9\x0d\x70\x61\x25\x4e\x78\xad\xd7\x65\x90\xc2\x31\x62\x68\x85\x05\x66\x6a\x68\xff\x8e\x54\x12\xf6\x11\xbb\x11\x85\x6f\xd6\x32\x5a\xd6\x5c\x60\x66\x89\x01\x00\xf0\xea\xa1\xc2\x9a\x70\xc1\x4a\x32\x87\x83\xee\xd5\x29\x9e\xa1\x7a\x29\xd4\x5b\xf7\x39\xcf\x59\x59\x89\x46\xe6\xa0\x79\xd5\x71\xed\x14\x57\x4b\xfa\xb0\xc2\x44\x5c\xa2\xfb\x72\x55\xaf\x22\x73\x66\x00\x7e\xaa\x57\x37\x98\xc5\xa6\x54\x92\x7c\x98\x9a\x34\x03\xd0\xe0\x05\x15\x66\x39\x26\x02\xcd\x31\xa0\x33\x60\xd8\x80\x39\x10\x14\xdc\x62\x5c\x01\x56\x13\x52\x92\x39\xf8\xb1\x28\x97\x18\x14\x8a\x2e\xb9\xcc\x3e\x92\x4b\xf2\x44\x92\x8f\xfa\x49\xd6\x78\x5f\x8e\xe4\x33\x72\x57\x32\x4a\x24\xcd\x71\x62\xd3\x5b\xda\xb3\xa3\xd1\x0d\xb5\x15\x72\xb7\x79\x1c\x84\x9f\xc9\xf2\x01\xa0\xe5\x92\xfe\x00\x28\x97\xcb\x95\x8b\x15\x8b\x92\x03\x69\x03\x67\x8c\xae\x40\x49\x78\x59\x60\x20\x16\x18\x7c\x1d\x8f\x12\x34\x7f\xa2\xf6\x8b\x13\x89\x10\x17\x5f\xd1\xb2\xc6\x5a\xab\x95\xfe\x0e\x14\x1c\xb8\x0e\x16\xf1\x77\xfc\xf0\xb3\xf9\x64\x99\x9c\x27\xb0\xe9\x0b\xc7\x60\x5a\xdf\x10\x2c\xb8\x41\x24\xf9\xc4\x2b\x9c\x97\xb3\x07\xc9\x96\x7d\xc5\xa3\x25\x45\x05\x68\x4c\x04\xc0\xa4\xa8\x68\x49\x04\xff\x29\x3c\x9b\xe0\x25\x46\x3c\xb6\xa0\x97\xb6\x19\x13\x5c\x51\x5e\x0a\xca\x62\x9b\xf4\xbc\xc9\xa6\xb4\x66\x39\x06\x39\x2d\x30\x60\xdd\x34\x01\x09\xae\xed\x7e\x69\x2a\xae\x16\x18\x5c\x38\x5b\xc7\xcd\x7c\x60\x2e\x27\x04\x33\xca\x5a\xa5\x88\x10\xa7\x05\x23\x41\xd6\x45\xc9\xc5\xff\x9c\xfc\x36\xcd\xb2\xb3\xd1\x71\x96\x69\xe0\x2c\x3b\x2f\xfe\xf7\x29\xa4\x7e\x1d\x8f\x00\xd7\xf3\xed\x46\x55\x5a\xee\x7f\x0e\x71\x95\x51\x8f\xdd\x88\x6c\x02\x24\x87\x3a\x4f\xf7\x5e\x4f\xce\xfe\xef\xcb\xf9\xe4\xec\xf4\x0d\xb8\x40\xab\x9b\x02\x81\x51\xcd\x05\x5d\x5d\xd1\xaa\xcc\xc1\x47\x44\x8a\x25\x66\xc0\xa8\x03\x68\x30\x5a\x64\x5e\x96\xe4\x02\x93\xb9\x58\x28\x22\x8f\xec\x57\x9e\x01\x08\xe9\x1b\x8f\x12\x9c\xeb\x98\xf6\x75\x3c\x92\x1c\x7b\x2a\xc3\xb6\x30\x68\x3c\x1a\x9d\x9f\x4e\x5e\x5c\xe4\xe5\xcc\x12\x71\x7c\x7a\x27\x2a\xba\x44\x55\x55\x92\xb9\x2d\xdf\x70\x4c\x99\x18\x33\x2a\x68\x4e\x3d\xcf\xb3\x10\xa2\xd2\x71\x9d\x94\x2d\x4c\x30\xb3\xe0\xe0\xc7\xab\xab\xb1\x34\x69\xe7\x84\x0b\xa9\x69\xb1\x77\x4a\xd7\x71\x0a\x62\x0a\x3b\xee\x98\xe9\x78\xff\x7c\xd3\x67\x4f\xe8\xcc\x28\xf2\x9e\xf5\x5d\x8d\x92\xcb\x33\xaf\xd2\x93\x4d\xa7\x17\xfe\x54\xcb\x9e\xa5\x49\xf0\xe7\x4d\x05\x36\xd1\xfd\x9e\x60\xae\xac\xb2\xb3\xe1\x96\xca\x4d\xe8\x32\xe1\x46\x95\x4e\x9c\x9f\x5c\x66\x99\x82\xb1\x56\x32\x66\xb4\xc2\x4c\x94\xd8\xb5\x92\xd2\xed\x71\x5e\xaf\xb0\x84\x1f\xd3\x65\x99\x3f\x9c\xd2\xbc\x0e\xe2\x26\xcf\x56\xc8\x5c\xea\x78\xff\xe8\x70\xff\xe8\xbf\xac\x49\x14\xd0\x54\x20\x81\xcd\xf8\x6f\xce\x2b\xe0\xe1\x53\xe0\x67\xb3\x19\xce\x95\x33\x56\xee\xd7\xc3\x66\x48\x2f\x49\x5e\x56\x4d\xca\x33\xc5\xec\xae\xcc\xb1\x76\xd0\x4b\x65\x8f\x86\x68\x85\xfe\xa0\x04\xfd\xe0\xc3\x9c\xae\x9c\x2c\xc5\x5e\x68\x6e\x0c\xda\x37\x00\xb9\xe0\x59\xb7\xf0\xce\xbb\x37\xff\xdb\x38\xbf\xed\xb7\x0e\x66\x38\x46\x62\x21\x89\x3f\x80\xee\x63\xc9\x49\xcd\x6b\x97\x07\x3e\x07\x34\xe4\xc3\x27\xb4\xd2\xfb\x57\xac\x4a\x22\xf3\x40\x24\x28\x0b\x78\x01\xb7\x6c\x10\xd8\x75\x93\x40\xb0\x51\x92\xb1\xc1\x56\x58\x2c\x83\x7f\x92\x3f\x1b\xc1\xd4\x0f\xc0\x66\x0b\xdb\xec\x5f\x1d\xe4\x26\x30\xb1\x96\x68\xf7\x88\xb5\x76\x3d\x59\xf6\xbe\x26\x9a\xaa\x9d\xa4\x7b\x44\x0b\x1c\x4a\xf2\xf4\xd7\x77\x75\x7e\x8b\x45\x97\xff\xfe\x8d\x96\x46\x34\xf6\xe1\x40\xfe\x95\x53\x72\x47\xef\xe1\xc0\x4a\x87\x15\x19\x13\x3c\x57\x26\x7c\x03\xae\x43\x39\x83\xd3\x5f\x4d\x24\xed\x63\xd5\x48\x99\xf6\x91\x07\x0e\xda\xb6\x46\x21\x33\xe2\x03\x2d\xd1\x07\x33\x55\xbe\x28\x29\x19\xfe\x51\x56\x50\xcf\x95\x94\x42\xe3\x82\x25\xb2\x92\x14\xf8\x7e\x88\xef\x4d\x4e\xe2\x80\x5d\xe2\x15\x65\x0f\xd3\xf2\x0f\xc5\xd4\xa3\xe3\xff\x76\x5f\x37\x66\x45\x93\xfe\x01\x8b\x13\xa1\x65\x23\xb0\x3d\x52\x32\x18\x09\xf4\x0c\x4e\x6a\x22\x4a\x2d\xc9\x84\x16\xf8\x5f\xdc\x9d\xe0\xaa\x5c\x61\x5a\x2b\x09\xfb\xf5\xf0\x10\xa6\x25\x22\x9e\xf0\xb3\xd6\x2c\x82\x61\x22\xd7\xcf\x19\x25\xff\xa2\x37\xbb\x80\x36\x65\x01\x1b\x74\xc7\x4a\x02\xd7\x16\xa8\x07\x79\x5b\xcd\x49\x61\x8f\x0d\x6a\x42\x5e\x98\x40\xca\x85\xae\xc5\xb8\xce\xe2\x73\x2d\xaa\x5a\x6c\x2f\x60\x51\x03\x07\x86\xfd\x8b\xeb\xe0\x76\xad\x58\xc5\x47\x74\x89\x83\x10\x5e\xf0\x22\xad\x94\x4c\xb2\xb4\xb0\x19\x2d\x68\xe1\x7c\xa7\xf8\x4a\xfe\xb7\x5e\xcb\x64\x4e\xe1\xb5\x6a\x86\xb1\x42\x5b\x53\x2d\x64\x88\xcc\x31\xf8\xe5\x56\x15\x0b\xcf\x88\x60\xca\xc8\xf2\x66\x31\xf0\x8c\xa0\x9b\x25\x2e\xd6\x6b\x50\x57\x15\x66\x12\x72\xb3\xe9\xc4\xff\x13\x55\xb2\x1f\xad\x8e\xc9\x27\x53\xbc\xd4\xc6\xf2\x1b\x38\xb4\x95\xd9\xc5\xf7\xbe\xd1\x62\x6d\x2f\xa4\x82\xef\x1f\x29\xbd\x31\xaa\xd3\xad\xab\x7f\x85\x4d\xf1\xca\x5b\x1d\x4e\xad\xae\x23\x03\x3b\x64\x58\x01\x45\x63\x5c\x47\x74\xb5\x42\xa7\x78\x59\xae\x4a\x81\x0b\x19\xe8\x40\xab\xf2\xd3\x15\x70\x06\x87\x83\xe3\xff\xfc\xb3\xfd\xce\x49\x12\x74\xf5\x27\x28\xdb\xb0\x9a\x0c\xc0\x68\xfc\x05\xd4\xa4\x14\xfa\x09\x96\xfa\x83\x07\x00\x91\x02\x5c\xbe\x93\x23\x26\x27\x97\xd6\x1b\xd8\xc9\xf7\xae\xec\x69\x45\x50\xad\x1f\x5e\xd0\xb9\x9b\xa7\x46\xe4\xad\x85\xd1\x12\x36\xd8\x32\x83\xa5\xc8\xa9\x39\x5c\x6f\x45\xe7\x5c\xfd\xa9\x81\x76\x99\xa2\x33\x2b\x3b\x55\xbc\x13\x55\xf2\x72\xd6\x0d\x1b\x7e\x44\x7c\xdc\xee\x86\x91\x0d\x4f\x7a\x3a\x60\x13\x58\x71\xab\xd8\x6c\x89\xd1\x50\x0a\x18\xd8\x6c\xce\x46\xd3\x2b\xc4\x6f\x4f\x25\xf1\xa5\x88\xa4\x8e\x15\x26\x05\xff\xac\xdc\x9e\xe3\xd9\x07\x6d\xe8\xa6\x7c\xc8\x75\x24\x09\xd4\xe0\x32\xab\xf3\xe7\xb0\x80\xad\x00\xe7\x68\x78\xb8\x5b\x14\x60\x26\xbe\xa2\xb7\x98\x6c\x75\x71\x49\xf7\x66\xa2\xb4\x44\xc4\xe0\xc5\x09\x53\x81\xf2\x5b\x35\x42\xa9\xbd\xdc\xae\x96\x87\x30\x8c\x1d\xec\x6a\x52\x8b\xa8\x79\xe6\x81\x7a\xc5\xcd\x16\xdc\x7e\xee\x0d\x69\xa3\x12\x03\x2a\x7f\x7b\x20\x92\xe3\xda\xc4\xf5\x47\xac\x4d\xac\xea\xae\x28\x88\x55\xcf\x57\x68\x6e\xc1\xa9\x9f\x31\xc0\xf5\x5a\x4a\x2c\x1e\x2a\x33\x44\x8a\xe1\x09\x63\xe8\x61\xb3\x09\xe3\x55\x03\x10\x49\x2b\x80\x23\xd5\x2a\x02\x1a\x80\x5f\xf0\x52\x45\xb7\x4a\xc6\xb7\xa3\xb7\x89\x51\x18\x36\x9b\xc1\x7a\x8d\x97\x1c\x6f\x36\xeb\x35\x26\x45\x72\x0c\x5c\xaf\x9b\xb9\x36\x1b\x18\x25\x2d\x3e\xfc\x3a\x64\x85\x9c\x4f\x6a\x30\xc1\x36\xcd\xba\xc8\x00\x20\xec\x67\xcb\x7a\x0d\xee\xa4\x99\x8b\x0c\xdd\x04\xf9\x50\x9c\x28\x38\xaa\xea\x4e\xc2\x2d\x1f\x77\x14\xf7\x71\xed\xfe\x07\x8e\xce\x47\xac\x63\xcf\x28\xee\xe3\xe7\xe2\x4e\x15\xfb\x5b\x80\x93\xf1\xb8\x91\x44\x69\x2b\x93\x42\x2b\xd5\xf0\x64\xf4\x77\x03\x8b\xc9\x9d\xf9\x9d\x80\x3d\xf9\x6d\xfa\xcf\xc9\xd9\x87\xf3\xcf\x9f\xec\x11\xd6\xd3\xf8\x38\x2b\x38\xc1\x0f\x03\xf0\x8b\xde\x34\x2d\xa6\xd6\x52\x40\x64\xb7\x95\x7c\x4a\xe1\xd0\x63\x20\x8c\x01\x19\xc3\x2d\xb1\x9b\x90\xa6\x15\x0c\xfd\x57\x28\x0d\x69\x21\xed\x5c\xd6\xce\xcb\x18\x5e\x94\xe4\xf6\x2b\x62\x3c\x4e\x5c\x40\x5b\x2f\x55\xa9\xd9\xe1\xc5\xe7\x0f\xff\xfc\x30\xf9\xfc\x65\x9c\xf2\xea\xb1\x4a\xc2\xe4\xf3\xe8\x6c\x3a\x0d\xad\x97\x9f\xc6\x06\x22\xf6\x95\x2e\xeb\x55\x24\x9f\x77\x19\x81\x87\x97\xb4\x26\x42\x06\x96\x66\x40\x9c\x05\xda\x4d\xe3\xdf\xc1\xf0\x23\xe5\x02\xc0\x83\x3b\xc4\x0e\x58\x4d\x0e\x0a\x9a\xdf\x62\x36\xe4\x34\xbf\x4d\x6d\xad\x24\x5d\x0d\xdb\x6c\xb2\xf5\x7a\x38\xa2\x44\xa0\x92\x60\x16\x15\x35\xcd\x41\x69\x54\x12\xc8\x12\x79\xea\xc1\x9d\x26\xff\x20\xcc\x7f\x3d\xbf\x76\x20\xad\x9f\xe2\xa3\xb4\x93\x09\xc2\x62\xa9\x72\x47\x5e\x52\xbc\x52\x6f\x40\x7b\xa2\xac\x28\xfa\x44\x75\x74\x07\x7c\xd0\xc0\xc0\xc2\xb3\x7b\xc1\x90\xa4\x71\xdb\x4e\x46\x34\xb3\x1d\x7a\x89\xaa\xc4\xb6\xc6\xf7\x4b\x0e\xb2\x9d\xa6\x91\xfd\x18\x3b\xa4\xdf\xac\x4e\x8a\x82\x61\xce\x1b\xf0\x46\x3b\x62\xae\xe5\x51\x2a\xf3\x0c\xbe\x35\xa1\x61\x9c\x6b\x4f\xc7\x3b\xa6\x4c\x58\xd5\xed\x9e\x1d\x19\x4a\xd0\x94\x3a\xf9\x42\x9c\x49\x29\x4e\xc9\x7b\xda\xd1\xc8\x29\xd6\x6b\x30\x7c\xd7\x1c\x42\x6d\x36\x72\xef\xa2\xb6\x04\x18\x4b\xd6\xc9\x79\x62\x8b\x12\xa2\xff\x53\xb6\x69\xcc\xca\xbb\x72\x89\xe7\xb8\xe8\x4c\x5c\xf7\x2c\x20\x70\xd7\xfa\x9c\xd9\xfd\x08\xc7\xdc\xd8\xbf\x6d\xa7\xd1\xc1\xa8\x97\x5f\xc7\x62\x45\x37\x5d\x78\xe5\xb0\x47\x87\x85\x1f\x11\xb7\xb6\xe3\x95\xcf\xfe\x2e\x7b\x69\xa0\x9a\x1a\xa5\x9a\x2c\x11\xa0\xc6\x98\xef\x66\x00\x91\xe4\x41\x65\x2d\xaf\x62\xdc\x77\x33\xbf\xb3\x91\xb4\x92\xa6\x48\xbd\x5b\x8d\xb2\x6b\x3e\x69\xc5\xb3\x79\xe6\x05\xe9\x5d\x2b\xc6\x88\x92\x59\x39\xaf\x99\x9f\xd7\x1b\x40\xd3\x51\xf1\x11\xa3\xa5\x58\x3c\x8c\x75\x5f\x45\x27\x15\x41\x4b\x47\x68\x91\x9a\x3e\x92\xbe\xb1\xa6\xd3\xc4\x15\x2c\x9f\x62\x5e\x32\x5c\x8c\xa4\x63\x8c\x86\x7f\x89\xf2\xc9\x4e\xe1\x5f\x2b\x26\x51\xeb\x00\x2f\x28\x2a\x1a\xb9\x88\xd9\x97\x48\xa8\xd8\xaa\xf3\x6e\x69\x8e\x3d\x42\xd2\x60\x46\xbc\x56\x29\x44\x47\xd8\xe1\x1b\xd7\x4e\x44\xd0\xd8\xb4\x76\x89\x66\xc7\x96\xdd\x25\x3d\x30\x14\xde\x61\x86\xb7\xcd\xe9\xb2\xaf\x2d\xf8\x89\x9c\x38\xaa\x49\x61\x7d\xa0\x6f\x7f\xc3\x64\xdf\x22\xd8\x33\x46\xf6\x74\xdb\x6a\x43\xd1\xd6\x3d\xb7\x7e\xd6\xb2\xd2\x2e\x8e\xfc\x62\xea\x31\x8a\xbc\xec\xad\xa1\x77\x38\xb6\x9e\x5a\xc0\xcd\x2c\x63\x86\x67\xe5\xbd\x84\xaf\x58\x49\xc4\x0c\xc0\x06\xf7\x7f\x70\xe8\xe2\xf4\xeb\x30\x43\xdb\x0b\x5a\xc5\x17\xd5\x5f\x17\x99\x23\xea\xa8\x46\xd2\xb4\xcc\xca\x3c\xe8\x34\x48\x36\xf7\xf9\x4b\xdd\x8a\x56\xc5\x7b\x41\x23\xcc\x93\xb6\x24\x5e\xce\x8c\x6f\x47\xdb\x12\x22\x53\x8b\x9d\x99\xd7\x09\x5a\x33\xde\xdb\xc1\xc7\xf0\xf0\xa7\x34\xf5\x3c\x85\x42\x15\x8e\x3c\x85\x34\x69\x28\xb5\x49\x6a\x27\x9b\x20\x52\xd0\x15\x07\xaf\x4b\x41\x51\x37\xcb\x9b\xc0\x43\xf7\x2e\xe4\x49\xdb\xef\x96\x6b\x53\x95\x4c\xb3\xc1\x97\xbe\xdd\xdb\x2e\x1d\xad\xee\xb5\x3c\xf6\x58\xeb\xf1\xb1\x3f\x72\xf1\xc6\x76\x15\x70\xab\xa8\xec\x9b\x4e\xb9\x6f\x8e\x7d\x96\xe3\x00\x3c\xfd\x34\xd5\xa9\xd3\xb5\x7b\xe4\xff\x53\xc4\xb9\xf9\xe7\x63\x82\xb4\x04\x76\xa7\xfe\x6a\x56\x0d\xbd\xe9\x5e\x46\xc2\x7d\x17\xf8\x13\x08\xb7\xc5\x66\xe8\xbb\x5d\x20\x58\x8d\x95\x3c\x0e\x6d\x63\xfd\x3c\x79\xf7\x0f\x0f\x7e\x82\xc4\x47\x04\x2e\xd5\xb2\xf7\x4c\x4e\xfa\xd1\xee\xb1\x8c\xe6\xec\x99\xac\x8e\xcf\x68\xc4\x0b\x15\x98\x7b\x7c\x14\xa4\x70\x60\x87\x9a\xfa\x7e\x43\x6a\x50\x60\x70\xdb\x15\xcf\xc9\xdc\x24\xd4\x5e\x8a\xd1\xab\x73\x06\xca\x0f\x19\x55\xc4\x39\x3c\x33\x07\xec\x61\x02\x07\x47\x65\xc1\xce\x25\xbf\xe1\xe1\x50\xfd\xff\xe0\x30\x52\xf4\x4e\x54\x65\xba\xd1\x56\x7f\x80\xe9\x40\x0b\xd3\xc8\x54\x12\x09\xcf\x2b\xbb\xd9\x48\xe4\x55\x58\x9f\x7f\xcf\xe8\xca\x8a\x58\x1d\x4d\x0e\x80\xaf\x68\x0a\xd4\x4d\x28\xb7\x85\x86\xde\x7e\x46\x52\x5b\x3b\xad\xfa\x5a\xe5\xe7\x85\xcf\x8a\xe0\x7c\x78\x90\x54\x80\xd8\x69\xa7\x16\xda\x25\xe2\xa2\xcc\x3b\xdd\x2f\xc9\x3c\xcb\x6c\x53\xd0\x09\xf1\xd3\x5c\x83\x93\xd7\xee\xa0\x9d\xdd\xba\x53\x5a\xd3\xd5\x0c\xa7\xf9\x02\xaf\x30\x80\x65\x77\xc5\xc3\x09\xbf\xf5\x7b\xdd\x0c\x12\x6b\x03\xb1\xba\x65\xb5\xd6\x9d\xcf\x34\x95\x4d\xa7\xaa\xbb\xfd\xd6\x11\xbd\xdb\xd0\xea\xcb\x63\x00\xe8\x66\x22\x8e\x82\x46\x15\xa0\xa3\xdc\x23\xac\x6d\xb1\x1f\xd8\x6b\x4a\x4b\x53\x70\xb8\x96\x5c\xf2\x79\x0c\x5b\xb8\xce\xe8\xda\xc2\x15\xb9\xe2\x2e\x45\x87\x60\xd5\xab\x74\xca\x50\x49\x4a\x32\xd7\x0d\x5c\x9a\x0c\x23\x4b\x30\x53\x2e\x67\x60\xb7\xc7\xfc\xf9\xd0\x31\x66\x1d\x1e\xbb\x99\x02\xc0\xf3\x62\x89\xad\x9e\x1a\x29\x64\xd6\x23\x9d\x0a\xda\x68\x18\xe5\xfc\x1f\x94\xe0\x66\xca\xee\x95\x2e\x13\x8c\x16\x38\xbf\xf5\x8b\x13\xa6\x82\x70\xb5\x60\x98\x2f\xe8\x52\x55\x96\x8e\x5d\x81\x52\x4c\xbc\x53\xfd\x79\x8a\x08\x3d\xa4\x79\xea\x1b\x14\x78\x85\xd8\x3c\xde\x7a\x15\x94\xed\x2c\x74\x8d\x41\x03\x9b\x4d\x96\x94\xd0\x94\x62\x36\x81\x86\x41\x45\x99\x48\xd5\xf6\xec\x19\x91\x58\x78\x26\x2e\x3c\xb6\xf5\xf8\xaf\x47\x5a\x3b\xe0\x00\x7f\x21\x8b\x28\x37\xbb\x74\xd7\xda\x93\xa6\xe5\xf4\x25\xfd\x96\xe3\xdc\x35\x3b\x87\xd1\xd3\x15\xdb\x7d\xb8\xf1\x92\xd7\x08\xab\xc6\xef\xee\xdf\x5c\xd4\x9e\x32\xaa\x84\x37\x08\xdd\x9f\x98\xc0\x0d\xba\x2e\xdc\xe9\x45\xb4\x25\x34\xe9\x3d\x6d\x47\xb0\xb3\x8b\x8c\x75\xf9\x3a\x9c\xf3\x01\xe2\x9c\xeb\xf0\xe8\x89\x63\xa5\x93\x47\xe6\x8b\x91\xe3\xac\xe9\xf4\xc2\xe2\x55\xe3\x64\x7f\xde\x5e\x04\x52\x90\x34\xdd\x7d\xa0\xcf\x25\x23\xac\xa0\xfb\x0d\xab\x2f\x1b\xbf\x24\xba\x80\x77\x54\xe0\x50\x61\xef\x1f\xfa\xb4\x36\x52\xcc\x74\x9b\x8b\xb5\xc3\x71\xf0\x44\xdb\xad\xd5\xa0\x26\x5e\x72\xc0\xad\x57\xb1\xe3\x70\x21\x58\x79\x53\x0b\xbd\xe0\xc4\x61\x58\x43\xcc\x36\x32\x80\x93\x6a\x4a\x77\x15\x1e\xae\x6c\x82\x13\x10\x4f\x7f\xb8\x69\xe1\x7b\xbe\x06\x05\x8d\xce\x03\x7f\xb3\x42\x59\x79\xb6\xfc\x5c\xbc\x1b\x51\x7a\x5b\xe2\xa9\x28\xf3\xdb\x92\x60\xce\xdb\xf8\x41\xae\xca\xdd\x5d\x34\x53\xf5\xd3\x07\xe8\xb0\x25\x5a\x56\x5e\x83\x1d\xd2\xde\x54\x32\x65\x2e\xf5\xb6\xd6\x02\x74\xc2\x1d\xbb\x11\xdc\xb6\xf4\xb6\x87\x5a\x5b\x63\xe1\x4d\x38\xc6\x03\xe8\xb8\xd5\x6e\x8c\x95\x0c\x6c\x4b\xcb\x23\x4d\xc2\x56\xf3\x9c\x6a\x10\x19\x31\x4a\xfe\x46\x6f\x78\xd8\x04\x2b\xa3\x28\xe2\x5d\xc0\xd8\x76\xfd\x22\x99\x08\xef\x78\xf5\x62\x87\x9e\xfe\x9e\x6b\x17\x41\x03\xd7\xb6\x2b\x17\x2f\x73\xe1\xe2\x11\xd7\x2d\x12\xe7\x90\xb6\x25\x8d\x5c\xb3\x48\x9a\x57\x37\x9e\xdb\xfd\x82\xc5\xf6\xeb\x15\x3b\x5e\xae\xe8\xbd\x03\x13\x6f\x13\xd8\xe1\x1e\x8c\xcd\x52\x88\x73\x9e\x4d\x6a\x72\x85\xf8\x6d\x1c\xd4\xbd\xaa\x11\x05\xb1\x33\xdb\x84\xb5\x3e\x61\xa4\x3d\x3b\x88\x83\x00\x4d\x4b\x6e\x1f\x61\x6e\x09\xea\x9d\xc1\x88\x91\x0c\xfd\xe0\x99\x44\x92\x70\x03\x20\x34\x9c\xed\x25\x8c\xf4\x08\xf8\x08\x74\x27\x79\x4e\x6b\x22\xce\x8b\x2d\x18\xcd\x2a\x0f\x7a\x30\xb7\x6d\x60\xa3\x8b\x2f\xd3\xab\xb3\x09\x4c\xb4\x05\x80\x26\x9b\x88\xbe\x8b\x3d\x0d\x9f\x05\xe1\x4c\x52\xab\x2c\x8b\x19\x2d\x9e\x48\xa3\xd6\xde\xab\x49\x19\xb6\xe4\x05\x1c\xbf\xda\xd1\x9a\xc8\xed\x55\x0d\xd8\x20\xb3\x8e\x5b\x9d\xbe\xbb\x7d\xe9\x2e\xac\x9e\xbd\x7d\x69\xbd\x6d\x2b\x10\xdc\x7d\x59\x98\x07\x16\x4c\xcf\xcd\x96\x86\xd4\xe8\xf9\x66\xef\x85\x16\x2b\xf5\x3b\x3a\x74\xb2\xf5\xe0\xc6\x11\xfc\x47\x59\xbd\x2f\x97\x91\xe6\x61\xf8\x9d\x84\x49\xef\x5e\xcd\x31\xe0\x82\x95\xb9\xd8\xfb\xab\x6f\xa4\xee\x10\x03\xe8\x07\x07\x6f\x01\xc3\xbf\xd7\x25\xc3\xaf\xf7\xd0\x0f\xbe\xcf\x8b\xdb\xbd\x37\x51\x60\x9c\x4b\x60\x82\x7f\xc8\x61\xc3\xb3\xd1\xf4\x75\x1c\xce\x08\x37\x78\x0b\xf6\x22\x32\x1c\x27\x44\x38\x07\xb7\x72\x9e\xb5\x9f\x9b\x87\x55\xed\xb0\xcf\xbc\x05\x8e\x77\xa3\xc9\x57\x92\xa6\x46\x06\xf6\x32\xb0\x07\xa3\x5d\x03\x7d\x67\xca\x03\x00\xf7\x06\xd1\x56\xb4\x78\x22\xa8\xa7\xdd\xcb\xf6\xf6\xfc\x95\x07\x9d\x12\xf8\xbe\x92\xd1\x66\x23\x7a\xe0\x2d\x98\x19\xb1\x7e\x8d\xef\x30\x11\x03\x90\x53\x22\xf0\xbd\x78\x13\xf0\x47\xcd\x22\x59\xa9\x8f\x44\x23\x1c\x84\xcd\x3f\xb8\x40\x4c\xe0\xe2\xdd\x43\x06\xf6\xa4\x16\xec\x0d\x52\x90\xee\xb6\x64\xfe\x36\x7d\x53\x44\x0d\xcd\xe1\xef\x75\x12\x8d\x91\x88\xac\xf9\x47\x1a\x50\x5a\xcf\x0c\x1c\x25\x01\xe8\x1d\x66\xac\x2c\x30\xcf\xd2\xcb\xd3\x88\x4c\x93\xc4\xe7\x6e\xc0\xb7\xbe\x01\x40\x49\x0d\x41\x2b\x9c\x39\x8b\x92\x1c\x57\x1d\xd0\xd9\x37\xb0\xc7\x17\x7b\x03\xb0\xb7\x9f\xef\x0d\x80\x06\x32\xef\xa4\x24\xf4\x21\xbf\x4e\xbd\x8c\x8e\xda\x04\x1a\x22\xff\xc0\x39\x1f\x32\xed\xa8\x5f\xeb\x2d\x6e\x85\x61\x58\x50\x82\x43\x5d\xdc\xfc\x35\xa8\x38\x75\x31\x51\x5f\xb4\x6b\x2b\xdb\x96\x20\x56\x2a\xd3\x74\x41\x99\x30\xfa\x32\xa9\x7b\x02\xda\x33\xc9\x33\x9e\x65\x0a\x68\xab\x41\xb7\x0c\xf9\xf0\x82\x92\x79\x63\xb7\x79\xbe\xc0\x45\xed\x5e\x4a\x9e\x9a\x67\x67\xf7\x15\xc3\xbc\x89\xac\x14\x71\xe6\x8d\x77\x84\xa7\x4b\x87\x41\x7e\xa9\x4c\x77\xd2\xbe\x77\xfe\x2a\x71\xaf\xe3\xbc\x88\x10\x6c\xaa\x94\x5e\xa1\xb3\x32\xa5\xbe\xef\xcd\xad\x9d\xef\x30\x03\xdf\xd5\x58\x93\x4a\x82\xcd\xe6\x3b\x1c\x80\xef\xd0\x08\x59\x07\x60\x7a\xf2\x15\x80\x15\x13\xc4\x52\x98\xc8\x16\x69\xef\x3b\xc6\x6c\x55\x72\x1e\x73\xd3\xc0\xf7\xd3\x16\x6c\x6c\xd7\x80\x9b\x8a\xe4\xed\x09\xbf\x0e\xf1\xb3\x73\x72\x47\x6f\x71\xec\xb6\xad\xe3\xb3\xc1\x13\xf9\x6e\x65\x19\x72\x52\xa5\x98\xdc\xcb\x2b\x6c\x51\x51\xd1\xac\x42\x93\x3c\x70\x0f\x24\xda\x9a\xf8\xf1\x69\x62\xf4\x8b\x5c\xfa\xee\x97\x0e\x3f\x3f\x22\x7e\x36\xb2\x3f\x0c\xa1\x88\xfa\xcc\x9c\xa0\xbf\xef\xf3\x5a\x5e\x28\x0b\x60\xcd\xf7\x31\xe2\x42\x5d\x11\xb4\x8f\x16\x1e\x89\xe3\x07\x7e\x21\x1c\xc7\xcf\xc0\x81\xeb\xfd\x1c\x13\xc1\xd0\xf2\x59\xa4\xe0\xfa\xf9\xcb\x41\xd5\x3e\xa1\x4c\x2c\x9e\xcd\x5b\x54\xed\x73\x5a\xbf\x34\x22\xc5\x65\x83\xe7\xba\xef\xa2\x60\xec\x56\x71\x27\x90\xf2\x4d\xe4\x43\x41\x91\xcb\x75\x13\x0b\xac\x49\x00\xec\x53\x4e\x47\xbc\x0d\x40\xf4\xd6\x5d\xdc\x09\x3c\xff\xb6\x9d\xf5\xc1\xa3\xa0\x15\x32\x68\x04\x78\xd5\xe8\xf5\x76\xbe\x79\xd7\x44\x1b\xae\xe9\xfa\xf7\xae\x8c\x08\x6e\x92\x06\x29\xe4\x2b\x63\x61\x7a\xb7\xe5\x31\x13\xf9\xec\x8b\xe0\x1d\x04\x4c\x33\x56\x2f\xc9\x15\xef\xba\xb9\xd3\xed\x19\xbf\xd3\xea\x57\xb6\x12\xdb\xbf\x53\x55\x2b\x59\x23\xf1\xca\x37\x5d\x15\xc9\x2f\xb2\x78\x35\x25\xe7\xb5\xdf\xe3\xda\x5f\x5d\x71\x0b\x5e\x41\x31\xa7\x2b\x7f\x05\x19\x38\x94\xe1\x9d\xeb\xb3\x9e\x92\x93\xdb\x3d\x0f\xd1\x0a\x53\xe3\xbd\x3a\x3f\x1e\x14\xc4\xe2\xe5\x30\x27\x4a\x72\x4b\x61\x4e\x77\x6f\x08\x96\xfe\x0c\xcc\xcb\x7f\xe1\x25\xb9\xc9\x9a\xc7\xba\x5b\x63\x49\x51\x71\xd3\x76\x6b\xe8\xf6\xa1\x1b\x9c\xa8\x6d\x25\xc6\x68\x4b\x80\x59\x73\x48\xc0\xdf\x33\xba\x8a\xf6\x7d\x6c\xc7\x36\xf1\x71\xfd\x56\x8a\xc5\x0e\xb8\xf2\xe3\xad\xc4\xe7\xc7\xd9\x49\x2d\x16\x94\x95\x7f\xe0\x68\x27\x53\x30\x2a\x76\x12\x62\x95\x00\xa3\x7c\xfd\x53\x04\x8d\xf7\xc4\xeb\x1c\x8f\x4a\xaf\xed\xba\xb6\x18\x62\xfb\x0b\x16\xe1\x87\x21\x5c\x63\x33\xfd\x35\xcb\xcc\x47\x5a\x8c\xb5\x39\xc5\x4b\x2c\xe5\xa4\x3d\x04\x81\x13\x2c\xb3\xc5\x2d\xd6\x48\x7d\x54\x71\x44\x89\x60\xfa\x50\xd6\xef\x72\x81\x57\xc8\xbb\x7c\xb4\x6e\xee\x4b\x43\xfe\xc0\x05\x5e\x49\xe3\xda\x1e\x45\x99\xef\xc2\x00\xd7\xf5\x1b\x78\x54\x55\x36\x70\x8f\xd7\x8a\xb1\xcd\xe2\xda\xbf\x03\x00\x00\xff\xff\x7e\x28\x8a\x2b\x19\x57\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

