// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x50\xbc\xb9\x93\x3d\x23\xcb\xb2\xe7\x66\xef\x96\x73\xb9\x2a\x47\x76\x26\xde\xb5\x13\x9d\xe5\x24\x75\x9b\xa4\xb6\x60\x12\x92\xb8\xa6\x00\x0e\x00\x3a\xf6\xa8\xf4\xdf\xb7\xf0\x20\x89\x27\x25\xdb\x49\x6d\xb6\x76\x12\x91\x8d\x46\xa3\xbb\xd1\x2f\x34\xb8\x5e\x83\x1c\xcd\x0b\x8c\x40\x02\xab\x2a\x01\x9b\xcd\x0b\x00\xd6\x6b\xf0\x03\xac\x2a\x90\xbe\x04\xa3\x93\xaa\xea\x1e\xae\x20\x2e\xe6\x88\x71\xf9\xe6\xb2\xf9\xa1\x5e\xbf\x00\x00\x80\xe4\xe4\xe3\xec\x1a\xad\xaa\x12\x72\xf4\x9a\xd0\x15\xe4\x1f\x10\x65\x05\xc1\x09\x48\x41\x72\x3c\x3e\x1a\x1f\x8c\xff\x7c\x30\xfe\x73\x32\x54\xe0\x13\x82\xf3\x82\x17\x04\xb3\x24\xd5\x28\xe4\x4c\x5c\xe3\x00\xc9\x0d\x2c\x21\xce\x10\x3d\xc8\x3a\x50\x77\x6e\x6f\x50\x45\x49\x86\x18\x7b\xd4\x18\x8a\x16\x05\xe3\xf4\x61\xdb\xa0\xe4\x1c\x73\x44\x31\x2c\x05\xc5\x20\x79\x8d\xd3\xf4\xec\xf7\x1a\x96\x62\x05\x9f\xc4\x93\x2b\x34\x4f\x52\x03\x0c\x6c\x86\x20\xf9\x7f\xc4\x12\xf0\x05\x6c\x86\x0d\x96\x29\x2d\xee\x20\x47\x5b\x90\x34\x50\x61\x1c\xaf\x4a\x88\x6f\x67\x28\xab\x69\xc1\x1f\x7e\xa3\xa4\xae\x04\x9b\xd7\x26\x3a\x90\x82\x4f\x6b\x89\x4d\x08\xc0\x86\x15\x38\x93\x2f\x6a\x5d\x1a\x69\x32\x85\x14\xae\x10\x47\x54\x0e\xed\x97\x48\x25\x60\x1f\x21\x8d\x20\x7c\xb3\x96\x49\x59\x33\x8e\xa8\xa1\x06\x00\x24\xd7\x0f\x15\x52\x84\x73\x5a\xe0\x45\x32\xec\x5e\x9d\xa2\x39\xac\x4b\x2e\xdf\xda\xcf\x59\x46\x8b\x8a\x37\x3a\x97\xe8\x57\x1d\xd7\x26\x35\xe3\x64\x75\x4d\xaa\x22\xbb\xaa\x31\x2f\x56\x28\x30\x69\xef\x9c\x29\x48\x30\xc9\xd1\x3f\x58\x6c\xe2\xe0\xbc\xa7\xa8\x2a\xc9\xc3\x0a\x61\x7e\x09\xef\x8b\x55\xbd\x0a\x4f\xfb\xb6\x5e\xdd\x20\x1a\x99\xf6\x78\x3c\xee\x99\x53\xe3\x05\x15\xa2\x19\xc2\x1c\x2e\x10\x20\x73\xa0\xd9\x8f\x18\xe0\x04\xdc\x22\x54\x01\x5a\x63\x5c\xe0\x05\xf8\xba\x2c\x4a\x04\x72\x49\x97\x58\x6a\x1f\xc9\x05\x7e\x22\xc9\xbf\xf4\x52\xac\xd0\x7e\x3b\x8a\xcf\xf0\x5d\x41\x09\x16\x24\x3f\x41\xaa\x8f\x92\xa7\x69\x07\x76\x9b\xc7\x42\xf8\x0e\x97\x0f\x00\x96\x25\xf9\x0a\x60\x26\x96\x2b\x16\xcb\x97\x05\x03\xc2\xf4\xce\x29\x59\x81\x02\xb3\x22\x47\x80\x2f\x11\xf8\x30\x9d\x44\x68\x7e\x4b\xcc\x17\x27\x02\x21\xca\x3f\xc0\xb2\x46\xca\x98\x48\xb3\x31\x94\x70\xe0\x8b\xb7\x88\xbf\xa2\x87\xef\xcd\x27\xc3\xd2\x3d\x81\x4d\xef\x19\x02\xb3\xfa\x06\x23\xce\x34\x22\xc1\x27\x56\xa1\xac\x98\x3f\x08\xb6\x1c\x48\x1e\x95\x04\xe6\xa0\xb1\x4c\x00\xe1\xbc\x22\x05\xe6\xec\xbb\xf0\xec\x0a\x95\x08\xb2\xd0\x82\xbe\xb5\xa9\xba\x42\x15\x61\x05\x27\x34\x24\xa4\xe7\x4d\x36\x23\x35\xcd\x10\xc8\x48\x8e\x00\xed\xa6\xf1\x48\xb0\x5d\xc6\xb7\xa6\xe2\x7a\x89\xc0\x85\x25\x3a\xa6\xe7\x03\x0b\x31\x21\x98\x13\xda\x6e\x8a\x00\x71\x4a\x31\x22\x64\x5d\x14\x8c\xff\xcf\xc9\xc7\x59\x9a\x9e\x4d\x8e\xd3\x54\x01\xa7\xe9\x79\xfe\xbf\x4f\x21\xf5\xc3\x74\x02\x98\x9a\x6f\x37\xaa\xe2\x7a\xff\x7d\x88\xab\xf4\xf6\xd8\x8d\xc8\x26\x2e\xb3\xa8\x73\xf6\xde\xde\xd5\xd9\xff\xbd\x3f\xbf\x3a\x3b\xdd\x07\x17\x70\x75\x93\x43\x60\xf8\x4e\xf0\x06\xe2\xbc\x44\x14\xe8\xed\x00\x1a\x8c\x06\x99\x97\x05\xbe\x40\x78\xc1\x97\x92\xc8\x23\xf3\x95\x63\x00\x7c\xfa\xa6\x93\x08\xe7\x3a\xa6\x7d\x98\x4e\x04\xc7\x9e\xca\xb0\x2d\x0c\x9a\x4e\x26\xe7\xa7\x57\xdf\x5c\xe5\xc5\xcc\x02\x71\x78\x7a\x2b\x18\xbb\x84\x55\x55\xe0\x85\xa9\xdf\xc9\x94\x50\x3e\xa5\x84\x93\x8c\x38\x9e\x67\xc9\x79\xa5\xc2\x49\xa1\x5b\x08\x23\x6a\xc0\x25\x6f\xae\xaf\xa7\xc2\xa4\x9d\x63\xc6\xc5\x4e\x0b\xbd\x93\x7b\x1d\xc5\x20\x66\x49\xc7\x1d\x3d\x1d\xeb\x9f\x6f\xf6\xec\x09\xad\x19\x79\xd6\xb3\xbe\xeb\x49\x74\x79\xfa\x55\x7c\xb2\xd9\xec\xc2\x9d\xaa\xec\x59\x9a\x00\x7f\xde\x54\x60\x13\x94\xf7\x15\x62\xd2\x2a\x5b\x02\x37\xc3\x55\x52\x46\xdc\xa8\xdc\x13\xe7\x27\x97\x69\x2a\x61\x8c\x95\x4c\x29\xa9\x10\xe5\x05\xb2\xad\xa4\x70\x7b\x8c\xd5\x2b\x24\xe0\xa7\xa4\x2c\xb2\x87\x53\x92\xd5\x5e\xdc\xe4\xd8\x0a\x91\xc2\x1d\x1f\x1c\x8d\x0f\x8e\xfe\xcb\x98\x44\x02\xcd\x38\xe4\x48\x8f\xff\x64\xbd\x02\x0e\x3e\x09\x7e\x36\x9f\xa3\x4c\x3a\x63\xe9\x7e\x1d\x6c\x9a\xf4\x02\x67\x45\xd5\x64\x5a\x33\x44\xef\x8a\x0c\x29\x07\x5d\x4a\x7b\x34\x82\x2b\xf8\x07\xc1\xf0\x2b\x1b\x65\x64\x65\x25\x47\xe6\x42\x33\x6d\xd0\x3e\x81\x84\x71\x96\x76\x0b\xef\xbc\x7b\xf3\x67\x63\xfd\x36\xdf\x5a\x98\x93\x29\xe4\x4b\x41\xfc\x61\x46\xf0\x1d\xb9\x3f\x4c\xec\xb7\x82\xa1\x8a\xe5\x36\x2b\x5c\x46\x28\xc8\x87\xb7\x70\xa5\xc4\x98\xaf\x0a\x2c\xb2\x50\xc8\x09\xf5\x58\x92\x6c\x91\x13\xd8\x55\x56\xc0\x93\x97\xe0\xaf\x27\x11\x83\x73\xc9\x8f\xe2\x67\xa3\x9f\xea\x01\xd8\x6c\xe1\x9e\xf9\xab\x83\xdc\xf4\x25\x64\x3d\xda\xad\x3c\x50\x9a\xbe\xae\xb1\xa2\x6a\x27\x25\x9f\x90\x1c\xf9\x0a\x3d\xfb\xf9\x55\x9d\xdd\x22\xde\x65\xdf\x7f\x21\x85\xd6\x90\x83\x64\x28\xfe\x52\x72\x4d\x86\x46\x32\x2e\xc9\xb8\x42\x0b\x69\xc9\x37\xe0\x8b\xaf\x6e\xc9\xec\x67\x1d\x50\xbb\x58\x15\x52\xaa\x5c\xe5\xa1\x85\xb6\xad\x90\x88\x7c\xfc\x50\x29\xf6\xe1\x5c\x16\x4f\x0a\x82\x47\x7f\x14\x55\xa2\xe6\x8a\x2a\xa3\xf6\xc4\x02\x59\x81\x73\x74\x3f\x42\xf7\x3a\x35\xb1\xc0\x2e\xd1\x8a\xd0\x87\x59\xf1\x87\x64\xea\xd1\xf1\x7f\xdb\xaf\x1b\xeb\xa2\x48\xff\x0d\xf1\x13\xae\x74\xc3\x33\x41\x42\x33\x28\xf6\xb6\x5b\x62\xa4\xd3\x6a\x75\xc3\x60\xb6\xed\x8c\xba\x2e\x56\x88\xd4\x52\xf1\x7e\x1e\x8f\x93\xb8\xa2\x84\xab\x10\xb4\x35\x9a\x60\x14\x29\x40\x64\x94\xe0\x7f\x90\x9b\x5d\x40\x9b\x5a\x85\x09\xba\x63\x79\x83\x29\xfb\xd4\x83\xbc\x2d\x31\xc5\xb0\x87\x06\x35\x01\x71\x12\x41\xca\xb8\x2a\x10\xd9\xae\xe4\x5d\xcd\xab\x9a\x6f\xaf\xaa\x11\x0d\x07\x46\xfd\x8b\xeb\xe0\x76\x2d\xa3\x85\x47\x74\x69\x05\xe7\x4e\x68\x23\x8c\x97\x48\xc1\x3a\xf5\x49\x0d\x38\xd7\x65\xbe\x10\xff\x5f\xaf\x45\xaa\x27\xf1\x1a\x85\xcc\x50\xf5\xaf\x29\x61\x52\x88\x17\x08\xfc\x70\x2b\x2b\x98\x67\x98\x53\x69\x7b\x59\xb3\x98\xe4\x0c\xc3\x9b\x12\xe5\xeb\x35\xa8\xab\x0a\x51\x01\xb9\xd9\x74\xbb\xe2\x2d\x91\x5b\x22\x58\xb2\x13\x4f\x66\xa8\x54\x36\xf4\x13\x18\x9b\x7b\xdc\xc6\xf7\xba\xd9\xdc\xca\x8c\x88\x7d\x7f\x70\x24\xb7\x93\xde\x51\xdd\xba\xfa\x57\xd8\x54\xd4\x9c\xd5\xa1\xd8\xea\x3a\x32\x90\x45\x86\x11\x6e\x34\x36\x77\x42\x56\x2b\x78\x8a\xca\x62\x55\x70\x94\x8b\x30\x28\x31\xca\x42\x6d\x26\x7d\x34\x1c\x0f\x8f\x7f\xf9\x93\xf9\xce\x4a\x21\x54\x69\xc8\x2b\xea\xd0\x1a\x0f\xc1\x64\xfa\x1e\xd4\xb8\xe0\xea\x09\x12\xfb\x07\x0d\x01\xc4\x39\xb8\x7c\x25\x46\x5c\x9d\x5c\x1a\x6f\x92\x4e\xbf\x77\x65\x4f\xab\x82\x72\xfd\xc9\x05\x59\xd8\x59\x6c\x40\xdf\x5a\x18\xa5\x61\xc3\x2d\x33\x18\x1b\x39\x36\x87\xed\xc4\xc8\x82\xc9\xff\x2a\xa0\x5d\xa6\xe8\xcc\xca\x4e\x65\xf8\x48\xe9\xbe\x98\x77\xc3\x46\x6f\x20\x9b\xb6\xd2\xd0\xba\xe1\x68\x4f\x07\xac\xc3\x2e\x66\x54\xc0\x0d\x35\x1a\x09\x05\x03\x9b\xcd\xd9\x64\x76\x0d\xd9\xed\xa9\x20\xbe\xe0\x81\xc4\xb2\x42\x38\x67\xef\xa4\x37\xb4\x1c\xfe\xb0\x0d\xec\xa4\x6b\xf9\x12\x48\x11\x15\xb8\xc8\xf9\xdc\x39\x0c\x60\x23\xee\x39\x1a\x8d\x77\x0b\x0e\xf4\xc4\xd7\xe4\x16\xe1\xad\x9e\x2f\xea\xf5\x74\xf0\x16\x09\x24\x9c\xf0\x61\xc6\x61\x76\x2b\x47\xc8\x6d\x2f\xc4\xd5\xf2\x30\xf1\x43\x0a\xb3\xd6\xd4\x22\x6a\x9e\x39\xa0\x4e\xe9\xb3\x05\x37\x9f\x3b\x43\xda\x60\x45\x83\x8a\xdf\xae\x77\x86\xec\x76\x87\x38\xb6\x89\x60\xed\x05\x79\x11\xec\xf9\x0a\x2e\x0c\x38\xf9\x33\x04\xb8\x5e\x0b\x85\x45\x23\x69\x85\x70\x3e\x3a\xa1\x14\x3e\x6c\x36\x7e\x14\xab\x01\x02\x39\x07\xb0\x94\x5a\xc6\x45\x43\xf0\x03\x2a\x65\xcc\x2b\x55\x7c\x3b\x7a\x93\x18\x89\x61\xb3\x19\xae\xd7\xa8\x64\x68\xb3\x59\xaf\x11\xce\xa3\x63\x92\xf5\xba\x99\x6b\xb3\x49\x82\xa4\x85\x87\x7f\xf1\x59\x21\xe6\x13\x1b\x18\x23\x93\x66\x55\x81\x00\x49\xd2\xcf\x96\xf5\x1a\xdc\x09\x2b\x17\x18\xba\xf1\x92\xa5\x30\x51\xc9\xa4\xaa\x3b\x05\x37\x5c\xdc\x51\xd8\xc5\xb5\xf2\xf7\xfc\x9c\x8b\x58\x45\xa4\x41\xdc\xc7\xcf\xc5\x1d\x3b\x09\x68\x01\x4e\xa6\xd3\x46\x13\x85\xa9\x8c\x2a\xad\xd8\x85\x27\x93\xbf\x6a\x58\x84\xef\xf4\xef\x08\xec\xc9\xc7\xd9\xdf\xaf\xce\x7e\x3b\x7f\xf7\xd6\x1c\x61\x3c\x0d\x8f\x33\x62\x13\xf4\x30\x04\x3f\x28\xa1\x29\x35\x35\x96\x02\x02\xd2\x96\xfa\x29\x94\x43\x8d\x49\x92\x10\x90\xb6\xdb\x02\xbb\x8e\x68\x5a\xc5\x50\x7f\xf9\xda\x10\x57\xd2\xce\x63\xed\xbc\x8c\xd1\x45\x81\x6f\x3f\x40\xca\xc2\xc4\x79\xb4\xf5\x52\x15\x9b\x3d\xb9\x78\xf7\xdb\xdf\x7f\xbb\x7a\xf7\x7e\x1a\x73\xea\xa1\x32\xc3\xd5\xbb\xc9\xd9\x6c\xe6\x5b\x2f\x37\xb9\xf5\x54\xec\x03\x29\xeb\x55\x20\xcb\xb7\x19\x81\x46\x97\xa4\xc6\x5c\xc4\x95\x7a\x40\x98\x05\xca\x4b\x8f\xce\xd9\xec\x81\x71\xb4\x8a\x08\x51\x10\x39\x7a\x43\x18\xdf\x6c\xd2\xf5\x7a\x34\x21\x98\xc3\x02\x23\x1a\x54\x2a\xc5\x2b\x61\x3e\x22\xc8\x22\x79\xea\xe1\x9d\x22\xf4\xd0\xcf\x7f\x1d\x07\x76\x28\xec\x9c\xe4\x98\xb0\x88\x11\xc2\x42\xa9\x72\x47\x5e\x54\x91\x62\x6f\x40\x7b\x9e\x2d\x29\x7a\x4b\x54\x18\x07\x5c\x50\xcf\x94\x26\x67\xf7\x9c\x42\x41\xe3\x36\x99\x05\xf6\x60\x3b\xf4\x12\x56\x11\x01\x86\xe5\x25\x06\x99\xee\x51\x6b\x79\x88\x1d\xc2\x43\x56\x27\x79\x4e\x11\x63\x0d\x78\xb3\x0f\x42\x4e\xe4\x51\x9b\xe3\x19\x7c\x6b\x62\xc0\x30\xd7\x9e\x8e\x77\x4a\x28\x37\x8a\xdc\x3d\x12\x19\x09\xd0\xd8\xc6\x71\x95\x38\x15\x5a\x1c\xd3\xf7\xb8\x4b\x11\x53\xac\xd7\x60\xf4\xaa\x39\x8b\xda\x6c\x84\xec\x82\x56\x03\x68\x9b\xd5\xe9\x79\x44\x44\x11\xd5\xff\x2e\x62\x9a\xd2\xe2\xae\x28\xd1\x02\xe5\x9d\x31\xeb\x9e\x79\x04\xee\x5a\x9f\xd3\xd2\x0f\x70\xcc\x0e\xf2\xdb\x66\x1e\x15\x75\x3a\x89\x74\x28\x2a\xb4\xf3\x82\x17\x16\x7b\x54\x00\xf8\x06\x32\x43\x1c\x2f\x5c\xf6\x77\x69\x4a\x03\xd5\xd4\x28\xe5\x64\x91\x50\x34\xc4\x7c\x3b\xd4\x0f\x64\x09\x32\x3d\x79\x11\xe2\xbe\x9d\xe2\x9d\x4d\x84\x95\xd4\xb5\xea\xdd\x6a\x94\x5d\xeb\x4b\xab\x9e\xcd\x33\x27\x1a\xef\x1a\x32\x26\x04\xcf\x8b\x45\x4d\xdd\x04\x5e\x03\xea\xc6\x8a\x37\x08\x96\x7c\xf9\x30\x55\xed\x15\x9d\x56\x78\x8d\x1d\xbe\x45\x6a\xba\x49\xfa\xc6\xea\x7e\x13\x5b\xb1\x5c\x8a\x59\x41\x51\x3e\x11\x2e\x30\x18\xe8\x45\xea\x24\x3b\x05\x7a\xad\x9a\x04\xad\x43\x72\x41\x60\xde\xe8\x45\xc8\xbe\x04\x82\xc2\x76\x3b\xef\x96\xd0\x98\x23\x04\x0d\x7a\xc4\x9e\x4c\x16\x3a\xc2\xc6\xfb\xb6\x9d\x08\xa0\x31\x69\xed\x32\xca\x8e\x2d\xbb\x6b\xba\x67\x28\x9c\x33\x0d\x47\xcc\xf1\xb2\xaf\xa9\xf8\x91\xe4\x37\xb8\x93\xfc\x42\x40\x9f\x7c\xfd\xac\xde\x20\xd8\x31\x46\xe6\x74\xdb\x8a\x40\xc1\xc6\x41\xbb\x50\xd6\xb2\xd2\xac\x82\xfc\xa0\x0b\x2f\x92\xbc\xf4\xa5\xa6\x77\x34\x35\x9e\x1a\xc0\xcd\x2c\x53\x8a\xe6\xc5\xbd\x80\xaf\x68\x81\xf9\x1c\x24\x0d\xee\x7f\x67\x89\x8d\xd3\x2d\xb8\x8c\x4c\x2f\x68\x54\x59\x64\x77\x5f\x60\x8e\xa0\xa3\x9a\x08\xd3\x32\x2f\x32\xaf\xe1\x20\xda\x5a\xe8\x2e\x75\x2b\x5a\x19\xef\x79\xfd\x30\x4f\x12\x49\xb8\x6e\x19\x16\x47\xdb\x19\x22\x92\x88\x9d\x99\xd7\x29\x5a\x33\xde\x91\xe0\x63\x78\xf8\x5d\x7a\x7b\x9e\x42\xa1\x0c\x47\x9e\x42\x9a\x30\x94\xca\x24\xb5\x93\x5d\x41\x9c\x93\x15\x03\x7b\x05\x27\xb0\x9b\x65\xdf\xf3\xd0\xbd\x0b\x79\x92\xf8\xed\xba\x6c\xac\x64\xa9\x05\x7c\xe9\xda\xbd\xed\xda\xd1\xee\xbd\x96\xc7\x0e\x6b\x1d\x3e\xf6\x47\x2e\xce\xd8\xae\xd4\x6d\x54\x8f\x5d\xd3\x29\xe4\x66\xd9\x67\x31\x0e\x24\xa7\x6f\x67\x2a\x75\xfa\x62\x9f\xfc\x7f\x17\x75\x6e\xfe\xf9\x98\x20\x2d\x82\xdd\x2a\xb4\xea\x55\x27\xce\x74\xdf\x46\xc3\x5d\x17\xf8\x1d\x08\x37\xd5\x66\xe4\xba\x5d\xc0\x69\x8d\xa4\x3e\x8e\x4c\x63\xfd\x3c\x7d\x77\x4f\x09\xbe\x83\xc6\x07\x14\x2e\xd6\xb9\xf7\x4c\x4e\xba\xd1\xee\xb1\x88\xe6\xcc\x99\x8c\xc6\xcf\x60\xc4\x9b\x48\x30\xfb\x9c\xc8\x4b\xe1\xc0\x0e\xc5\xf3\x83\x86\x54\xaf\xc0\x60\x77\x2d\x9e\xe3\x85\x4e\xa8\x9d\x14\xa3\x77\xcf\x69\x28\x37\x64\x54\x45\x9a\x33\x7d\xc0\xee\x27\x70\xc9\xa4\xc8\xe9\xb9\xe0\x77\x32\x1e\xc9\xff\x1d\x8e\x03\xe5\xed\x48\x55\xa6\x1b\x6d\xf4\x07\xe8\x46\x34\x3f\x8d\x8c\x25\x91\xc9\x79\x65\xf6\x1c\xf1\xac\xf2\x2b\xf1\xaf\x29\x59\x19\x11\xab\xb5\x93\x3d\xe0\x6b\x12\x03\xb5\x13\xca\x6d\xa1\xa1\x23\xcf\x40\x6a\x6b\xa6\x55\x1f\xaa\xec\x3c\x77\x59\xe1\x1d\x04\x0f\xa3\x1b\x20\x74\xac\xa9\x94\xb6\x84\x8c\x17\x59\xb7\xf7\x0b\xbc\x48\x53\xd3\x14\x74\x4a\xfc\x34\xd7\x60\xe5\xb5\x3b\xec\xce\x6e\xdd\xb1\x5d\xa3\x14\x0f\xfd\x0e\x46\xb3\x6c\x89\x56\x08\x24\x45\x77\xc1\xc4\x0a\xbf\xd5\x7b\xd5\x0c\x12\x6a\x03\x31\x9a\x66\xd5\xae\x3b\x9f\x2b\x2a\x9b\x86\x55\x5b\xfc\xc6\x59\xbc\xdd\xd7\xea\xea\xa3\x07\x68\x67\x22\xd6\x06\x0d\x6e\x80\x8e\x72\x87\xb0\xb6\xd3\x7e\x68\xae\x29\xae\x4d\xde\x29\x5a\x74\xc9\xe7\x21\x6c\xfe\x3a\x83\x6b\xf3\x57\x64\xab\xbb\x50\x1d\x8c\x64\xaf\xd2\x29\x85\x05\x2e\xf0\x42\x35\x70\x29\x32\xb4\x2e\x25\xa9\x74\x39\x43\xb3\x0f\xe6\x4f\x63\xcb\x98\x75\x78\xcc\xae\x09\x90\x9c\xe7\x25\x32\x9a\x67\x84\x92\x19\x8f\x54\x2a\x68\xa2\xa1\x84\xb1\xbf\x11\x8c\x9a\x29\xbb\x57\xaa\x4c\x30\x59\xa2\xec\xd6\x2d\x4e\xe8\x0a\xc2\xf5\x92\x22\xb6\x24\xa5\xac\x2c\x1d\xdb\x0a\x25\x99\x78\x27\xdb\xf4\x24\x11\x6a\x48\xf3\xd4\x35\x28\xc9\x35\xa4\x8b\x70\xeb\x95\x57\xb6\x33\xd0\x35\x06\x0d\x6c\x36\x69\x54\x43\x63\x1b\xb3\x09\x34\x34\x2a\x42\x79\xac\xb6\x67\xce\x08\xf9\xd2\x31\x71\xfe\xf9\xac\xc3\x7f\x35\xd2\x90\x80\x05\xfc\x1e\x2f\x83\xdc\xec\xd2\x5d\x43\x26\x4d\xe7\xe9\xb7\xf4\x5b\x96\x73\x57\xec\x1c\x05\xcf\x51\x4c\xf7\x61\xc7\x4b\x4e\x3f\xac\x1c\xbf\xbb\x7f\xb3\x51\x3b\x9b\x51\x26\xbc\x5e\xe8\xfe\xc4\x04\x6e\xd8\x35\xe3\xce\x2e\x82\x9d\xa1\x51\xef\x69\x3a\x82\x9d\x5d\x64\xa8\xd9\xd7\xe2\x9c\x0b\x10\xe6\x5c\x87\x47\x4d\x1c\x2a\x9d\x3c\x32\x5f\x0c\x1c\x5c\xcd\x66\x17\x06\xaf\x1a\x27\xfb\xfd\x64\xe1\x69\x41\xd4\x74\xf7\x81\x3e\x97\x0c\xbf\x82\xee\x36\xac\x7e\xdb\xf8\x25\xd2\x05\xbc\xe3\x06\xf6\x37\xec\xfd\x43\xdf\xae\x0d\x14\x33\xed\xe6\x62\xe5\x70\x2c\x3c\xc1\xae\x6b\x39\xa8\x89\x97\x2c\x70\xe3\x55\xe8\xe0\x9b\x73\x5a\xdc\xd4\x5c\x2d\x38\x72\x18\xd6\x10\xb3\x8d\x0c\x60\xa5\x9a\xc2\x5d\xf9\x87\x2b\x1b\xef\x04\xc4\xd9\x3f\x4c\xf7\xea\x3d\x7f\x07\x79\x8d\xce\x43\x57\x58\xbe\xae\x3c\x5b\x7f\x2e\x5e\x4d\x08\xb9\x2d\xd0\x8c\x17\xd9\x6d\x81\x11\x63\x6d\xfc\x20\x56\x65\x4b\x17\xce\x65\xfd\xf4\x21\xb1\xd8\x12\x2c\x2b\xaf\xc1\x0e\x69\x6f\x2c\x99\xd2\x57\x8a\x5b\x6b\x01\x3a\xe5\x0e\xdd\x47\x6e\x7b\x77\xdb\x43\xad\xad\xb1\xf0\xc6\x1f\xe3\x00\x74\xdc\x6a\x05\x63\x24\x03\xdb\xd2\xf2\x40\x37\xb0\xd1\x25\x27\x5b\x41\x26\x94\xe0\xbf\x90\x1b\xe6\x77\xbb\x8a\x28\x0a\x3b\xf7\x30\xb6\xdd\xc2\x88\x26\xc2\x3b\xde\xc0\xd8\xa1\xa7\xbf\xe7\xf6\x85\xd7\xaa\xb5\xed\xe6\xc5\xb7\xb9\x77\xf1\x88\x5b\x17\x91\x73\x48\xd3\x92\xc6\x6f\x5b\x44\xad\xac\x1d\xd6\xd9\x9b\x45\xcb\xd7\x3d\xf1\xda\x7a\xbf\x62\xc7\xdb\x15\xbd\x77\x61\xc2\x7d\x02\x3b\xdc\x87\x31\x79\x9a\xa0\x8c\xa5\x57\x35\xbe\x86\xec\x36\x0c\x6a\xdf\xd5\x08\x82\x98\xa9\x6d\xc4\x5c\x9f\x50\xdc\x1e\x1e\x84\x41\x80\xa2\x25\x33\xcf\x30\xb7\x44\xf5\xd6\x60\x48\x71\x0a\xbf\xb2\x54\x20\x89\xf8\x01\xe0\x5b\xce\xf6\x16\x46\x7c\x44\xf2\x08\x74\x27\x59\x46\x6a\xcc\xcf\xf3\x2d\x18\xf5\x2a\x0f\x7b\x30\xb7\x1d\x5f\x93\x8b\xf7\xb3\xeb\xb3\xab\x24\xd2\x17\x00\x9a\x74\x22\xf8\x2e\xf4\xd4\x7f\x16\x8a\x96\x9e\xaf\x5b\x61\x61\x25\x25\x59\xb0\x74\x42\x11\xe4\xa8\xed\xa7\x8a\xf8\x6d\x1b\x74\xc6\x29\x82\xab\x5e\xd8\x69\xcd\x2f\xc8\xe2\xec\x0e\x61\xce\x82\x4d\x14\xdb\x54\x3c\xd2\xc7\xd4\x28\x97\x9c\xa4\xe7\x2e\xcf\x50\xf5\x8c\xf4\x69\x05\x48\x04\x96\x03\x79\x2b\x39\x3d\x84\x5f\x59\x73\x53\xe7\x47\xff\x76\x8e\xfa\xf3\x2f\x94\xce\xbf\x8e\xe5\x81\xb3\x90\x4e\x5b\x8c\x33\x64\x90\xa4\x71\xc6\xb9\x61\x7a\xd4\x5b\x18\x91\x80\x1f\x07\x68\x67\xdd\xde\x17\x8b\x39\xec\xe8\xc5\x32\xb7\x8a\xd7\xba\xfe\xed\xd5\xba\xa4\x41\x66\xb4\x11\x58\x9d\xa3\x07\x22\x0c\x32\xba\x4e\x0f\x44\x54\x62\xba\x35\xef\x4e\xd7\x52\x3f\x30\x60\x7a\x6e\x6c\x35\xa4\x06\xcf\xed\x8d\x8b\x5a\xfa\x43\x26\xff\x39\xfa\xd9\xba\x9c\xdd\x56\x35\x7e\x19\x5b\x85\x28\xef\x32\x5d\xf2\xb7\xa2\x7a\x5d\x94\x01\x85\x48\x3e\x63\xbf\x9e\x33\xa8\x19\x02\x8c\xd3\x22\xe3\x83\x5f\x5d\xf7\x7b\x07\x29\x80\x5f\x19\x78\x09\x28\xfa\xbd\x2e\x28\xda\x1b\xc0\xaf\xec\x80\xe5\xb7\x83\xfd\x20\x30\xca\x04\x30\x46\x5f\xc5\xb0\xd1\xd9\x64\xb6\xb7\x5e\xc1\xfb\x2b\xc4\x69\x81\x58\x7a\x34\xde\x84\x87\x09\xfd\x37\xc6\x4d\x4a\x52\xe7\x1f\x21\xcf\x96\x17\x64\xc1\xf6\xc2\x63\xb4\xe5\x07\x2f\xc1\x20\x60\xe0\xbd\xb5\x44\xec\x91\x9e\x5d\x6e\x07\x81\xca\xb2\x39\x66\x97\x2a\x48\x06\xbf\x06\xdb\x26\x7b\x10\xeb\xcb\x85\x1e\x5e\xe3\xba\x40\x14\xad\x44\xc0\xad\x36\x0c\xc1\xa2\xb5\xbb\x2c\xff\x8c\xca\xbf\x1e\xb2\x85\x54\xf1\x4a\xf0\xb0\xd1\xfc\x41\xea\xd0\xdb\x15\xf1\x7a\x3a\x44\xc4\x52\x86\x61\x0e\x05\xcb\x3a\x6a\xda\x41\x3a\x18\xb8\xd2\xf5\xfa\x9e\xd0\x7d\x25\x72\xc7\x66\xc3\x81\x97\x60\xae\x37\xf3\x1e\x12\xe6\x72\x08\x32\x82\x39\xba\xe7\xfb\x1e\x7f\xe4\x2c\x52\x5d\x54\xa7\x3d\x78\x09\xe4\x90\x91\xfe\x3d\xa2\xa8\x2a\x61\x86\xf6\x0e\xff\xe3\xdf\xf6\x3e\x7f\xce\x7f\xda\xff\xf5\x70\x31\xec\xf0\xaf\x84\x16\x0e\x41\x8e\xb2\x08\x6e\x00\x28\xe2\x35\xc5\x40\x1d\xf7\x8f\xe6\x94\xac\x26\x4b\x48\xc5\xce\xdc\x13\xc3\x3c\xe5\x15\xff\x09\xec\x83\x86\x50\xd5\x89\x11\x10\x75\xd2\xfc\x83\x71\x48\x39\xca\x5f\x3d\xa4\x60\x20\x8c\xd4\x60\x18\x83\xb4\xf5\x27\x75\xf5\xe9\x93\x62\x85\xee\x39\xf9\x12\x45\xa3\xb7\x5a\xda\xfc\x23\x0e\x28\xbc\x73\x0a\x8e\xa2\x00\xe4\x0e\x51\x5a\xe4\x88\xa5\xf1\xe5\x29\x44\xba\x37\xeb\x5d\x37\xe0\x53\xdf\x00\x20\xd5\x1b\xc3\x15\x4a\xad\x45\x0d\x1b\xc1\xa7\x9f\xc0\x80\x2d\x07\x43\x30\x38\xc8\x06\xed\x53\xa1\xac\x7d\x68\xbf\xc4\x5e\x06\x47\x6d\xa2\x42\x65\xb7\xe8\x2b\x78\x09\x2e\x21\x5f\x8e\xe6\x25\x21\x74\x4f\xfe\x93\xca\x8e\x8f\xbd\xfd\x1f\x8f\xc6\xe3\xf1\x38\xac\x13\x25\x59\xec\x59\x4b\x02\x3f\x81\x41\x3a\x00\x3f\xb5\xe6\xe5\x27\x30\x38\x14\x7a\x20\x67\x79\x29\xde\xc8\xe9\x7e\x02\x83\x15\x6b\x16\x2a\x1f\x5b\x9a\x6f\x28\x39\xa2\x34\xaa\xdd\x52\x16\x8c\x94\x68\x24\x08\x19\x20\x4a\x8f\x07\x43\x20\x46\x04\xa9\x15\x7f\x18\xe2\xda\x5d\xed\xb5\x53\xec\x83\xb5\x70\x0e\x23\xaa\x32\xa4\x3d\xa5\xe5\xed\xc6\x1d\xe5\x04\xa3\x7d\x61\x44\x04\xe9\x3b\xef\x19\x9f\xe1\xcd\x84\x92\x6d\x2b\xc4\x18\x5c\xa0\x21\xc8\x6e\x7a\x2c\x03\x93\xa1\x99\x30\xd2\x82\x89\x07\x82\x51\x7b\xc2\x13\x9d\x42\x8e\xf6\xf6\xf7\x47\x0b\xb5\x9c\x80\x1b\x02\x3b\x6f\xd9\xc6\xc5\x08\xfb\x99\xb6\xbf\xa2\xdb\xa4\x6c\x02\x46\x05\xcf\x42\xc1\xa3\xe2\x49\x44\x63\xd8\x28\xb3\x23\xcf\x96\xe1\x4f\x14\xfa\x36\x99\xef\xc6\x06\x4d\x9d\x8a\x71\x77\xda\xd1\x5a\x84\x29\x68\x65\x29\xc2\x24\xc6\xe1\xaa\x4a\x23\x62\xda\xb2\xa3\xa3\x4c\x07\x8f\x97\x13\x78\x8c\xac\x40\x4c\x5e\xc0\xe1\xb7\x5e\x6a\x9c\xd9\x52\xc0\x95\x91\x2e\x74\xdb\xe9\x26\xb6\x77\x7c\x27\x6b\xd6\x78\xac\xa8\x3f\x70\x9c\xef\x34\xd9\xe8\x90\x63\x4b\x61\x4e\x84\x14\xb3\x25\xa1\x5c\x47\x0d\x57\x75\x4f\x91\x4e\xeb\x44\x2a\x81\xb6\x06\xf3\x46\x10\x3f\xba\x20\x78\xd1\xc4\xec\x2c\x5b\xa2\xbc\xb6\xbf\xb7\x32\xd3\xcf\xce\xee\x2b\x8a\x58\x53\x2c\x92\xc4\xe9\x37\x4e\x5b\x92\x3a\x0e\xf5\x6a\xe6\x32\x6c\x8f\xc6\xf6\x5d\xae\x12\xb9\x94\x7a\x9e\x07\x08\xd6\x27\xaf\xce\xe1\x6d\xa5\x8f\x2f\x3f\x37\x57\x8e\x3f\x27\x29\xf8\x2c\xc7\xea\xf2\x38\xd8\x6c\x3e\x27\x43\xf0\x39\xd1\xc6\xbc\x03\xd0\x37\x0a\x25\x80\x21\xe3\x50\x59\x36\x20\x22\x95\x79\x4d\x11\x5d\x15\x8c\x85\x52\x34\xe0\xe6\x68\x06\x6c\x48\x6a\xc0\x2e\xaf\x66\x6d\xd7\xa2\xca\xd5\xd3\x73\x7c\x47\x6e\x51\xe8\x0b\x22\x56\xbe\x06\x9e\xc8\x77\xa3\x72\x2a\x26\x95\x0e\x90\x39\xb5\x52\x53\x55\x64\x2a\x2d\xd1\x44\x9b\x08\x3d\x8d\x36\x26\xee\xdb\x38\xe1\xd2\x77\xf0\x1b\xa7\xea\xe2\xba\xaa\x85\xbc\x81\xec\x6c\x62\x7e\xf3\x4a\x12\xf5\x8e\x5a\x85\x87\xbe\x0f\x96\x7a\x75\x95\x9a\x1d\x20\xc8\xb8\xfc\xbe\x81\xd9\x2e\xf1\x14\x1c\xc7\xcf\xc3\xf1\x15\x3d\x9f\x0e\x89\xe3\x39\x74\xa0\xfa\x20\x43\x98\x53\x58\x3e\x8b\x14\x54\x3f\x7f\x39\xb0\x3a\xc0\x84\xf2\xe5\xb3\xe5\x03\xab\x03\x46\xea\x6f\x8d\x48\x72\x59\xe3\xf9\xd2\xf7\xa5\x84\xd0\x67\x55\x3a\xa5\x16\x6f\x02\xdf\x51\x0c\x7c\x5d\xe0\xca\x00\x6b\x0a\x48\x66\xf7\x97\xb5\x45\x34\x40\xf0\xb3\x03\x61\x47\xf2\xfc\xcf\x0d\x18\xdf\x83\xf4\xae\x88\x78\x0d\x92\x2f\x1a\xdb\xb0\x9d\x6f\xce\x77\x32\x1a\xae\xa9\xbe\x80\x5d\x19\xe1\x7d\x4a\xc3\xab\xa1\xbe\xd0\x56\xaa\x57\x2c\x8f\x99\xc8\x65\x5f\x00\xef\xd0\x63\x9a\xb6\x9c\x51\xae\x38\xdf\xdb\xb1\x6e\xc1\x84\x3f\xea\xe1\x9e\xf8\x45\xc4\xbf\xd3\x69\x5f\xf4\xe8\xc8\x39\xcf\x8a\xd6\x83\xdd\xb3\x36\xeb\xb5\x7b\xf7\xa7\xbf\xf4\x6c\x1f\x04\xba\xf3\x18\xc7\x82\xce\x2b\x75\x24\xe4\xf8\x3d\x07\x66\xa7\x9a\xae\xe1\x2b\xc3\x07\x6f\x8d\x07\xec\x62\x81\xd8\x41\x61\xf8\x98\xd0\x0a\xb8\xec\x23\x42\xeb\xf2\x93\x0f\x16\xff\x58\xde\xb7\xff\x0e\x5e\x6f\xed\x3f\x41\xaa\x99\xb5\x24\x30\xbf\x69\x9b\x59\x55\x77\xf5\x0d\x8a\x9c\xfc\x45\xc6\x28\x83\x80\x68\xd3\x43\xc1\x5e\x53\xb2\x0a\xb6\xc5\x6e\xc7\x76\xe5\xe2\xfa\x58\xf0\xe5\x0e\xb8\xb2\xe3\xad\xc4\x67\xc7\xe9\x49\xcd\x97\x84\x16\x7f\xa0\x60\xa3\xb7\x37\x2a\xd4\x28\x62\x1c\x65\x04\xf9\xfa\x63\x00\x8d\xf3\xc4\xb9\x58\x17\x54\x62\xd3\x83\x6d\xb1\xc7\xe6\x97\xbc\xfc\x0f\x64\xd9\x36\x67\xf6\x73\x9a\xea\x6f\xd8\x69\xa3\x73\x8a\x4a\x24\xf4\xa4\xed\x11\x49\xae\x10\x87\x05\xde\x62\x94\xe4\xa7\xa7\x27\x04\x73\xaa\x7a\xd6\xdc\x26\xe0\xe4\x1a\x3a\x77\xb3\xd7\xcd\x77\x63\x12\x26\x3f\x54\x20\x6c\x6c\xdb\xa9\xa3\x3f\x9b\x07\xec\x08\x40\xc3\xc3\xaa\x32\x81\x7b\x9c\x57\x88\x6d\x06\xd7\xfe\x19\x00\x00\xff\xff\xf4\x8b\x03\x73\xb6\x60\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

