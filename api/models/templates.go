// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\x7b\x6f\xdc\xb8\x11\xff\x3f\x9f\x82\x10\xf2\x47\x6b\xac\xd7\x8f\xe0\xae\xad\xd0\x16\xb0\xd7\xce\xc5\x3d\x27\x67\xec\x3a\x39\xa0\x41\x50\xc8\x5a\xae\x57\x5d\x89\x54\x49\xca\x97\x8d\xb1\xdf\xbd\xc3\x87\x24\x92\xa2\x56\xbb\xb1\x73\xc8\xa1\xbd\x3b\x2f\x39\x1a\x0e\x87\xf3\xf8\xcd\x90\x8f\x8f\x68\x8e\x17\x19\xc1\x28\x4a\xca\x32\x42\x9b\xcd\x0b\x84\x1e\xe1\x1f\x84\xa2\xb3\x5f\x67\xb7\xb8\x28\xf3\x44\xe0\xd7\x94\x15\x89\xf8\x80\x19\xcf\x28\x89\x50\x8c\xa2\xd3\xe3\x93\xe3\xc3\xe3\xbf\xc1\xff\xa3\x91\x26\x9f\x50\x32\xcf\x04\xcc\xf3\x28\x36\x2c\x80\xd5\x23\x12\x86\x07\x8a\xee\x92\x3c\x21\x29\x66\x87\x69\x4b\x8a\xc6\x7a\xcd\x0e\x71\xc9\x68\x8a\x39\xef\xa3\x8d\xce\x81\xd7\x6a\x92\x57\x5c\x60\x26\x17\x44\xd1\x6b\x12\xc7\x97\xff\xab\x92\x5c\x0a\xf0\x51\x8e\x4c\xf1\x02\xfe\x8c\x6a\x2a\xb4\x19\xa1\x28\x42\x9f\x90\x66\xb2\x31\x82\xdf\x24\x2c\x29\x30\x10\x70\xb9\xb3\xed\x92\x97\x92\x76\x07\xa9\x87\xe8\x38\xcf\x5d\x9a\x7a\x5b\xd6\x8e\xcc\x10\x0c\xde\xae\x4b\xac\xb4\x3e\x13\x2c\x23\xf7\x46\xe3\x6a\xea\x02\x2f\x92\x2a\x17\x6a\xd6\x1d\xe7\x29\xcb\x4a\x51\x9f\x57\x64\xa6\x36\xa3\x66\xa5\xb2\x0a\xac\x02\xa4\xef\xaa\xe2\x0e\x24\x08\x2c\xa2\xce\xfd\xb8\x6f\x19\xa9\xe9\x9b\xf7\x88\x2f\x13\x86\x39\xa2\x0b\x84\x93\x74\x89\x8c\x46\xba\xeb\x5f\x92\x87\x8c\x51\x52\x60\x22\xc2\x72\xf4\x6f\x76\xcb\x5e\x83\x5b\xfd\x19\xaf\xbf\xf5\x12\x53\x9c\xe3\x84\xe3\xdf\xe1\xdc\xa6\xb8\xa4\x3c\x13\x94\x85\xf6\xf4\xb4\xc5\x66\xb4\x62\x29\x46\x29\x9d\x63\xc4\xda\x65\x3a\x22\xcc\xaa\x3b\x82\x05\xef\x59\xff\x3a\xe3\xe2\xef\x10\x3c\xc0\x1b\x27\xa7\x71\xac\x89\xe3\xf8\x6a\xfe\xcf\xaf\x91\xe9\xc3\xcd\x04\x71\xbd\x1e\x5a\x50\x86\xc4\x32\xe3\x48\xc6\xaa\x8e\x54\x75\x78\x72\xa4\xb2\xce\x53\x7a\x1e\x17\xdb\xac\x97\x92\x07\xfa\x19\x76\xae\x8e\x12\x3d\x18\x7e\xa3\x5e\xbb\xe9\x8a\x70\x33\xe9\x51\x4a\xab\x0f\xa0\x91\xca\xf8\x5a\x5d\x04\x75\xe0\xc4\xb3\x29\xe6\xea\x1c\xed\xf3\x89\x26\x10\x56\x68\x71\x4b\xcb\x2c\x9d\xd2\x3c\x64\xa7\xb5\x90\x57\x67\x6f\xe3\x58\xd1\x58\x92\xdc\x30\x5a\x62\x26\x32\xec\x1e\xba\xcc\x12\x9c\x57\x05\x96\xf4\x37\x34\xcf\xd2\xf5\x05\x4d\xab\x8e\x4f\x7b\xe7\x23\xb3\xc7\xe9\x21\x24\x90\x93\xbf\x58\x8b\x68\xd3\x12\x70\x4a\xe6\xfb\x8f\xce\x14\xf2\xf8\x29\xf2\xcb\xc5\x02\xa7\xea\x74\xcf\xf2\x9c\xfe\xe6\x71\x33\xa2\x67\x24\xcd\xca\x24\xd7\x59\x62\x86\xd9\x43\x96\x62\x95\x22\xc0\x24\x8a\xbb\x79\x32\x4e\x8a\xe4\x0b\x25\xc9\x6f\x7c\x9c\xd2\x42\x25\x88\x00\x9f\xb3\xd4\xd8\x09\x7c\xc7\x05\x8f\xdb\x8d\xc3\x17\x1e\xf9\xc6\xf9\x6d\xcf\x3a\x9c\x21\xf5\x88\xa5\x14\xfe\x28\x72\x87\xa5\x26\xb5\xae\x5d\x1d\xf8\x1a\xd0\x94\xeb\x77\x90\xbf\x94\x0e\xe6\x45\x46\xc0\xfb\x58\x02\x7e\xdb\xd1\x45\x34\x70\x40\x8a\x66\x97\x43\x52\x84\xce\x41\x49\xc5\x76\x8e\xc2\x52\x59\x74\x20\x7f\xd6\x86\xa9\x07\xd0\x66\x40\x6d\xf6\xaf\x96\x72\xd3\x4d\x64\xad\x69\x6f\x31\xeb\x6b\x75\xd4\x71\xfc\xba\x22\x5a\xaa\x9d\xac\x7b\x02\xa1\xb0\x6b\xc9\xb3\x57\xe7\x55\xba\xc2\xa2\xc5\x1d\xff\xa2\x99\x31\x8d\x43\xd8\x29\xfc\x27\x55\xb1\x04\xfe\x6e\x61\x88\x12\x63\x8a\xef\x95\x37\xc3\xe6\xbb\x76\x06\x8c\x4d\xaa\xf2\xb9\x6a\xa6\x26\x32\x1d\x39\x6c\x1b\x54\x26\xd1\xcd\xd1\x42\x21\x35\xf8\x3d\xfe\x92\x95\x91\x5e\xa4\xd7\xfc\xde\x24\x64\x9e\x2b\xb0\x51\x7b\x02\xfe\x0c\xe0\x83\x80\xaf\x38\x74\x6f\x71\x01\x79\x60\x96\x7d\x51\xea\x3c\x39\xfd\xab\x3b\x5d\x07\x14\x2d\xf4\x4f\x58\x9c\x09\x6d\x15\x9d\xa8\x23\x6d\x82\x91\x8e\x87\x45\xd3\x8a\x88\x4c\xdb\x30\x01\x8d\xff\x97\xbb\x0b\xdc\xc2\x1c\xad\x94\x6d\xbd\x3a\x8e\xfa\x4d\x21\x8c\xd9\x58\x13\x0f\x07\x61\xdb\x1e\xa4\x5c\xc7\x11\x0f\xbf\xb9\x20\x0f\xa7\x15\xcb\xc4\x3a\xea\x03\x81\xd2\x85\x9a\xc9\x3a\x7c\xff\x52\x89\xb2\x12\xc3\x20\x9a\x1a\xba\x41\x49\x5d\xc2\x26\x87\x63\x21\x20\x87\x79\x49\xfc\x43\x92\x57\xe6\x2c\x8d\x79\x35\x74\xad\xba\x5f\xd4\xff\xde\xbc\x80\x05\x31\x99\x2b\xbe\x56\x29\x11\xc2\xee\xba\xb2\x78\x44\x2c\x21\xf7\x18\xbd\x5c\xa1\xf8\x1f\x68\x7c\x49\x04\x53\xd1\x8b\xd7\x7b\xd0\xb8\x1e\xe8\xaa\x12\x5c\x52\xd2\x6d\x36\x6d\xc8\xde\x86\xf2\xc3\xdf\xb4\x98\x7f\xa4\xd7\x37\xe2\x6e\x17\xbc\x86\xe6\x9e\xd0\x58\x09\xdd\x88\xda\xae\x88\xc7\x72\x13\x30\x31\xa1\x45\x01\x4e\x65\x67\xde\x3e\x5c\xe6\x64\x7d\x60\x95\xea\x4f\x25\x33\xc3\x05\xf8\xd9\xd4\x21\x60\x58\x1b\x4d\x40\x14\xf8\x20\x63\x78\x3e\xa1\x95\x13\xeb\x5b\x79\x3c\x9c\xef\xc8\x73\xd2\xbf\xf0\xed\x12\x23\xa2\x3e\x95\x18\x3f\x23\x60\xc5\xe0\xbc\x2a\xe6\x28\xd4\x2f\x60\xde\xe8\x11\x09\x8a\xc0\x18\x01\x52\xca\xdd\xac\x30\x2e\x11\xab\x08\x01\x2d\x20\x4a\xd0\x1a\x5c\x0d\xa5\xa6\xde\x19\xda\xcd\x55\x91\xdc\xe3\xbd\xd5\xfa\x04\xf5\xe9\x98\xd7\x59\x71\x8b\xde\x64\xca\xfc\xe1\xc7\xf0\x92\x30\xf7\xf6\x5c\x6a\x67\x7a\xf6\x56\x6a\x05\x02\x0d\x18\x28\x1e\x94\xc2\x32\xfd\xe7\xdf\xf8\xae\xde\xd0\x04\x10\x65\xf8\xd1\xcf\x30\xc9\xb3\x36\x70\x04\x82\x46\x4d\xa2\xa3\xc4\x68\x80\xbf\x15\x75\x7b\x56\x70\x32\xb9\x99\x85\xca\x42\x30\x9c\x14\x75\xff\x21\x98\xc4\xa3\x19\x54\xa3\x8d\x0f\x9c\xb4\x91\xcb\xec\x3f\x5b\xa0\xf1\x9b\x84\xdf\x68\x49\xac\x30\x74\x4d\xef\xf9\x7b\xee\x14\xe2\x01\x98\xac\x28\x1a\x55\xf7\xc0\x88\x16\xe5\x69\x50\x70\xe4\x40\x8f\x30\xd4\xf3\x00\x87\x0b\xf3\xa4\x6c\x1e\x40\xb7\xa8\xb6\xe0\xbb\x1d\xd1\xdd\x56\x10\x1e\x82\xe1\x3b\x01\x71\x0f\x42\xaf\xcc\x29\xde\x54\x62\x8a\x53\xca\xe6\x70\xfa\x9f\x82\x5f\x59\xb0\xf1\x63\x1f\x32\x4a\x18\x89\x01\xbf\xc7\x35\xd7\x03\xf8\x1f\x57\xe6\x71\xd4\xc5\x60\xb0\xbd\x74\xa5\x94\xa9\xb2\xc3\xe1\x81\xc1\x49\x1d\x3c\xea\x23\x52\xe4\x51\x38\xc8\xea\x85\x4f\xe3\xa6\x75\x79\x68\x67\xa9\x6a\x85\x6c\x35\x29\x4d\x23\x61\xe0\xa0\x5d\x41\x70\xc8\x54\x59\x63\x85\x6b\x73\x7a\x15\x57\x5c\x41\xdf\x0f\x4e\x1d\x27\x0d\xd6\x98\x51\xab\x94\xc6\xd6\xfd\x14\xbf\x4f\x90\x68\xf1\x50\x9d\x34\xfb\x7c\xab\x2f\x9f\x86\x23\xe0\xe5\x64\x76\x9b\xf0\xd5\x85\x5c\x2e\x13\x81\xfa\xbe\x04\xa1\xf8\x2f\xca\x1a\x9c\x52\x60\xd4\xd4\x7a\xca\x57\x3e\x05\xca\x78\x4d\x2e\xeb\x72\x7f\x0d\x8b\xd8\xf2\x99\x93\xf1\xf1\x6e\x65\x83\x59\xf8\x96\xae\x30\x19\x44\xc6\xbd\xa8\xb8\x3d\xa8\x50\x89\xb1\xdd\xa8\x41\x93\xad\x0e\xa3\x6e\xb1\x61\x37\xac\x1a\x46\xf5\x98\x47\xea\x75\xea\x1a\x72\x7b\xdc\xfb\xa4\x29\x63\xea\x84\x80\xd7\x3e\x89\xd4\xb8\xc1\x70\xd2\xb0\x00\x08\xfe\x47\xc0\x10\xd8\x43\x2b\xf8\xd6\xba\x2f\x6c\x2c\xdd\x8c\xe9\x59\x89\xab\xfa\xad\x46\x51\xf3\xfa\x2e\xac\xc1\xe9\x75\x77\x3b\xdb\x36\xa9\x0f\xfd\x02\x18\x39\x0c\x13\x7f\x4f\x03\xec\x7a\xf5\x36\x31\xbb\x2e\xea\xdb\x73\x53\x84\x36\x85\x4b\xeb\xfc\x1e\xed\x35\x4d\xe6\xe7\xa6\x8e\xf2\x4c\x30\x87\xa9\xba\xc4\xe2\x3b\xda\x62\x1b\x18\x87\xc3\x65\xf0\x0e\xc4\x2f\x33\xa4\x24\x4e\x68\x6c\xe7\xb2\x11\x7a\x59\x52\x26\xe4\xb4\x26\x1c\x5f\x9a\x9a\xfd\x06\x86\xb9\x53\x0b\xbe\x84\x3a\x06\x86\x80\xf4\x4f\xbc\xcc\x33\x61\x3e\x8d\xe2\xe8\xcf\xfe\x4d\x8a\xa5\x72\xc5\xd4\x6c\x5a\xf2\x94\xa1\x9c\xcc\xf1\xe7\x9a\xdd\xb1\xac\x73\xa4\xa5\x2f\xb2\x54\x16\xb0\xbb\x96\x65\x7b\x33\x76\x6b\xb7\xaf\xd4\x73\x5f\x29\xb7\x9f\x8e\xaf\x48\x50\xc7\x03\xbb\xd3\x5c\x36\x9b\x37\x94\x87\xee\x38\x86\x9b\xf5\xad\x86\x34\xfb\x29\xd4\x51\xb4\xe0\x0d\xe3\x3d\x6e\x0e\x6c\xe5\x7d\x63\x83\xda\xf3\xc8\x6b\x4f\x7c\xa2\x86\x5a\x86\xfb\xdd\xa7\x3c\xcd\xf2\xf7\x16\xf8\x9b\x0a\xf7\xbd\x19\xda\x90\x97\xda\xd7\xa0\x4f\x73\xd0\xd9\xec\xfa\x99\xcd\x15\x38\xfe\x71\xac\xb5\x47\xd8\xef\xc1\x1e\xf6\x16\x5a\xa2\x9f\xdd\x65\x7e\x36\x5b\xec\x36\x56\xbd\x42\x26\x18\x16\xa3\xda\x1e\x3c\x55\xdb\x4d\x11\x1f\xed\x35\x26\x04\xe9\xed\xe2\xdd\x4c\x63\x26\xef\x55\xc2\x36\x47\xe8\xcc\xf6\x45\xec\xb0\x13\x8c\x3d\x07\x78\xa6\x88\x1d\x6c\x04\x7d\x2d\x63\xab\x9c\xb6\xbb\xfb\x6e\x06\xdb\xff\x68\xfd\x4e\xd3\xae\x87\x3b\x33\x9d\xfc\x9f\x18\xad\xca\xde\xfa\x5d\x5f\x77\x3b\xa4\x83\x35\xbc\x22\x73\x3b\x85\x1d\xb8\x8d\x76\x80\xdb\x87\x77\x8d\xea\x3c\xa8\x1d\x39\x12\x5d\x91\x7b\xa6\x7b\x10\x0a\xf4\x66\xfa\xa7\xb2\x2d\xbb\xfd\x12\x7d\x28\xd3\xab\xb9\x73\x94\xf2\x6e\x3b\xd4\x20\xb0\xd4\xd4\xaf\x99\x3c\xe1\x22\x4b\x5b\xdc\x0d\xeb\xc6\xb1\x0d\xc3\x77\xe8\x76\xb4\x8f\x0e\x5a\x8c\x6f\xc6\x9c\xfd\x4e\x28\x21\x58\x75\x9a\x2e\x58\x92\xc9\x6e\xb3\x6e\x8c\xe9\x2f\x2f\x49\x72\x97\x63\xb9\x35\xc1\x2a\x3c\xb2\x2f\x97\x7e\x3c\xee\xe1\x63\xdf\x95\xa0\xe8\x6a\x9e\xe3\xfe\x8f\x18\xe5\xfc\xdf\x94\xe0\x7a\x81\x76\xea\x0d\x4e\x72\xb1\x9c\x2c\x71\xba\xf2\x1d\x47\x4f\xad\x6f\x97\x70\x18\x4b\x9a\xcf\x55\x83\xce\xbd\x03\x53\x08\xf4\x41\xb5\x7b\x7e\xf0\xea\x28\x76\xaf\xaf\x22\x1f\xd1\x22\x63\x5c\xa4\x72\x05\x75\xa2\x3d\x97\x68\xaf\x9c\xf1\xf7\x64\x19\x5c\xbd\xeb\x80\x48\xbf\xed\xc0\xc4\xaa\x9a\xf2\x7a\xa0\x6b\x42\xd7\xe7\x13\x4a\x57\x19\x9e\xc1\xc9\xab\xbe\x1c\x6f\xce\xe1\xe3\xa3\xdf\xd3\x4c\x16\xaa\xb0\x93\x5d\x02\x87\x87\x65\x22\x9d\xbe\x55\xd7\x0f\x7a\x8c\xde\xaf\x49\xc2\x6e\x6d\x35\x00\xf7\xe8\x7f\x79\x97\x7c\x4e\xd9\x19\xee\x5f\xfb\x0f\x2c\x7a\x3a\xd7\x3b\x3d\xac\xe8\x6d\xd5\x7a\x0d\xe4\xb6\xf3\xea\x8c\xa3\xce\x53\x06\x67\xda\xeb\xc7\x0e\x34\x79\xdd\x97\x16\xfe\x3a\xd6\xbb\x0b\x6f\x0a\x26\x71\xca\xbd\x47\x18\x1e\xcd\x4e\x7d\xd7\x70\x9b\xc6\x6a\x74\x77\x80\x49\xf7\xfd\x45\xb8\x21\xef\x38\xab\x6b\xb8\xf6\x79\x77\x1f\x71\x6c\x79\x0e\xf3\xfc\x2f\x5d\x7a\x0f\x59\xcd\x62\x1d\x83\xdb\x06\x87\x8c\xc1\x3a\xf3\xdc\xe1\x83\x70\xc3\xbe\xe7\x1b\x86\xef\xa5\xdb\xb3\x2b\x75\xf9\x07\xe9\xf4\x35\xa3\x45\x30\x9a\x0f\x73\x9b\xfa\xbc\x7e\xcd\xc4\x72\x07\x5e\xe9\xe9\xa0\xf0\x40\x72\x56\x89\x25\x65\xd9\x17\x1c\x4c\x82\x9d\xaf\x02\x17\x10\xce\xf5\x43\x68\x99\x83\x00\x1b\x6f\x64\xcb\x73\xa0\x17\xfe\x5f\x7a\x76\xeb\xbd\x99\xfd\x6e\xa0\x7b\x8f\xef\x06\x9b\xd9\xab\x38\x36\x8f\x55\x4c\xb4\xb9\xc0\x39\x96\x76\xd2\x04\x63\xd8\xa1\x80\x3c\x39\x10\x8d\xd4\xb5\x04\xa4\x44\xc1\xa8\xba\x72\x00\x67\x7f\x90\x62\x34\x8e\x73\x9b\xdc\x7b\x4e\x53\xb7\x81\x23\xbe\x86\x13\x2e\x24\xdc\xad\x11\x62\xfd\x3e\xc6\x8e\xd9\x2d\xbd\x7c\xda\x36\x0a\xc1\xc9\x4e\xc4\x0f\xa9\xcd\xd2\xda\xff\x03\x00\x00\xff\xff\x2b\x1b\x76\x8f\xdf\x2c\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 11487, mode: os.FileMode(420), modTime: time.Unix(1444773987, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5b\x6f\xda\x30\x14\x7e\xe7\x57\x58\x7e\xda\x24\xc6\x28\x95\x2a\x2d\x9a\x26\x51\xa0\x55\xa4\xb5\x43\x85\x75\x0f\x53\x1f\x8c\x7d\x40\xd6\x82\xed\xd9\x4e\x27\x56\xf1\xdf\x67\x87\x24\xd8\x84\xd0\x8b\xb4\x5e\x50\xc8\x39\xdf\xf9\xce\xdd\x7e\x7a\x42\x0c\x96\x5c\x00\xc2\x06\xf4\x23\xa7\x80\xd1\x76\xdb\x41\xe8\xc9\xfd\x23\x84\x87\x3f\x66\x73\x58\xab\x8c\x58\xb8\x92\x7a\x4d\xec\x3d\x68\xc3\xa5\xc0\x28\x41\x78\xd0\x3f\xeb\x7f\xe8\x7f\x72\x7f\xb8\xbb\x53\x9f\x12\x4d\xd6\x60\x9d\x0e\x4e\x4a\x13\xde\x48\x96\x49\xea\x2c\xb0\x99\x95\x9a\xac\x20\x90\x39\xe9\x7c\xa3\xa0\x30\x77\x9b\xaf\x17\xa0\x4b\x53\x85\x68\x0c\x4b\x92\x67\xb6\x90\x9e\xf5\x63\x89\xa1\x9a\x2b\x5b\xb9\x52\x53\x20\xb3\xe3\x40\x86\xff\x05\xf4\xee\xfa\xf2\x3d\x2e\x51\xdb\x0a\x8e\xc7\xc4\x92\x05\x31\x6d\x7e\xcc\xac\xe6\x62\xd5\xe6\x07\x51\xea\x94\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xb7\xb8\xc1\x16\x3d\x3b\xe8\xad\x39\xd5\xf2\x94\x3b\x15\x0f\xa2\x19\x31\x06\x2d\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xa9\x53\xfc\x23\x35\x7b\x85\x5b\x31\xe7\xcc\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x59\xbe\x10\x60\xcd\x11\x02\x87\xfe\xca\x8d\xfd\xec\xda\x2e\x49\x26\xa3\x41\x92\xec\x74\x93\x24\x65\x5f\xda\x38\x1d\xe8\x7e\x3a\x42\xa6\xb4\xda\xa0\xfb\xee\x3a\xbb\xa8\xc2\x7f\x28\x77\x19\x6b\x5e\x51\x34\xc8\xef\x15\x3d\x1e\xe7\x3e\x44\xe7\xbc\x8f\xef\x74\x78\xb5\xe5\x4e\x60\x1f\x7f\xcb\xad\xca\xa3\x4c\xe2\xa9\xd4\xf6\xfc\xbc\x7f\x31\xa7\x6a\xc8\x98\xf6\x22\x67\x80\x64\x39\xec\x1e\xaf\x44\x92\x5c\x83\x1d\x5a\xeb\xbe\xff\xdc\x77\x08\xee\x22\x3c\x11\x4c\x49\x2e\x6c\xcf\x23\xc1\x18\x8c\x1e\xd0\x36\x6c\x8d\xbd\x6d\xff\xf8\x36\xdb\x05\xf2\xc0\xf0\x44\x3c\xde\x6c\xcc\xef\x2c\x9c\xcc\xc8\xf2\x1d\x2c\x7d\x22\x6a\xf9\x51\x74\xd8\xb9\xc7\xd0\xb5\xfc\x28\x3a\x6c\x93\x63\xe8\x5a\xee\xd1\x51\x15\xee\xc0\xc8\x5c\x53\x88\xea\x30\x03\x9a\x6b\x6e\x37\xd7\x5a\xe6\xea\xb9\x16\x88\x95\x83\x46\x98\x6a\xa9\x40\x5b\x0e\xf1\xb4\x38\x49\xa1\x7a\xd0\x27\x6b\x1f\x07\xaa\x16\x79\x37\x54\x8f\x18\x52\xb1\x2a\xca\xeb\x8a\x14\xe8\x20\x1f\x6c\xaa\x1c\xa5\x95\x54\x66\xde\xa0\xa5\xca\xd7\xee\x4a\xcb\x75\x59\x70\xec\xeb\xef\xdf\xcd\xe5\xe1\x9b\x11\x67\x3a\xf5\xa1\xba\x5d\xdd\x2b\x7e\x3f\x9e\x5d\xe0\x32\x57\xbb\x9f\x87\xc8\x27\x37\x1b\x29\x8b\x72\xec\xa7\x25\x00\x6c\x5b\x56\xc7\x73\x39\xbd\x1b\xbb\x8f\xf1\x65\xa8\xfc\xa2\x9c\x46\x90\x57\xe4\xb6\x00\xa5\xcc\x44\xb1\x54\x5b\xee\x64\x3c\xf5\x84\x3c\x1b\xcc\x7e\x96\x5e\x12\xc9\xb1\x23\xb7\xf6\xac\x21\xdc\x3b\x54\xa6\xa1\x22\x1b\xf9\x53\x23\xc2\x46\x07\x57\x2b\x2e\x65\x20\x2c\x5f\x72\xd0\x31\xb1\x8f\x67\x66\x09\xfd\x75\xbb\x1b\xa4\x03\xf8\x6d\x3d\x7e\xcd\x79\xef\xb6\x16\xaa\x81\x0a\xeb\x7e\x00\x9c\x88\x95\xbb\xec\xd4\xf5\x8c\xeb\x78\x43\x8c\xbb\xba\xc4\x7b\xa0\x39\xfc\x2d\x90\x78\xf9\x34\x37\x4e\x04\x8b\x47\x27\x92\xe4\x8b\x8c\xd3\x6c\x33\xa4\x6e\x9f\x18\xbe\xc8\x0a\x67\x97\x24\x33\x87\x4d\xb7\xab\x5d\xd5\x2a\x2b\x35\x88\xe5\xee\xcc\x88\x66\xbe\x98\xf6\x30\x49\xd1\xca\x71\x3b\xed\xa1\xd9\xa6\x9d\xea\x73\xdb\x71\x17\x45\x10\xcc\xdf\x0d\xff\x05\x00\x00\xff\xff\xc3\x37\xc1\xe6\x33\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1444747254, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x6d\x6b\x1b\x39\x10\xfe\xde\x5f\x21\x44\xa1\x50\x5c\x27\x4e\x28\xc7\x09\xee\x83\x2f\x4d\x5a\x5f\x9d\xc4\xac\xd3\x1e\x5c\x09\x87\xb2\x3b\x76\x74\x5e\x4b\x8b\xa4\x4d\xf3\x82\xff\xfb\x8d\xa4\x5d\xef\x6b\x62\x13\x38\x0e\xea\x86\x95\x1e\xcd\x8c\x9e\x19\x3d\x33\x4f\x4f\x24\x81\x85\x90\x40\xa8\x01\x7d\x27\x62\xa0\x64\xb3\x79\x43\xc8\x13\xfe\x08\xa1\xe3\x3f\xe7\x57\xb0\xce\x52\x6e\xe1\x4c\xe9\x35\xb7\xdf\x41\x1b\xa1\x24\x25\x8c\xd0\xa3\xc3\xd1\xe1\x87\xc3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x4d\xa7\xb5\x4f\x5c\xb8\x7a\xc8\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x81\x89\xb5\xc8\x6c\xe9\x63\xc6\x33\xd0\x56\x73\x91\x92\x6f\xd1\x74\x40\x60\xb8\x1c\x92\x77\xa9\x5a\x9a\xd1\x30\xdb\xee\xf1\x2c\x1b\xc6\x6a\xcd\x46\xa3\xa3\xe3\x8f\xef\x68\x61\x6e\xe3\xff\x6e\x8a\xd8\x22\x30\x2a\xd7\x31\x34\x42\x9b\xf2\xf5\x4d\xc2\x4f\xef\x21\xce\x9d\xcb\x48\xa5\xd0\x13\x2a\xf3\x44\x30\x36\x19\x9f\x33\xe6\x31\xb5\x88\x67\x5a\xb9\x30\x44\xc3\x70\x20\xcf\x98\x7c\x0d\x0e\x3f\x53\xa9\x88\x1f\x3e\xa9\x18\xbf\xa5\x6d\xe1\x10\x59\xb2\x1a\x48\x3d\xfa\x80\xbc\x8e\x7e\xa9\x39\xf1\xa0\xb9\xc5\x2c\x14\xe7\x7f\x34\xb6\x48\xcb\x9e\x87\x9f\x2e\x16\x10\x5b\x1f\x7b\x9a\xaa\x9f\x2d\x6b\x45\xe8\x42\xc6\x22\xe3\x3e\x3d\xe8\xa0\xa8\x00\x34\x4f\x68\xea\x99\x19\xf2\x35\x7f\x54\x92\xff\x34\x8e\x5f\x4a\xae\x4b\x3a\x1b\x76\xc6\xb1\x0d\xd1\xe3\x39\x63\x0d\xab\x2e\x8e\x27\x5a\xf0\x4d\xe3\xbb\xbe\xdb\xb0\x8c\x89\xb7\xb7\x2e\xf8\x03\xda\x5c\x76\x4c\x06\xae\x9b\x1c\xb4\x19\x08\xc8\x87\x0b\xac\x47\x67\x26\x24\xfa\x24\x55\x79\x12\x0a\x19\x03\xfe\x8a\x75\x6f\x84\xe9\x30\x43\x77\xa4\xcb\x63\xf6\x49\x99\x07\xbe\x94\xb6\xbe\xc0\x8b\x63\xbb\xd3\xe7\x61\x15\xf5\xbd\xfb\xa4\x4c\x24\x9b\xc8\x3b\xb5\x82\xb3\x5c\x86\x03\xbd\xe8\xeb\x67\x9c\x94\x4f\xe7\x25\x37\xef\x9f\x31\xd9\xb3\xda\x53\x42\xff\x3d\x0d\xab\x90\x6c\xf6\x19\x6c\x04\xb1\xd2\x49\x37\xef\x7d\xd8\xf9\x2d\xd7\xc9\x04\x15\x8d\x5b\xa5\x77\x9f\x08\xf2\x75\x03\x28\x6c\xc0\xd7\xbb\xf1\x53\x61\x6c\xc0\xbe\x10\x8e\x53\x3b\x76\x82\x20\x0b\x53\xb5\xfc\xac\x55\x9e\xed\x0b\xde\x15\x87\x47\xcf\x72\x8b\xd0\xd3\x3b\xac\x51\xf3\xea\xc2\xe8\x2f\x80\xff\x25\xd5\xb1\x7b\xe5\x8b\xf2\x95\xd7\x72\xc2\xe3\xd5\xeb\x2f\x88\x02\x79\x26\x19\xfb\x43\x89\x42\xe9\xe8\xc0\xfd\xcf\xb5\x64\x28\x8f\xac\xe5\x14\x37\x9f\xdc\xf1\xc5\xb6\x79\x44\xb0\xf4\x4d\x6d\x33\x20\xb4\x67\x7b\x1c\xc7\x2a\x97\x76\x92\x14\x08\xe3\xa2\x3d\x70\x38\x0f\x23\x25\xce\xdf\xc2\xab\x9a\x83\x1d\xbc\x77\x9a\x7c\xdd\x52\xd5\x82\xfb\xce\xda\xcb\x5a\x5c\xff\xaa\x90\xe5\xea\x36\x93\x38\x32\x68\x2e\x97\x40\xde\xae\x06\xe4\xed\x1d\x61\xbf\x91\xe1\x38\xba\x30\x61\x6e\x28\x78\x43\x50\x9e\x61\x5b\x44\x10\xae\x9f\x63\x7f\x76\x7d\xbe\xd5\x1f\xb7\x63\x80\xbf\x58\x50\x68\xc6\x7c\x1d\xce\x3d\xeb\xe5\xb9\x66\x07\xa8\xfa\x2d\xe9\x34\xd2\x53\xc9\x6f\x52\x48\xdc\x8e\xd5\x39\xb4\x3a\x68\xcd\xf4\x58\x87\xf9\x02\x03\xc5\x3b\x6c\x36\xed\x66\x5b\x0a\xa5\x67\x9a\x6c\xb3\x8f\x8a\x30\xb6\xd6\x2d\xfc\xa8\x8d\x26\xf8\x7a\x96\x80\xea\x80\x37\x41\xb3\x9d\x1e\xe9\x5a\x00\x06\x2c\x97\x33\x65\xc4\x76\xb2\xb9\x8a\x26\xe7\x7f\x7f\xb9\x8c\x26\x7f\x5d\x5e\xd4\x8b\xb2\x62\xb1\x4e\x39\xc8\xa4\x22\xb8\xeb\xfa\xf9\x99\xa5\xa4\x75\xab\xfc\x7b\x8d\x2e\x5f\xb8\x4c\x52\x6f\x97\x0a\x99\xc0\xfd\xf0\xb6\x58\x68\xa4\xa2\x1c\x97\xba\xdc\xf4\xcd\x55\xfd\xf4\xd0\x13\x95\x40\x77\x22\x9a\x1f\xff\x9e\xc7\x2b\xf0\x72\x10\x2b\xec\x5d\xf7\x9d\x71\xe8\xf8\x2b\x3c\xb8\xed\xd0\xe0\x0e\xaa\x69\x70\xf8\x28\x32\xfa\xec\x60\x11\xe1\x2b\x13\x61\x28\x90\xe8\xfa\x9f\xa6\xf0\xd2\x2b\xdc\x53\xb9\xf7\x7b\xf4\x91\x76\x9f\x41\x63\xa6\xbc\xcc\x6d\x96\xdb\x3a\x7b\xaf\x78\x1d\x53\x21\x57\x6d\xfe\xbf\xf3\x34\xf7\x21\x6e\xeb\x73\x8f\xaa\xe8\xcc\xd9\xa5\x95\x4a\x6a\x1c\xa4\x7d\x97\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\x32\xc4\xd0\xe1\x13\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3091, mode: os.FileMode(420), modTime: time.Unix(1444747254, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x5b\x6f\xe2\x38\x14\x7e\xe7\x57\x58\x7e\xda\x95\x58\x96\xb2\x17\x69\xa3\xd5\x48\x14\x68\x15\x69\xa6\x83\x0a\xd3\x79\x18\xf5\xc1\xd8\x07\x64\x4d\xb0\x2d\xdb\xe9\xa8\x53\xf1\xdf\xe7\x38\x24\x21\x26\x04\x7a\x47\x21\xe7\x7c\xdf\xb9\x1f\xfb\xe5\x85\x08\x58\x4b\x05\x84\x3a\xb0\x4f\x92\x03\x25\xbb\x5d\x8f\x90\x17\xfc\x27\x84\x8e\xbf\x2e\x96\xb0\x35\x19\xf3\x70\xa3\xed\x96\xf9\x07\xb0\x4e\x6a\x45\x49\x42\xe8\x68\x78\x35\xfc\x63\xf8\x1f\xfe\xd1\xfe\x5e\x7d\xce\x2c\xdb\x82\x47\x1d\x9a\x94\x14\x81\x24\xcb\x34\x47\x06\xb1\xf0\xda\xb2\x0d\x34\x64\x28\x5d\x3e\x1b\x28\xe8\xee\xf2\xed\x0a\x6c\x49\x55\x88\xa6\xb0\x66\x79\xe6\x0b\xe9\xd5\x30\x96\x38\x6e\xa5\xf1\x95\x2b\xb5\x09\xe2\xf6\x36\x88\x93\x3f\x81\xfc\x76\x7b\xfd\x3b\x2d\x51\xbb\x0a\x4e\xa7\xcc\xb3\x15\x73\x5d\x7e\x2c\xbc\x95\x6a\xd3\xe5\x07\x33\xe6\x9c\x23\xa5\x2a\x11\xa5\x0d\xa2\x30\x21\x6d\x17\x52\xe5\x3c\x53\x1c\x0a\xa3\xef\x71\x43\xac\x06\x7e\x34\xd8\x4a\x6e\xf5\x39\x77\x2a\x3b\x84\x67\xcc\x39\xb2\xd6\xb6\xe1\x99\x16\xe0\xda\xae\xcd\x51\xf1\x87\xb6\xe2\x0d\x6e\xc5\x36\x17\xd8\x48\x60\x89\xa9\x78\x5a\x16\x16\xf9\x4a\x81\x77\x27\x0c\x20\xfa\xa3\x74\xfe\x7f\x6c\xbb\x24\x99\x4d\x46\x49\xb2\xd7\x4d\x92\x54\x7c\xe8\xb2\x89\xa0\x87\xf9\x84\xb8\x92\xb5\x65\xee\x0b\x76\x76\x51\x85\xf7\xe4\xd9\x68\xe7\x37\x16\xf3\x74\x39\xe0\xbc\xb2\xd3\xf2\xe0\xc1\xf0\xd3\xc1\x1e\xe2\xc4\x08\x42\x90\xe7\x63\xac\x99\x7b\x0d\x7e\xfa\x39\xf7\x26\x8f\xd2\x49\xe7\xda\xfa\x7f\xfe\xfe\x6b\xb4\xe4\x66\x2c\x84\x0d\x22\x24\x60\x59\x0e\xfb\xc7\x1b\x95\x24\xb7\xe0\xc7\xde\xe3\xf7\x6f\x87\x36\xa1\x7d\x42\x67\x4a\x18\x2d\x95\x1f\x04\x24\x38\x47\xc9\x23\xd9\x35\xfb\xe3\xc0\x1d\x1e\xdf\xc7\x5d\x20\x8f\x88\x67\xea\x69\x5e\x66\xbb\x39\xa1\x11\xf9\x3d\xac\x43\x2e\x6a\x79\x17\x41\xb3\x89\x4f\x11\xd4\xf2\x2e\x82\x66\xd3\x9c\x22\xa8\xe5\x81\x20\x2a\xc7\x3d\x38\x9d\x5b\x0e\x51\x41\x16\xc0\x73\x2b\xfd\xf3\xad\xd5\xb9\xb9\xd4\x0b\xb1\x72\xa3\x23\xe6\x56\x1b\xb0\x5e\x42\x3c\x3b\x28\x29\x54\x8f\x1a\xa6\x6a\x5d\x52\x6d\xf6\x7e\x13\x11\x19\x49\xd5\xa6\x28\x35\x16\xac\xa1\x43\x42\xbc\xa9\x41\xab\x5e\x73\x9d\x05\x4e\xcf\x4d\xa8\xe3\x8d\xd5\xdb\xb2\xf8\x34\xf4\x42\x78\xb7\xd4\xc7\x6f\x26\x52\xd8\x34\x44\x8b\xcb\x7b\x50\xfc\xfe\x79\xf5\x2f\x2d\xd3\xb5\xff\x79\x8c\x7c\xc2\x39\x49\x45\x94\xe6\x30\x39\x0d\xc0\xae\x63\x97\x5c\x4a\xeb\xfd\x14\x3f\xa6\xd7\x4d\xe5\x57\xa5\x35\x82\xbc\x2d\xbd\x05\x2e\x15\x2e\x0a\xa7\xda\x7c\x67\x43\xaa\x07\xe6\x62\x3c\x87\xd1\x7a\x4d\x30\xa7\x8e\xe1\xda\xb3\x96\xf0\xe0\x50\x99\x89\xca\xd8\x24\x9c\x24\x11\x36\x3a\xcc\x3a\x71\xa9\x00\xe5\xe5\x5a\x82\x8d\x0d\x87\x78\x16\x9e\xf1\xef\x77\xfb\x71\x3a\x82\xdf\xd5\x43\xd8\x9e\xfd\x7e\x67\xad\x5a\xa8\x66\xe9\x8f\x80\x33\xb5\xc1\x0b\x10\x3d\xbd\xec\x51\xfe\x89\x39\xbc\xd1\xc4\x0b\xa1\xbd\x05\x3a\x20\xf1\x22\x6a\x6f\x9f\x08\x16\x0f\x50\x24\xc9\x57\x99\xe4\xd9\xf3\x98\xe3\x62\x71\x72\x95\x15\xfe\xae\x59\xe6\x8e\xfb\x6e\x5f\xbe\xaa\x5b\x36\xe6\x88\x08\x4f\x91\x68\xf2\x8b\x99\x6f\xe6\x29\xda\x3d\xb8\xdc\x1e\xdb\x9d\xda\xab\x3e\x77\x3d\xbc\x3f\x82\x12\xe1\xca\xf8\x2b\x00\x00\xff\xff\xa1\x5a\xfe\x19\x4a\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1444747254, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1443527400, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

