'use strict';
let https = require('https');

var aws = require('aws-sdk');
var cloudformation = new aws.CloudFormation();
var querystring = require('querystring');

var params = {
    StackName: '{{ .Rack }}'
};


process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

exports.handler = (event, context) => {
    console.log("REQUEST RECEIVED:\n" + JSON.stringify(event));

    cloudformation.describeStacks(params, (err, data) => {
        if (err) {
            console.log(err);
        } else {
            var dashboard;
            var password;
            var outputs = data.Stacks[0].Outputs;
            var parameters = data.Stacks[0].Parameters;

            for(var i=0; outputs.length>i; i++) {
                if (outputs[i].OutputKey == 'Dashboard') {
                    dashboard = outputs[i].OutputValue;
                }
            }

            for(i=0; parameters.length>i; i++) {
                if (parameters[i].ParameterKey == 'Password') {
                    password = parameters[i].ParameterValue;
                }
            }

            var options = {
                host: dashboard,
                port: 443,
                path: '/apps/' + event.app + '/processes/' + event.process + '/run',
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'User-Agent': 'curl/'
                },
                auth: 'convox:' + password
            };

            const req = https.request(options, (res) => {
                let body = '';
                console.log('Status:', res.statusCode);
                console.log('Headers:', JSON.stringify(res.headers));
                res.setEncoding('utf8');
                res.on('data', (chunk) => body += chunk);
                res.on('end', () => {
                    console.log(body);
                    context.done();
                });
            });

            req.on("error", (error) => {
                console.log('Error:', error);
                context.fail(error);
            });

            var postData = querystring.stringify({
              'command' : event.command
            });

            req.write(postData);
            req.end();
        }
    });
};
