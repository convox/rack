/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proxy.AWSClientContext', null, global);
goog.exportSymbol('proto.proxy.AWSClientContextEnv', null, global);
goog.exportSymbol('proto.proxy.AWSCognitoIdentity', null, global);
goog.exportSymbol('proto.proxy.AWSLambdaContext', null, global);
goog.exportSymbol('proto.proxy.AWSProxyRequest', null, global);
goog.exportSymbol('proto.proxy.ProxyResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.AWSCognitoIdentity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.AWSCognitoIdentity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.AWSCognitoIdentity.displayName = 'proto.proxy.AWSCognitoIdentity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.AWSCognitoIdentity.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.AWSCognitoIdentity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.AWSCognitoIdentity} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.AWSCognitoIdentity.toObject = function(includeInstance, msg) {
  var f, obj = {
    cognitoIdentityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cognitoIdentityPoolId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.AWSCognitoIdentity}
 */
proto.proxy.AWSCognitoIdentity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.AWSCognitoIdentity;
  return proto.proxy.AWSCognitoIdentity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.AWSCognitoIdentity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.AWSCognitoIdentity}
 */
proto.proxy.AWSCognitoIdentity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCognitoIdentityId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCognitoIdentityPoolId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.AWSCognitoIdentity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.AWSCognitoIdentity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.AWSCognitoIdentity} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.AWSCognitoIdentity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCognitoIdentityId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCognitoIdentityPoolId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string cognito_identity_id = 1;
 * @return {string}
 */
proto.proxy.AWSCognitoIdentity.prototype.getCognitoIdentityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proxy.AWSCognitoIdentity.prototype.setCognitoIdentityId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string cognito_identity_pool_id = 2;
 * @return {string}
 */
proto.proxy.AWSCognitoIdentity.prototype.getCognitoIdentityPoolId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proxy.AWSCognitoIdentity.prototype.setCognitoIdentityPoolId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.AWSClientContextEnv = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.AWSClientContextEnv, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.AWSClientContextEnv.displayName = 'proto.proxy.AWSClientContextEnv';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.AWSClientContextEnv.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.AWSClientContextEnv.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.AWSClientContextEnv} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.AWSClientContextEnv.toObject = function(includeInstance, msg) {
  var f, obj = {
    platformVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 2, ""),
    make: jspb.Message.getFieldWithDefault(msg, 3, ""),
    model: jspb.Message.getFieldWithDefault(msg, 4, ""),
    locale: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.AWSClientContextEnv}
 */
proto.proxy.AWSClientContextEnv.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.AWSClientContextEnv;
  return proto.proxy.AWSClientContextEnv.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.AWSClientContextEnv} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.AWSClientContextEnv}
 */
proto.proxy.AWSClientContextEnv.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMake(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.AWSClientContextEnv.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.AWSClientContextEnv.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.AWSClientContextEnv} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.AWSClientContextEnv.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatformVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMake();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string platform_version = 1;
 * @return {string}
 */
proto.proxy.AWSClientContextEnv.prototype.getPlatformVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContextEnv.prototype.setPlatformVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string platform = 2;
 * @return {string}
 */
proto.proxy.AWSClientContextEnv.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContextEnv.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string make = 3;
 * @return {string}
 */
proto.proxy.AWSClientContextEnv.prototype.getMake = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContextEnv.prototype.setMake = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string model = 4;
 * @return {string}
 */
proto.proxy.AWSClientContextEnv.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContextEnv.prototype.setModel = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string locale = 5;
 * @return {string}
 */
proto.proxy.AWSClientContextEnv.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContextEnv.prototype.setLocale = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.AWSClientContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.AWSClientContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.AWSClientContext.displayName = 'proto.proxy.AWSClientContext';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.AWSClientContext.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.AWSClientContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.AWSClientContext} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.AWSClientContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    installationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appTitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appVersionName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    appVersionCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    appPackageName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    env: (f = msg.getEnv()) && proto.proxy.AWSClientContextEnv.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.AWSClientContext}
 */
proto.proxy.AWSClientContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.AWSClientContext;
  return proto.proxy.AWSClientContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.AWSClientContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.AWSClientContext}
 */
proto.proxy.AWSClientContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstallationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVersionName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVersionCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppPackageName(value);
      break;
    case 6:
      var value = new proto.proxy.AWSClientContextEnv;
      reader.readMessage(value,proto.proxy.AWSClientContextEnv.deserializeBinaryFromReader);
      msg.setEnv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.AWSClientContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.AWSClientContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.AWSClientContext} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.AWSClientContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstallationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppVersionName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppVersionCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAppPackageName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEnv();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proxy.AWSClientContextEnv.serializeBinaryToWriter
    );
  }
};


/**
 * optional string installation_id = 1;
 * @return {string}
 */
proto.proxy.AWSClientContext.prototype.getInstallationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContext.prototype.setInstallationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string app_title = 2;
 * @return {string}
 */
proto.proxy.AWSClientContext.prototype.getAppTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContext.prototype.setAppTitle = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string app_version_name = 3;
 * @return {string}
 */
proto.proxy.AWSClientContext.prototype.getAppVersionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContext.prototype.setAppVersionName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string app_version_code = 4;
 * @return {string}
 */
proto.proxy.AWSClientContext.prototype.getAppVersionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContext.prototype.setAppVersionCode = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string app_package_name = 5;
 * @return {string}
 */
proto.proxy.AWSClientContext.prototype.getAppPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proxy.AWSClientContext.prototype.setAppPackageName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional AWSClientContextEnv env = 6;
 * @return {?proto.proxy.AWSClientContextEnv}
 */
proto.proxy.AWSClientContext.prototype.getEnv = function() {
  return /** @type{?proto.proxy.AWSClientContextEnv} */ (
    jspb.Message.getWrapperField(this, proto.proxy.AWSClientContextEnv, 6));
};


/** @param {?proto.proxy.AWSClientContextEnv|undefined} value */
proto.proxy.AWSClientContext.prototype.setEnv = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.proxy.AWSClientContext.prototype.clearEnv = function() {
  this.setEnv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proxy.AWSClientContext.prototype.hasEnv = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.AWSLambdaContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.AWSLambdaContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.AWSLambdaContext.displayName = 'proto.proxy.AWSLambdaContext';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.AWSLambdaContext.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.AWSLambdaContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.AWSLambdaContext} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.AWSLambdaContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    functionName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    functionVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    invokedFunctionArn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    memoryLimitInMb: jspb.Message.getFieldWithDefault(msg, 4, ""),
    awsRequestId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    logGroupName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    logStreamName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    identity: (f = msg.getIdentity()) && proto.proxy.AWSCognitoIdentity.toObject(includeInstance, f),
    clientContext: (f = msg.getClientContext()) && proto.proxy.AWSClientContext.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.AWSLambdaContext}
 */
proto.proxy.AWSLambdaContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.AWSLambdaContext;
  return proto.proxy.AWSLambdaContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.AWSLambdaContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.AWSLambdaContext}
 */
proto.proxy.AWSLambdaContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunctionName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunctionVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvokedFunctionArn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemoryLimitInMb(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAwsRequestId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogGroupName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogStreamName(value);
      break;
    case 8:
      var value = new proto.proxy.AWSCognitoIdentity;
      reader.readMessage(value,proto.proxy.AWSCognitoIdentity.deserializeBinaryFromReader);
      msg.setIdentity(value);
      break;
    case 9:
      var value = new proto.proxy.AWSClientContext;
      reader.readMessage(value,proto.proxy.AWSClientContext.deserializeBinaryFromReader);
      msg.setClientContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.AWSLambdaContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.AWSLambdaContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.AWSLambdaContext} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.AWSLambdaContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunctionName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunctionVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInvokedFunctionArn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMemoryLimitInMb();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAwsRequestId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLogGroupName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLogStreamName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIdentity();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.proxy.AWSCognitoIdentity.serializeBinaryToWriter
    );
  }
  f = message.getClientContext();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.proxy.AWSClientContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional string function_name = 1;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getFunctionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setFunctionName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string function_version = 2;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getFunctionVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setFunctionVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string invoked_function_arn = 3;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getInvokedFunctionArn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setInvokedFunctionArn = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string memory_limit_in_mb = 4;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getMemoryLimitInMb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setMemoryLimitInMb = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string aws_request_id = 5;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getAwsRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setAwsRequestId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string log_group_name = 6;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getLogGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setLogGroupName = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string log_stream_name = 7;
 * @return {string}
 */
proto.proxy.AWSLambdaContext.prototype.getLogStreamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.proxy.AWSLambdaContext.prototype.setLogStreamName = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional AWSCognitoIdentity identity = 8;
 * @return {?proto.proxy.AWSCognitoIdentity}
 */
proto.proxy.AWSLambdaContext.prototype.getIdentity = function() {
  return /** @type{?proto.proxy.AWSCognitoIdentity} */ (
    jspb.Message.getWrapperField(this, proto.proxy.AWSCognitoIdentity, 8));
};


/** @param {?proto.proxy.AWSCognitoIdentity|undefined} value */
proto.proxy.AWSLambdaContext.prototype.setIdentity = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.proxy.AWSLambdaContext.prototype.clearIdentity = function() {
  this.setIdentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proxy.AWSLambdaContext.prototype.hasIdentity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AWSClientContext client_context = 9;
 * @return {?proto.proxy.AWSClientContext}
 */
proto.proxy.AWSLambdaContext.prototype.getClientContext = function() {
  return /** @type{?proto.proxy.AWSClientContext} */ (
    jspb.Message.getWrapperField(this, proto.proxy.AWSClientContext, 9));
};


/** @param {?proto.proxy.AWSClientContext|undefined} value */
proto.proxy.AWSLambdaContext.prototype.setClientContext = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.proxy.AWSLambdaContext.prototype.clearClientContext = function() {
  this.setClientContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proxy.AWSLambdaContext.prototype.hasClientContext = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.AWSProxyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.AWSProxyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.AWSProxyRequest.displayName = 'proto.proxy.AWSProxyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.AWSProxyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.AWSProxyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.AWSProxyRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.AWSProxyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && proto.proxy.AWSLambdaContext.toObject(includeInstance, f),
    event: msg.getEvent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.AWSProxyRequest}
 */
proto.proxy.AWSProxyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.AWSProxyRequest;
  return proto.proxy.AWSProxyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.AWSProxyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.AWSProxyRequest}
 */
proto.proxy.AWSProxyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proxy.AWSLambdaContext;
      reader.readMessage(value,proto.proxy.AWSLambdaContext.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.AWSProxyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.AWSProxyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.AWSProxyRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.AWSProxyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proxy.AWSLambdaContext.serializeBinaryToWriter
    );
  }
  f = message.getEvent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional AWSLambdaContext context = 1;
 * @return {?proto.proxy.AWSLambdaContext}
 */
proto.proxy.AWSProxyRequest.prototype.getContext = function() {
  return /** @type{?proto.proxy.AWSLambdaContext} */ (
    jspb.Message.getWrapperField(this, proto.proxy.AWSLambdaContext, 1));
};


/** @param {?proto.proxy.AWSLambdaContext|undefined} value */
proto.proxy.AWSProxyRequest.prototype.setContext = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proxy.AWSProxyRequest.prototype.clearContext = function() {
  this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proxy.AWSProxyRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes event = 2;
 * @return {!(string|Uint8Array)}
 */
proto.proxy.AWSProxyRequest.prototype.getEvent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes event = 2;
 * This is a type-conversion wrapper around `getEvent()`
 * @return {string}
 */
proto.proxy.AWSProxyRequest.prototype.getEvent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEvent()));
};


/**
 * optional bytes event = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEvent()`
 * @return {!Uint8Array}
 */
proto.proxy.AWSProxyRequest.prototype.getEvent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEvent()));
};


/** @param {!(string|Uint8Array)} value */
proto.proxy.AWSProxyRequest.prototype.setEvent = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proxy.ProxyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proxy.ProxyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proxy.ProxyResponse.displayName = 'proto.proxy.ProxyResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proxy.ProxyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proxy.ProxyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proxy.ProxyResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.proxy.ProxyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: msg.getBody_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proxy.ProxyResponse}
 */
proto.proxy.ProxyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proxy.ProxyResponse;
  return proto.proxy.ProxyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proxy.ProxyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proxy.ProxyResponse}
 */
proto.proxy.ProxyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proxy.ProxyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proxy.ProxyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proxy.ProxyResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.proxy.ProxyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes body = 1;
 * @return {!(string|Uint8Array)}
 */
proto.proxy.ProxyResponse.prototype.getBody = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes body = 1;
 * This is a type-conversion wrapper around `getBody()`
 * @return {string}
 */
proto.proxy.ProxyResponse.prototype.getBody_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBody()));
};


/**
 * optional bytes body = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBody()`
 * @return {!Uint8Array}
 */
proto.proxy.ProxyResponse.prototype.getBody_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBody()));
};


/** @param {!(string|Uint8Array)} value */
proto.proxy.ProxyResponse.prototype.setBody = function(value) {
  jspb.Message.setField(this, 1, value);
};


goog.object.extend(exports, proto.proxy);
