#!/bin/bash
set -ex

# Running locally:
#
#   export CIRCLE_ARTIFACTS=/tmp/
#   export CIRCLE_BUILD_NUM=0
#   ./ci/tests/example-app <repo from node-example>

export EXAMPLE_NAME=$1

# inferred
export CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM:-0}
export APP_NAME=${EXAMPLE_NAME}-${CIRCLE_BUILD_NUM}
export STACK_NAME=convox-${CIRCLE_BUILD_NUM}

# Helpers to wait for stack and deployment status
# Timeout after 20m
wait_for_app_state() {
  local c=0

  sleep 10

  while convox apps info --app $APP_NAME | grep -i $1; do
    let c=c+1
    [ $c -gt 60 ] && exit 1

    sleep 20
  done
}

wait_for_app_deployment() {
  local c=0

  sleep 10

  while convox ps --app $APP_NAME | grep -i PENDING; do
    let c=c+1
    [ $c -gt 60 ] && exit 1

    sleep 20
  done
}

wait_for_app_response() {
  local c=0

  while ! curl -m2 $1; do
    let c=c+1
    [ $c -gt 60 ] && exit 1

    sleep 20
  done
}

convox logs --app $STACK_NAME > $CIRCLE_ARTIFACTS/convox.log &

git clone git@github.com:convox-examples/${EXAMPLE_NAME}.git
cd ${EXAMPLE_NAME}

convox apps create $APP_NAME

wait_for_app_state creating

convox logs --app $APP_NAME > $CIRCLE_ARTIFACTS/$APP_NAME.log &

convox deploy --app $APP_NAME

wait_for_app_state updating

wait_for_app_deployment

convox apps info --app $APP_NAME

#note: would like to do something like: `convox apps endpoint web --port 80`
url=http://$(convox apps info --app $APP_NAME | egrep -o "[^ ]*${EXAMPLE_NAME}.*.amazonaws.com:80")

wait_for_app_response $url

convox apps info -app $APP_NAME

convox scale web --count 2 --memory 512 --app $APP_NAME

wait_for_app_state updating

wait_for_app_deployment

convox ps --app $APP_NAME

convox run --app $APP_NAME web echo "hello world" | grep "hello world"
