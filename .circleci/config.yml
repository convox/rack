version: 2.1

defaults:
  deploy: &deploy
    requires:
      - ci/staging/rack
  filter-releases-any: &filter-releases-any
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9]{14}.*/
  filter-releases-master: &filter-releases-master
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9]{14}/
  nightly: &nightly
    schedule:
      cron: "0 8 * * *"
      filters:
        branches:
          only:
            - master

workflows:
  version: 2
  cleanup:
    jobs:
      - cleanup
    triggers:
      - <<: *nightly
  test:
    jobs:
      - test
  release:
    jobs:
      - ci:
          <<: *filter-releases-any
          name: ci/aws/public
          provider: aws
      - ci:
          <<: *filter-releases-any
          name: ci/aws/private
          provider: aws
          args: Private=Yes
      # - ci:
      #     <<: *filter-releases-any
      #     name: ci/kaws
      #     provider: kaws
      - update:
          <<: *filter-releases-master
          context: staging
          requires:
            - ci/aws/public
            - ci/aws/private
            # - ci/kaws
          name: ci/staging/rack
      - deploy:
          <<: *filter-releases-master
          <<: *deploy
          context: staging
          name: ci/staging/app/docs-staging
          repo: https://github.com/convox/docs
          app: docs-staging
          check: https://docs-staging.convox.com
      - deploy:
          <<: *filter-releases-master
          <<: *deploy
          context: staging
          name: ci/staging/app/httpd
          repo: https://github.com/convox-examples/httpd
          app: httpd
          check: https://httpd-staging.convox.com
      - deploy:
          <<: *filter-releases-master
          <<: *deploy
          context: staging
          name: ci/staging/app/site-staging
          repo: https://github.com/convox/site
          app: site-staging
          check: https://site-staging.convox.com

jobs:
  ci:
    parameters:
      provider:
        type: string
      args:
        type: string
        default: ""
    docker:
      - image: circleci/golang:1.12
    environment:
      PROVIDER: <<parameters.provider>>
      ARGS: <<parameters.args>>
    steps:
      - checkout
      - ci-dependencies
      - ci-install
      - ci-test
      - ci-uninstall
  cleanup:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - ci-dependencies
      - run: scripts/ci-cleanup
  deploy:
    parameters:
      app:
        type: string
      check:
        type: string
      repo:
        type: string
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - ci-dependencies
      - run: ci/deploy.sh <<parameters.repo>> <<parameters.app>> <<parameters.check>>
  test:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/convox/rack
    steps:
      - checkout
      - ci-dependencies
      - run: go install ./cmd/convox
      - run: make test
      - run: curl -s https://codecov.io/bash | bash
  update:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - ci-dependencies
      - run: ci/update.sh

commands:
  ci-dependencies:
    steps:
      - run: ci/dependencies.sh
  ci-install:
    steps:
      - run:
          command: ci/install.sh
          no_output_timeout: 20m
  ci-test:
    steps:
      - run:
          command: ci/test.sh
          no_output_timeout: 40m
  ci-uninstall:
    steps:
      - run:
          command: ci/uninstall.sh
          no_output_timeout: 30m
