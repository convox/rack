version: 2.1

defaults:
  deploy: &deploy
    requires:
      - ci/staging/rack
  filter-releases-any: &filter-releases-any
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9]{14}.*/
  filter-releases-master: &filter-releases-master
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9]{14}/

workflows:
  version: 2
  cleanup:
    jobs:
      - cleanup
    triggers:
      - schedule:
          cron: "0 7 * * *"
          filters:
            branches:
              only:
                - master
  cleanup_all:
    jobs:
      - cleanup_all
    triggers:
      - schedule:
          cron: "0 8,9 * * *"
          filters:
            branches:
              only:
                - master
  test:
    jobs:
      - test
  release:
    jobs:
      - ci:
          <<: *filter-releases-any
          name: ci/aws/public
          provider: aws
      - ci:
          <<: *filter-releases-any
          name: ci/aws/public-existing-vpc
          provider: aws
          args: "ExistingVpc=vpc-00e18642ac66249c5 InternetGateway=igw-0e2ed6542ed5343f2 Subnet0CIDR=172.0.1.0/24 Subnet1CIDR=172.0.2.0/24 Subnet2CIDR=172.0.3.0/24 SubnetPrivate0CIDR=172.0.4.0/24 SubnetPrivate1CIDR=172.0.5.0/24 SubnetPrivate2CIDR=172.0.6.0/24 VPCCIDR=172.0.0.0/16"
      - ci:
          <<: *filter-releases-any
          name: ci/aws/public/arm64
          provider: aws
          args: "InstanceType=t4g.small BuildInstance=t4g.small"
      - ci:
          <<: *filter-releases-any
          name: ci/aws/private
          provider: aws
          args: Private=Yes
      - update:
          <<: *filter-releases-master
          context: staging
          requires:
            - ci/aws/public
            - ci/aws/public-existing-vpc
            - ci/aws/public/arm64
            - ci/aws/private
          name: ci/staging/rack
      - deploy:
          <<: *filter-releases-master
          <<: *deploy
          context: staging
          name: ci/staging/app/docs-staging
          repo: https://github.com/convox/docs
          app: docs-staging
          check: https://docs-staging.convox.com
      - deploy:
          <<: *filter-releases-master
          <<: *deploy
          context: staging
          name: ci/staging/app/httpd
          repo: https://github.com/convox-examples/httpd
          app: httpd
          check: https://httpd-staging.convox.com

jobs:
  ci:
    parameters:
      provider:
        type: string
      args:
        type: string
        default: ""
    docker:
      - image: circleci/golang:1.16
    environment:
      PROVIDER: <<parameters.provider>>
      ARGS: <<parameters.args>>
    steps:
      - checkout
      - ci-dependencies
      - ci-install
      - ci-test
      - run:
          command: ci/uninstall.sh
          no_output_timeout: 90m
          when: always
  cleanup:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - ci-dependencies
      - run: scripts/ci-cleanup
  cleanup_all:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - ci-dependencies
      - run: scripts/ci-cleanup all
  deploy:
    parameters:
      app:
        type: string
      check:
        type: string
      repo:
        type: string
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - ci-dependencies
      - run: ci/deploy.sh <<parameters.repo>> <<parameters.app>> <<parameters.check>>
  test:
    docker:
      - image: circleci/golang:1.16
    working_directory: /go/src/github.com/convox/rack
    steps:
      - checkout
      - ci-dependencies
      - run: go install ./cmd/convox
      - run:
          command: make test
          no_output_timeout: 20m
      - run: curl -s https://codecov.io/bash | bash
  update:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - ci-dependencies
      - run: ci/update.sh

commands:
  ci-dependencies:
    steps:
      - run: ci/dependencies.sh
  ci-install:
    steps:
      - run:
          command: ci/install.sh
          no_output_timeout: 20m
  ci-test:
    steps:
      - run:
          command: ci/test.sh
          no_output_timeout: 40m
  ci-uninstall:
    steps:
      - run:
          command: ci/uninstall.sh
          no_output_timeout: 90m
